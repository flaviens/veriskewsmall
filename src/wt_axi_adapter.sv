// Copyright Flavien Solt, ETH Zurich.
// Licensed under the General Public License, Version 3.0, see LICENSE for details.
// SPDX-License-Identifier: GPL-3.0-only
/* Generated by Yosys 0.22+29 (git sha1 1d897fc09, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os) */
module paramod13ef5dd719af6cd740bb9084133c732dec4a72b2fifo_v3 (clk_i, rst_ni, flush_i, testmode_i, full_o, empty_o, usage_o, data_i, push_i, data_o, pop_i, usage_o_t0, testmode_i_t0, push_i_t0, pop_i_t0, full_o_t0, flush_i_t0, empty_o_t0, data_o_t0, data_i_t0);
  wire [1:0] _000_;
  wire [1:0] _001_;
  wire [2:0] _002_;
  wire [2:0] _003_;
  wire [1:0] _004_;
  wire [1:0] _005_;
  wire [2:0] _006_;
  wire [2:0] _007_;
  wire [1:0] _008_;
  wire [1:0] _009_;
  wire [2:0] _010_;
  wire [2:0] _011_;
  wire [1:0] _012_;
  wire [1:0] _013_;
  wire [31:0] _014_;
  wire [31:0] _015_;
  wire [31:0] _016_;
  wire [31:0] _017_;
  wire [31:0] _018_;
  wire [31:0] _019_;
  wire [7:0] _020_;
  wire [7:0] _021_;
  wire [7:0] _022_;
  wire [7:0] _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire [31:0] _034_;
  wire [31:0] _035_;
  wire [31:0] _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire [1:0] _041_;
  wire [1:0] _042_;
  wire [3:0] _043_;
  wire [1:0] _044_;
  wire [2:0] _045_;
  wire [32:0] _046_;
  wire [7:0] _047_;
  wire [7:0] _048_;
  wire [2:0] _049_;
  wire [1:0] _050_;
  wire [2:0] _051_;
  wire [2:0] _052_;
  wire [1:0] _053_;
  wire [2:0] _054_;
  wire [1:0] _055_;
  wire [32:0] _056_;
  wire [32:0] _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire [31:0] _071_;
  wire [31:0] _072_;
  wire [31:0] _073_;
  wire [7:0] _074_;
  wire [7:0] _075_;
  wire [7:0] _076_;
  wire [7:0] _077_;
  wire [7:0] _078_;
  wire [7:0] _079_;
  wire [1:0] _080_;
  wire [1:0] _081_;
  wire [1:0] _082_;
  wire [1:0] _083_;
  wire [1:0] _084_;
  wire [1:0] _085_;
  wire [2:0] _086_;
  wire [2:0] _087_;
  wire [2:0] _088_;
  wire [7:0] _089_;
  wire [7:0] _090_;
  wire [7:0] _091_;
  wire [1:0] _092_;
  wire [1:0] _093_;
  wire [3:0] _094_;
  wire [1:0] _095_;
  wire [1:0] _096_;
  wire [2:0] _097_;
  wire [2:0] _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire [32:0] _114_;
  wire [7:0] _115_;
  wire [7:0] _116_;
  wire [7:0] _117_;
  wire [2:0] _118_;
  wire [2:0] _119_;
  wire [2:0] _120_;
  wire [1:0] _121_;
  wire [1:0] _122_;
  wire [1:0] _123_;
  wire [1:0] _124_;
  wire [1:0] _125_;
  wire [2:0] _126_;
  wire [2:0] _127_;
  wire [2:0] _128_;
  wire [2:0] _129_;
  wire [2:0] _130_;
  wire [2:0] _131_;
  wire [1:0] _132_;
  wire [1:0] _133_;
  wire [1:0] _134_;
  wire [2:0] _135_;
  wire [2:0] _136_;
  wire [2:0] _137_;
  wire [1:0] _138_;
  wire [1:0] _139_;
  wire [1:0] _140_;
  wire [31:0] _141_;
  wire [31:0] _142_;
  wire [31:0] _143_;
  wire [7:0] _144_;
  wire [7:0] _145_;
  wire [1:0] _146_;
  wire [1:0] _147_;
  wire [1:0] _148_;
  wire [1:0] _149_;
  wire [1:0] _150_;
  wire [1:0] _151_;
  wire [1:0] _152_;
  wire [1:0] _153_;
  wire [2:0] _154_;
  wire [2:0] _155_;
  wire [2:0] _156_;
  wire [2:0] _157_;
  wire [7:0] _158_;
  wire [7:0] _159_;
  wire [7:0] _160_;
  wire [7:0] _161_;
  wire [1:0] _162_;
  wire [1:0] _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire [32:0] _169_;
  wire [7:0] _170_;
  wire [2:0] _171_;
  wire [2:0] _172_;
  wire [2:0] _173_;
  wire [1:0] _174_;
  wire [1:0] _175_;
  wire [1:0] _176_;
  wire [1:0] _177_;
  wire [2:0] _178_;
  wire [2:0] _179_;
  wire [2:0] _180_;
  wire [2:0] _181_;
  wire [2:0] _182_;
  wire [2:0] _183_;
  wire [1:0] _184_;
  wire [1:0] _185_;
  wire [1:0] _186_;
  wire [2:0] _187_;
  wire [2:0] _188_;
  wire [2:0] _189_;
  wire [1:0] _190_;
  wire [1:0] _191_;
  wire [1:0] _192_;
  wire [31:0] _193_;
  wire [31:0] _194_;
  wire [31:0] _195_;
  wire [31:0] _196_;
  wire [1:0] _197_;
  wire [1:0] _198_;
  wire [2:0] _199_;
  wire [7:0] _200_;
  wire [32:0] _201_;
  wire [2:0] _202_;
  wire [31:0] _203_;
  wire _204_;
  wire _205_;
  wire [31:0] _206_;
  wire [31:0] _207_;
  wire [31:0] _208_;
  wire [31:0] _209_;
  wire [31:0] _210_;
  wire [31:0] _211_;
  wire [31:0] _212_;
  wire [31:0] _213_;
  wire [7:0] _214_;
  wire [7:0] _215_;
  wire [1:0] _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire [32:0] _226_;
  wire [32:0] _227_;
  wire [7:0] _228_;
  wire [7:0] _229_;
  wire _230_;
  wire _231_;
  wire [7:0] _232_;
  wire [7:0] _233_;
  wire [7:0] _234_;
  wire [31:0] _235_;
  input clk_i;
  wire clk_i;
  input [1:0] data_i;
  wire [1:0] data_i;
  input [1:0] data_i_t0;
  wire [1:0] data_i_t0;
  output [1:0] data_o;
  wire [1:0] data_o;
  output [1:0] data_o_t0;
  wire [1:0] data_o_t0;
  output empty_o;
  wire empty_o;
  output empty_o_t0;
  wire empty_o_t0;
  input flush_i;
  wire flush_i;
  input flush_i_t0;
  wire flush_i_t0;
  output full_o;
  wire full_o;
  output full_o_t0;
  wire full_o_t0;
  wire [7:0] mem_n;
  wire [7:0] mem_n_t0;
  reg [7:0] mem_q;
  reg [7:0] mem_q_t0;
  input pop_i;
  wire pop_i;
  input pop_i_t0;
  wire pop_i_t0;
  input push_i;
  wire push_i;
  input push_i_t0;
  wire push_i_t0;
  wire [1:0] read_pointer_n;
  wire [1:0] read_pointer_n_t0;
  reg [1:0] read_pointer_q;
  reg [1:0] read_pointer_q_t0;
  input rst_ni;
  wire rst_ni;
  wire [2:0] status_cnt_n;
  wire [2:0] status_cnt_n_t0;
  reg [2:0] status_cnt_q;
  reg [2:0] status_cnt_q_t0;
  input testmode_i;
  wire testmode_i;
  input testmode_i_t0;
  wire testmode_i_t0;
  output [1:0] usage_o;
  wire [1:0] usage_o;
  output [1:0] usage_o_t0;
  wire [1:0] usage_o_t0;
  wire [1:0] write_pointer_n;
  wire [1:0] write_pointer_n_t0;
  reg [1:0] write_pointer_q;
  reg [1:0] write_pointer_q_t0;
  assign { _014_[31:2] , _012_ } = write_pointer_q + 32'd1;
  assign _016_ = status_cnt_q + 32'd1;
  assign { _018_[31:2] , _008_ } = read_pointer_q + 32'd1;
  assign _020_ = 2'h3 & data_i;
  assign _022_ = mem_q & _228_;
  assign _034_ = ~ { 30'h00000000 , write_pointer_q_t0 };
  assign _036_ = ~ { 30'h00000000 , read_pointer_q_t0 };
  assign _071_ = { 30'h00000000 , write_pointer_q } & _034_;
  assign _073_ = { 30'h00000000 , read_pointer_q } & _036_;
  assign _206_ = _071_ + 32'd1;
  assign _208_ = _072_ + 32'd1;
  assign _210_ = _073_ + 32'd1;
  assign _141_ = { 30'h00000000 , write_pointer_q } | { 30'h00000000 , write_pointer_q_t0 };
  assign _143_ = { 30'h00000000 , read_pointer_q } | { 30'h00000000 , read_pointer_q_t0 };
  assign _207_ = _141_ + 32'd1;
  assign _209_ = _142_ + 32'd1;
  assign _211_ = _143_ + 32'd1;
  assign _194_ = _206_ ^ _207_;
  assign _195_ = _208_ ^ _209_;
  assign _196_ = _210_ ^ _211_;
  assign { _015_[31:2] , _013_ } = _194_ | { 30'h00000000 , write_pointer_q_t0 };
  assign _017_ = _195_ | { 29'h00000000 , status_cnt_q_t0 };
  assign { _019_[31:2] , _009_ } = _196_ | { 30'h00000000 , read_pointer_q_t0 };
  assign _037_ = ~ _024_;
  assign _038_ = ~ _026_;
  assign _039_ = ~ _032_;
  assign _040_ = ~ _217_;
  assign _197_ = _004_ ^ write_pointer_q;
  assign _198_ = _000_ ^ read_pointer_q;
  assign _199_ = _002_ ^ status_cnt_q;
  assign _200_ = mem_n ^ mem_q;
  assign _146_ = _005_ | write_pointer_q_t0;
  assign _150_ = _001_ | read_pointer_q_t0;
  assign _154_ = _003_ | status_cnt_q_t0;
  assign _158_ = mem_n_t0 | mem_q_t0;
  assign _147_ = _197_ | _146_;
  assign _151_ = _198_ | _150_;
  assign _155_ = _199_ | _154_;
  assign _159_ = _200_ | _158_;
  assign _080_ = { { 2{ _024_ } } } & _005_;
  assign _083_ = { { 2{ _026_ } } } & _001_;
  assign _086_ = { { 3{ _032_ } } } & _003_;
  assign _089_ = { { 8{ _217_ } } } & mem_n_t0;
  assign _081_ = { { 2{ _037_ } } } & write_pointer_q_t0;
  assign _084_ = { { 2{ _038_ } } } & read_pointer_q_t0;
  assign _087_ = { { 3{ _039_ } } } & status_cnt_q_t0;
  assign _090_ = { { 8{ _040_ } } } & mem_q_t0;
  assign _082_ = _147_ & { { 2{ _025_ } } };
  assign _085_ = _151_ & { { 2{ _027_ } } };
  assign _088_ = _155_ & { { 3{ _033_ } } };
  assign _091_ = _159_ & { { 8{ _218_ } } };
  assign _148_ = _080_ | _081_;
  assign _152_ = _083_ | _084_;
  assign _156_ = _086_ | _087_;
  assign _160_ = _089_ | _090_;
  assign _149_ = _148_ | _082_;
  assign _153_ = _152_ | _085_;
  assign _157_ = _156_ | _088_;
  assign _161_ = _160_ | _091_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) write_pointer_q_t0 <= 2'h0;
    else write_pointer_q_t0 <= _149_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) read_pointer_q_t0 <= 2'h0;
    else read_pointer_q_t0 <= _153_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) status_cnt_q_t0 <= 3'h0;
    else status_cnt_q_t0 <= _157_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) mem_q_t0 <= 8'h00;
    else mem_q_t0 <= _161_;
  assign _074_ = 8'h00 & { 6'h00 , data_i };
  assign _077_ = mem_q_t0 & _228_;
  assign _075_ = { 6'h00 , data_i_t0 } & 8'h03;
  assign _078_ = _229_ & mem_q;
  assign _076_ = 8'h00 & { 6'h00 , data_i_t0 };
  assign _079_ = mem_q_t0 & _229_;
  assign _144_ = _074_ | _075_;
  assign _145_ = _077_ | _078_;
  assign _021_ = _144_ | _076_;
  assign _023_ = _145_ | _079_;
  assign _062_ = | { _162_[1] , flush_i_t0 };
  assign _044_ = ~ { _162_[1] , flush_i_t0 };
  assign _045_ = ~ status_cnt_q_t0;
  assign _095_ = { _225_ , flush_i } & _044_;
  assign _097_ = status_cnt_q & _045_;
  assign _096_ = 2'h2 & _044_;
  assign _098_ = 3'h4 & _045_;
  assign _204_ = _095_ == _096_;
  assign _205_ = _097_ == _098_;
  assign _031_ = _204_ & _062_;
  assign full_o_t0 = _205_ & _064_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) write_pointer_q <= 2'h0;
    else if (_024_) write_pointer_q <= _004_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) read_pointer_q <= 2'h0;
    else if (_026_) read_pointer_q <= _000_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) status_cnt_q <= 3'h0;
    else if (_032_) status_cnt_q <= _002_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) mem_q <= 8'h00;
    else if (_217_) mem_q <= mem_n;
  assign _099_ = push_i_t0 & _230_;
  assign _102_ = pop_i_t0 & _231_;
  assign _105_ = push_i_t0 & pop_i;
  assign _108_ = _222_ & _230_;
  assign _111_ = _224_ & _231_;
  assign _100_ = full_o_t0 & push_i;
  assign _103_ = empty_o_t0 & pop_i;
  assign _106_ = pop_i_t0 & push_i;
  assign _109_ = full_o_t0 & _221_;
  assign _112_ = empty_o_t0 & _223_;
  assign _101_ = push_i_t0 & full_o_t0;
  assign _104_ = pop_i_t0 & empty_o_t0;
  assign _107_ = push_i_t0 & pop_i_t0;
  assign _110_ = _222_ & full_o_t0;
  assign _113_ = _224_ & empty_o_t0;
  assign _164_ = _099_ | _100_;
  assign _165_ = _102_ | _103_;
  assign _166_ = _105_ | _106_;
  assign _167_ = _108_ | _109_;
  assign _168_ = _111_ | _112_;
  assign _218_ = _164_ | _101_;
  assign _220_ = _165_ | _104_;
  assign _222_ = _166_ | _107_;
  assign _224_ = _167_ | _110_;
  assign _162_[1] = _168_ | _113_;
  assign _059_ = | { _218_ , flush_i_t0 };
  assign _060_ = | { _220_ , flush_i_t0 };
  assign _061_ = | { _218_ , _220_ , _162_[1] , flush_i_t0 };
  assign _064_ = | status_cnt_q_t0;
  assign _041_ = ~ { _218_ , flush_i_t0 };
  assign _042_ = ~ { _220_ , flush_i_t0 };
  assign _043_ = ~ { _162_[1] , _220_ , _218_ , flush_i_t0 };
  assign _092_ = { _217_ , flush_i } & _041_;
  assign _093_ = { _219_ , flush_i } & _042_;
  assign _094_ = { _225_ , _219_ , _217_ , flush_i } & _043_;
  assign _067_ = ! _092_;
  assign _068_ = ! _093_;
  assign _069_ = ! _094_;
  assign _070_ = ! _097_;
  assign _025_ = _067_ & _059_;
  assign _027_ = _068_ & _060_;
  assign _029_ = _069_ & _061_;
  assign empty_o_t0 = _070_ & _064_;
  assign _049_ = ~ { { 3{ flush_i } } };
  assign _050_ = ~ { { 2{ flush_i } } };
  assign _051_ = ~ { { 3{ _225_ } } };
  assign _052_ = ~ { { 3{ _219_ } } };
  assign _053_ = ~ { { 2{ _219_ } } };
  assign _054_ = ~ { { 3{ _217_ } } };
  assign _055_ = ~ { { 2{ _217_ } } };
  assign _171_ = { { 3{ flush_i_t0 } } } | _049_;
  assign _174_ = { { 2{ flush_i_t0 } } } | _050_;
  assign _178_ = { { 3{ _162_[1] } } } | _051_;
  assign _181_ = { { 3{ _220_ } } } | _052_;
  assign _184_ = { { 2{ _220_ } } } | _053_;
  assign _187_ = { { 3{ _218_ } } } | _054_;
  assign _190_ = { { 2{ _218_ } } } | _055_;
  assign _172_ = { { 3{ flush_i_t0 } } } | { { 3{ flush_i } } };
  assign _175_ = { { 2{ flush_i_t0 } } } | { { 2{ flush_i } } };
  assign _179_ = { { 3{ _162_[1] } } } | { { 3{ _225_ } } };
  assign _182_ = { { 3{ _220_ } } } | { { 3{ _219_ } } };
  assign _185_ = { { 2{ _220_ } } } | { { 2{ _219_ } } };
  assign _188_ = { { 3{ _218_ } } } | { { 3{ _217_ } } };
  assign _191_ = { { 2{ _218_ } } } | { { 2{ _217_ } } };
  assign _118_ = status_cnt_n_t0 & _171_;
  assign _121_ = write_pointer_n_t0 & _174_;
  assign _124_ = read_pointer_n_t0 & _174_;
  assign _126_ = _011_ & _178_;
  assign _129_ = _007_ & _181_;
  assign _132_ = 2'h0 & _184_;
  assign _135_ = 3'h0 & _187_;
  assign _138_ = 2'h0 & _190_;
  assign _119_ = 3'h0 & _172_;
  assign _122_ = 2'h0 & _175_;
  assign _127_ = 3'h0 & _179_;
  assign _130_ = _193_[2:0] & _182_;
  assign _133_ = _009_ & _185_;
  assign _136_ = _017_[2:0] & _188_;
  assign _139_ = _013_ & _191_;
  assign _173_ = _118_ | _119_;
  assign _176_ = _121_ | _122_;
  assign _177_ = _124_ | _122_;
  assign _180_ = _126_ | _127_;
  assign _183_ = _129_ | _130_;
  assign _186_ = _132_ | _133_;
  assign _189_ = _135_ | _136_;
  assign _192_ = _138_ | _139_;
  assign _202_ = _006_ ^ _235_[2:0];
  assign _120_ = { { 3{ flush_i_t0 } } } & status_cnt_n;
  assign _123_ = { { 2{ flush_i_t0 } } } & write_pointer_n;
  assign _125_ = { { 2{ flush_i_t0 } } } & read_pointer_n;
  assign _128_ = { { 3{ _162_[1] } } } & _010_;
  assign _131_ = { { 3{ _220_ } } } & _202_;
  assign _134_ = { { 2{ _220_ } } } & _008_;
  assign _137_ = { { 3{ _218_ } } } & _016_[2:0];
  assign _140_ = { { 2{ _218_ } } } & _012_;
  assign _003_ = _120_ | _173_;
  assign _005_ = _123_ | _176_;
  assign _001_ = _125_ | _177_;
  assign status_cnt_n_t0 = _128_ | _180_;
  assign _011_ = _131_ | _183_;
  assign read_pointer_n_t0 = _134_ | _186_;
  assign _007_ = _137_ | _189_;
  assign write_pointer_n_t0 = _140_ | _192_;
  assign _046_ = ~ { 30'h00000000 , write_pointer_q_t0 , 1'h0 };
  assign _114_ = { 30'h00000000 , write_pointer_q , 1'h0 } & _046_;
  assign _169_ = { 30'h00000000 , write_pointer_q , 1'h0 } | { 30'h00000000 , write_pointer_q_t0 , 1'h0 };
  assign _056_ = - _114_;
  assign _057_ = - _169_;
  assign _201_ = _056_ ^ _057_;
  assign _227_ = _201_ | { 30'h00000000 , write_pointer_q_t0 , 1'h0 };
  assign _024_ = | { _217_ , flush_i };
  assign _026_ = | { _219_ , flush_i };
  assign _028_ = | { _225_ , _219_ , _217_ , flush_i };
  assign _030_ = { _225_ , flush_i } != 2'h2;
  assign _032_ = & { _030_ , _028_ };
  assign _047_ = ~ _022_;
  assign _048_ = ~ _233_;
  assign _115_ = _023_ & _048_;
  assign _116_ = _234_ & _047_;
  assign _117_ = _023_ & _234_;
  assign _170_ = _115_ | _116_;
  assign mem_n_t0 = _170_ | _117_;
  assign _063_ = | { _029_ , _031_ };
  assign _163_ = { _030_ , _028_ } | { _031_ , _029_ };
  assign _058_ = & _163_;
  assign _033_ = _063_ & _058_;
  assign _065_ = | _227_;
  assign _214_ = $signed(_226_) < 0 ? 1'h0 << - _226_ : 1'h0 >> _226_;
  assign _215_ = $signed(_226_) < 0 ? _021_ << - _226_ : _021_ >> _226_;
  assign _229_ = { { 8{ _065_ } } } | _214_;
  assign _234_ = { { 8{ _065_ } } } | _215_;
  assign _066_ = | read_pointer_q_t0;
  wire [7:0] _490_ = mem_q_t0;
  assign _216_ = _490_[$signed({ 29'h00000000 , read_pointer_q , 1'h0 }) +: 2];
  assign data_o_t0 = { { 2{ _066_ } } } | _216_;
  assign _035_ = ~ { 29'h00000000 , status_cnt_q_t0 };
  assign _072_ = { 29'h00000000 , status_cnt_q } & _035_;
  assign _142_ = { 29'h00000000 , status_cnt_q } | { 29'h00000000 , status_cnt_q_t0 };
  assign _212_ = _142_ - 32'd1;
  assign _213_ = _072_ - 32'd1;
  assign _203_ = _212_ ^ _213_;
  assign _193_ = _203_ | { 29'h00000000 , status_cnt_q_t0 };
  assign full_o = status_cnt_q == 3'h4;
  assign empty_o = ! status_cnt_q;
  assign _217_ = push_i && _230_;
  assign _219_ = pop_i && _231_;
  assign _221_ = push_i && pop_i;
  assign _223_ = _221_ && _230_;
  assign _225_ = _223_ && _231_;
  assign _226_ = - $signed({ 30'h00000000 , write_pointer_q , 1'h0 });
  assign _228_ = ~ _232_;
  assign _230_ = ~ full_o;
  assign _231_ = ~ empty_o;
  assign mem_n = _022_ | _233_;
  assign _002_ = flush_i ? 3'h0 : status_cnt_n;
  assign _004_ = flush_i ? 2'h0 : write_pointer_n;
  assign _000_ = flush_i ? 2'h0 : read_pointer_n;
  assign status_cnt_n = _225_ ? 3'hx : _010_;
  assign _010_ = _219_ ? _235_[2:0] : _006_;
  assign read_pointer_n = _219_ ? _008_ : 2'hx;
  assign _006_ = _217_ ? _016_[2:0] : 3'hx;
  assign write_pointer_n = _217_ ? _012_ : 2'hx;
  assign _232_ = $signed(_226_) < 0 ? 2'h3 << - _226_ : 2'h3 >> _226_;
  assign _233_ = $signed(_226_) < 0 ? _020_ << - _226_ : _020_ >> _226_;
  wire [7:0] _491_ = mem_q;
  assign data_o = _491_[$signed({ 29'h00000000 , read_pointer_q , 1'h0 }) +: 2];
  assign _235_ = status_cnt_q - 32'd1;
  assign _014_[1:0] = _012_;
  assign _015_[1:0] = _013_;
  assign _018_[1:0] = _008_;
  assign _019_[1:0] = _009_;
  assign _162_[0] = flush_i_t0;
  assign usage_o = status_cnt_q[1:0];
  assign usage_o_t0 = status_cnt_q_t0[1:0];
endmodule
module wt_axi_adapter (clk_i, rst_ni, icache_data_req_i, icache_data_ack_o, icache_data_i, icache_rtrn_vld_o, icache_rtrn_o, dcache_data_req_i, dcache_data_ack_o, dcache_data_i, dcache_rtrn_vld_o, dcache_rtrn_o, axi_req_o, axi_resp_i, icache_rtrn_vld_o_t0, icache_rtrn_o_t0, icache_data_req_i_t0, icache_data_i_t0, icache_data_ack_o_t0, dcache_rtrn_vld_o_t0, dcache_rtrn_o_t0
, dcache_data_req_i_t0, dcache_data_i_t0, dcache_data_ack_o_t0, axi_resp_i_t0, axi_req_o_t0);
wire [3:0] signal_0000;
wire [3:0] signal_0001;
wire [2:0] signal_0002;
wire [2:0] signal_0003;
wire signal_0004;
wire signal_0005;
wire signal_0006;
wire signal_0007;
wire signal_0008;
wire [5:0] signal_0009;
wire [5:0] signal_0010;
wire [15:0] signal_0011;
wire [15:0] signal_0012;
wire [127:0] signal_0013;
wire [127:0] signal_0014;
wire signal_0015;
wire signal_0016;
wire signal_0017;
wire signal_0018;
wire signal_0019;
wire signal_0020;
wire signal_0021;
wire signal_0022;
wire signal_0023;
wire signal_0024;
wire [1:0] signal_0025;
wire [1:0] signal_0026;
wire signal_0027;
wire signal_0028;
wire [2:0] signal_0029;
wire [2:0] signal_0030;
wire signal_0031;
wire signal_0032;
wire signal_0033;
wire signal_0034;
wire signal_0035;
wire signal_0036;
wire [1:0] signal_0037;
wire [1:0] signal_0038;
wire signal_0039;
wire signal_0040;
wire [2:0] signal_0041;
wire [2:0] signal_0042;
wire signal_0043;
wire signal_0044;
wire signal_0045;
wire signal_0046;
wire signal_0047;
wire [5:0] signal_0048;
wire [5:0] signal_0049;
wire [15:0] signal_0050;
wire [15:0] signal_0051;
wire [127:0] signal_0052;
wire [127:0] signal_0053;
wire signal_0054;
wire signal_0055;
wire signal_0056;
wire signal_0057;
wire signal_0058;
wire signal_0059;
wire [3:0] signal_0060;
wire [3:0] signal_0061;
wire signal_0062;
wire signal_0063;
wire signal_0064;
wire [63:0] signal_0065;
wire [63:0] signal_0066;
wire [127:0] signal_0067;
wire [127:0] signal_0068;
wire [2:0] signal_0069;
wire [2:0] signal_0070;
wire signal_0071;
wire signal_0072;
wire signal_0073;
wire signal_0074;
wire signal_0075;
wire signal_0076;
wire [63:0] signal_0077;
wire [63:0] signal_0078;
wire signal_0079;
wire signal_0080;
wire signal_0081;
wire signal_0082;
wire [2:0] signal_0083;
wire [2:0] signal_0084;
wire signal_0085;
wire signal_0086;
wire [5:0] signal_0087;
wire [5:0] signal_0088;
wire [15:0] signal_0089;
wire [15:0] signal_0090;
wire [127:0] signal_0091;
wire [127:0] signal_0092;
wire signal_0093;
wire signal_0094;
wire [3:0] signal_0095;
wire [3:0] signal_0096;
wire signal_0097;
wire signal_0098;
wire [127:0] signal_0099;
wire [127:0] signal_0100;
wire [2:0] signal_0101;
wire [2:0] signal_0102;
wire signal_0103;
wire signal_0104;
wire signal_0105;
wire signal_0106;
wire signal_0107;
wire signal_0108;
wire [3:0] signal_0109;
wire [3:0] signal_0110;
wire [2:0] signal_0111;
wire [2:0] signal_0112;
wire signal_0113;
wire [15:0] signal_0114;
wire [15:0] signal_0115;
wire [15:0] signal_0116;
wire [15:0] signal_0117;
wire [15:0] signal_0118;
wire [15:0] signal_0119;
wire [15:0] signal_0120;
wire [15:0] signal_0121;
wire [15:0] signal_0122;
wire [15:0] signal_0123;
wire [127:0] signal_0124;
wire [127:0] signal_0125;
wire [127:0] signal_0126;
wire [127:0] signal_0127;
wire [127:0] signal_0128;
wire [127:0] signal_0129;
wire [31:0] signal_0130;
wire [31:0] signal_0131;
wire signal_0132;
wire signal_0133;
wire signal_0134;
wire signal_0135;
wire signal_0136;
wire signal_0137;
wire signal_0138;
wire signal_0139;
wire signal_0140;
wire signal_0141;
wire signal_0142;
wire signal_0143;
wire signal_0144;
wire signal_0145;
wire signal_0146;
wire signal_0147;
wire [1:0] signal_0148;
wire signal_0149;
wire signal_0150;
wire signal_0151;
wire signal_0152;
wire signal_0153;
wire signal_0154;
wire [3:0] signal_0155;
wire [5:0] signal_0156;
wire [5:0] signal_0157;
wire [5:0] signal_0158;
wire [5:0] signal_0159;
wire [5:0] signal_0160;
wire [5:0] signal_0161;
wire [5:0] signal_0162;
wire [5:0] signal_0163;
wire [5:0] signal_0164;
wire [15:0] signal_0165;
wire [15:0] signal_0166;
wire [15:0] signal_0167;
wire signal_0168;
wire [15:0] signal_0169;
wire [15:0] signal_0170;
wire [3:0] signal_0171;
wire [32:0] signal_0172;
wire [32:0] signal_0173;
wire [15:0] signal_0174;
wire [15:0] signal_0175;
wire [15:0] signal_0176;
wire [15:0] signal_0177;
wire [15:0] signal_0178;
wire [127:0] signal_0179;
wire [127:0] signal_0180;
wire [127:0] signal_0181;
wire signal_0182;
wire signal_0183;
wire signal_0184;
wire signal_0185;
wire signal_0186;
wire signal_0187;
wire signal_0188;
wire signal_0189;
wire [2:0] signal_0190;
wire signal_0191;
wire [2:0] signal_0192;
wire signal_0193;
wire signal_0194;
wire [2:0] signal_0195;
wire [2:0] signal_0196;
wire signal_0197;
wire [6:0] signal_0198;
wire [2:0] signal_0199;
wire [127:0] signal_0200;
wire [63:0] signal_0201;
wire [63:0] signal_0202;
wire [125:0] signal_0203;
wire [1:0] signal_0204;
wire [1:0] signal_0205;
wire [63:0] signal_0206;
wire [1:0] signal_0207;
wire [15:0] signal_0208;
wire [3:0] signal_0209;
wire [2:0] signal_0210;
wire [3:0] signal_0211;
wire [127:0] signal_0212;
wire [1:0] signal_0213;
wire [1:0] signal_0214;
wire [2:0] signal_0215;
wire [5:0] signal_0216;
wire [3:0] signal_0217;
wire [127:0] signal_0218;
wire signal_0219;
wire [2:0] signal_0220;
wire [5:0] signal_0221;
wire [15:0] signal_0222;
wire [3:0] signal_0223;
wire [127:0] signal_0224;
wire [2:0] signal_0225;
wire [5:0] signal_0226;
wire [15:0] signal_0227;
wire [3:0] signal_0228;
wire [127:0] signal_0229;
wire [63:0] signal_0230;
wire [3:0] signal_0231;
wire [1:0] signal_0232;
wire [31:0] signal_0233;
wire [31:0] signal_0234;
wire [1:0] signal_0235;
wire [32:0] signal_0236;
wire [32:0] signal_0237;
wire [32:0] signal_0238;
wire [32:0] signal_0239;
wire signal_0240;
wire signal_0241;
wire signal_0242;
wire signal_0243;
wire signal_0244;
wire signal_0245;
wire signal_0246;
wire signal_0247;
wire signal_0248;
wire signal_0249;
wire signal_0250;
wire signal_0251;
wire signal_0252;
wire signal_0253;
wire signal_0254;
wire signal_0255;
wire signal_0256;
wire signal_0257;
wire signal_0258;
wire [15:0] signal_0259;
wire [127:0] signal_0260;
wire [127:0] signal_0261;
wire [127:0] signal_0262;
wire [127:0] signal_0263;
wire [127:0] signal_0264;
wire [127:0] signal_0265;
wire [127:0] signal_0266;
wire [127:0] signal_0267;
wire [127:0] signal_0268;
wire signal_0269;
wire signal_0270;
wire signal_0271;
wire signal_0272;
wire signal_0273;
wire signal_0274;
wire [31:0] signal_0275;
wire [31:0] signal_0276;
wire [31:0] signal_0277;
wire signal_0278;
wire signal_0279;
wire signal_0280;
wire signal_0281;
wire signal_0282;
wire signal_0283;
wire signal_0284;
wire signal_0285;
wire signal_0286;
wire signal_0287;
wire signal_0288;
wire signal_0289;
wire signal_0290;
wire signal_0291;
wire signal_0292;
wire [125:0] signal_0293;
wire [125:0] signal_0294;
wire [125:0] signal_0295;
wire [1:0] signal_0296;
wire [1:0] signal_0297;
wire [1:0] signal_0298;
wire [127:0] signal_0299;
wire [127:0] signal_0300;
wire [127:0] signal_0301;
wire signal_0302;
wire signal_0303;
wire signal_0304;
wire [63:0] signal_0305;
wire [63:0] signal_0306;
wire [63:0] signal_0307;
wire [63:0] signal_0308;
wire [63:0] signal_0309;
wire [63:0] signal_0310;
wire [127:0] signal_0311;
wire [127:0] signal_0312;
wire [127:0] signal_0313;
wire signal_0314;
wire signal_0315;
wire signal_0316;
wire [1:0] signal_0317;
wire signal_0318;
wire signal_0319;
wire signal_0320;
wire signal_0321;
wire signal_0322;
wire signal_0323;
wire signal_0324;
wire signal_0325;
wire signal_0326;
wire [3:0] signal_0327;
wire [5:0] signal_0328;
wire [5:0] signal_0329;
wire [5:0] signal_0330;
wire [5:0] signal_0331;
wire [5:0] signal_0332;
wire [5:0] signal_0333;
wire [5:0] signal_0334;
wire [5:0] signal_0335;
wire [5:0] signal_0336;
wire [5:0] signal_0337;
wire [5:0] signal_0338;
wire [5:0] signal_0339;
wire [5:0] signal_0340;
wire [5:0] signal_0341;
wire [5:0] signal_0342;
wire [5:0] signal_0343;
wire [5:0] signal_0344;
wire [5:0] signal_0345;
wire [5:0] signal_0346;
wire [5:0] signal_0347;
wire [5:0] signal_0348;
wire [5:0] signal_0349;
wire [5:0] signal_0350;
wire [5:0] signal_0351;
wire [5:0] signal_0352;
wire [5:0] signal_0353;
wire [5:0] signal_0354;
wire [15:0] signal_0355;
wire [15:0] signal_0356;
wire [15:0] signal_0357;
wire [15:0] signal_0358;
wire [15:0] signal_0359;
wire [15:0] signal_0360;
wire [15:0] signal_0361;
wire [15:0] signal_0362;
wire [15:0] signal_0363;
wire signal_0364;
wire signal_0365;
wire signal_0366;
wire signal_0367;
wire [15:0] signal_0368;
wire [15:0] signal_0369;
wire [15:0] signal_0370;
wire [15:0] signal_0371;
wire [15:0] signal_0372;
wire [15:0] signal_0373;
wire signal_0374;
wire signal_0375;
wire signal_0376;
wire [3:0] signal_0377;
wire signal_0378;
wire signal_0379;
wire signal_0380;
wire signal_0381;
wire signal_0382;
wire signal_0383;
wire signal_0384;
wire signal_0385;
wire signal_0386;
wire signal_0387;
wire signal_0388;
wire signal_0389;
wire [32:0] signal_0390;
wire [32:0] signal_0391;
wire [15:0] signal_0392;
wire [15:0] signal_0393;
wire [15:0] signal_0394;
wire [15:0] signal_0395;
wire [15:0] signal_0396;
wire [15:0] signal_0397;
wire [15:0] signal_0398;
wire [15:0] signal_0399;
wire [15:0] signal_0400;
wire [15:0] signal_0401;
wire [15:0] signal_0402;
wire [15:0] signal_0403;
wire [127:0] signal_0404;
wire [127:0] signal_0405;
wire [127:0] signal_0406;
wire [127:0] signal_0407;
wire [127:0] signal_0408;
wire [127:0] signal_0409;
wire signal_0410;
wire signal_0411;
wire signal_0412;
wire signal_0413;
wire signal_0414;
wire signal_0415;
wire signal_0416;
wire signal_0417;
wire signal_0418;
wire signal_0419;
wire signal_0420;
wire signal_0421;
wire signal_0422;
wire signal_0423;
wire signal_0424;
wire [2:0] signal_0425;
wire [2:0] signal_0426;
wire [2:0] signal_0427;
wire signal_0428;
wire signal_0429;
wire [2:0] signal_0430;
wire [2:0] signal_0431;
wire [2:0] signal_0432;
wire signal_0433;
wire signal_0434;
wire signal_0435;
wire signal_0436;
wire signal_0437;
wire signal_0438;
wire signal_0439;
wire signal_0440;
wire signal_0441;
wire signal_0442;
wire [2:0] signal_0443;
wire [2:0] signal_0444;
wire [2:0] signal_0445;
wire [2:0] signal_0446;
wire [2:0] signal_0447;
wire [2:0] signal_0448;
wire signal_0449;
wire signal_0450;
wire signal_0451;
wire signal_0452;
wire signal_0453;
wire signal_0454;
wire signal_0455;
wire signal_0456;
wire signal_0457;
wire signal_0458;
wire signal_0459;
wire [6:0] signal_0460;
wire [6:0] signal_0461;
wire [6:0] signal_0462;
wire signal_0463;
wire signal_0464;
wire [2:0] signal_0465;
wire [2:0] signal_0466;
wire [2:0] signal_0467;
wire signal_0468;
wire signal_0469;
wire signal_0470;
wire signal_0471;
wire signal_0472;
wire signal_0473;
wire signal_0474;
wire signal_0475;
wire signal_0476;
wire signal_0477;
wire signal_0478;
wire signal_0479;
wire [127:0] signal_0480;
wire [127:0] signal_0481;
wire [127:0] signal_0482;
wire [127:0] signal_0483;
wire [127:0] signal_0484;
wire [63:0] signal_0485;
wire [63:0] signal_0486;
wire [63:0] signal_0487;
wire [63:0] signal_0488;
wire [63:0] signal_0489;
wire [63:0] signal_0490;
wire [125:0] signal_0491;
wire [125:0] signal_0492;
wire [125:0] signal_0493;
wire [1:0] signal_0494;
wire [1:0] signal_0495;
wire [1:0] signal_0496;
wire [1:0] signal_0497;
wire [1:0] signal_0498;
wire [1:0] signal_0499;
wire [63:0] signal_0500;
wire [63:0] signal_0501;
wire [63:0] signal_0502;
wire [63:0] signal_0503;
wire [63:0] signal_0504;
wire [63:0] signal_0505;
wire [1:0] signal_0506;
wire [1:0] signal_0507;
wire [1:0] signal_0508;
wire [15:0] signal_0509;
wire [15:0] signal_0510;
wire [15:0] signal_0511;
wire [3:0] signal_0512;
wire [3:0] signal_0513;
wire [2:0] signal_0514;
wire [2:0] signal_0515;
wire [2:0] signal_0516;
wire [3:0] signal_0517;
wire [3:0] signal_0518;
wire [3:0] signal_0519;
wire [3:0] signal_0520;
wire [3:0] signal_0521;
wire [3:0] signal_0522;
wire [3:0] signal_0523;
wire [3:0] signal_0524;
wire [3:0] signal_0525;
wire [3:0] signal_0526;
wire [3:0] signal_0527;
wire [127:0] signal_0528;
wire [127:0] signal_0529;
wire [127:0] signal_0530;
wire [3:0] signal_0531;
wire [3:0] signal_0532;
wire [1:0] signal_0533;
wire [1:0] signal_0534;
wire [1:0] signal_0535;
wire [1:0] signal_0536;
wire [1:0] signal_0537;
wire [2:0] signal_0538;
wire [2:0] signal_0539;
wire [2:0] signal_0540;
wire signal_0541;
wire signal_0542;
wire [5:0] signal_0543;
wire [5:0] signal_0544;
wire [5:0] signal_0545;
wire [3:0] signal_0546;
wire [3:0] signal_0547;
wire [3:0] signal_0548;
wire [127:0] signal_0549;
wire [127:0] signal_0550;
wire [127:0] signal_0551;
wire signal_0552;
wire signal_0553;
wire signal_0554;
wire [1:0] signal_0555;
wire signal_0556;
wire signal_0557;
wire [2:0] signal_0558;
wire [2:0] signal_0559;
wire [2:0] signal_0560;
wire signal_0561;
wire signal_0562;
wire [5:0] signal_0563;
wire [5:0] signal_0564;
wire [5:0] signal_0565;
wire [15:0] signal_0566;
wire [15:0] signal_0567;
wire [15:0] signal_0568;
wire [3:0] signal_0569;
wire [3:0] signal_0570;
wire [3:0] signal_0571;
wire [127:0] signal_0572;
wire [127:0] signal_0573;
wire [127:0] signal_0574;
wire signal_0575;
wire signal_0576;
wire signal_0577;
wire signal_0578;
wire signal_0579;
wire signal_0580;
wire signal_0581;
wire signal_0582;
wire [2:0] signal_0583;
wire [2:0] signal_0584;
wire [2:0] signal_0585;
wire signal_0586;
wire signal_0587;
wire [5:0] signal_0588;
wire [5:0] signal_0589;
wire [5:0] signal_0590;
wire [15:0] signal_0591;
wire [15:0] signal_0592;
wire [15:0] signal_0593;
wire [3:0] signal_0594;
wire [3:0] signal_0595;
wire [3:0] signal_0596;
wire [127:0] signal_0597;
wire [127:0] signal_0598;
wire [127:0] signal_0599;
wire signal_0600;
wire signal_0601;
wire signal_0602;
wire signal_0603;
wire signal_0604;
wire signal_0605;
wire signal_0606;
wire signal_0607;
wire signal_0608;
wire signal_0609;
wire signal_0610;
wire signal_0611;
wire signal_0612;
wire [2:0] signal_0613;
wire [2:0] signal_0614;
wire [63:0] signal_0615;
wire [63:0] signal_0616;
wire [63:0] signal_0617;
wire [3:0] signal_0618;
wire [3:0] signal_0619;
wire [3:0] signal_0620;
wire [1:0] signal_0621;
wire [31:0] signal_0622;
wire [31:0] signal_0623;
wire [31:0] signal_0624;
wire [31:0] signal_0625;
wire [1:0] signal_0626;
wire [1:0] signal_0627;
wire [1:0] signal_0628;
wire signal_0629;
wire signal_0630;
wire signal_0631;
wire signal_0632;
wire signal_0633;
wire signal_0634;
wire [15:0] signal_0635;
wire [15:0] signal_0636;
wire [15:0] signal_0637;
wire [15:0] signal_0638;
wire [127:0] signal_0639;
wire [127:0] signal_0640;
wire [127:0] signal_0641;
wire signal_0642;
wire signal_0643;
wire [31:0] signal_0644;
wire signal_0645;
wire signal_0646;
wire signal_0647;
wire signal_0648;
wire signal_0649;
wire signal_0650;
wire signal_0651;
wire signal_0652;
wire [125:0] signal_0653;
wire [125:0] signal_0654;
wire [125:0] signal_0655;
wire [125:0] signal_0656;
wire [1:0] signal_0657;
wire [1:0] signal_0658;
wire [1:0] signal_0659;
wire [1:0] signal_0660;
wire [127:0] signal_0661;
wire [127:0] signal_0662;
wire [127:0] signal_0663;
wire [127:0] signal_0664;
wire signal_0665;
wire signal_0666;
wire signal_0667;
wire signal_0668;
wire [63:0] signal_0669;
wire [63:0] signal_0670;
wire [63:0] signal_0671;
wire [63:0] signal_0672;
wire [63:0] signal_0673;
wire [63:0] signal_0674;
wire [63:0] signal_0675;
wire [63:0] signal_0676;
wire [127:0] signal_0677;
wire [127:0] signal_0678;
wire [127:0] signal_0679;
wire [127:0] signal_0680;
wire signal_0681;
wire signal_0682;
wire signal_0683;
wire signal_0684;
wire [2:0] signal_0685;
wire signal_0686;
wire signal_0687;
wire signal_0688;
wire [5:0] signal_0689;
wire [5:0] signal_0690;
wire [5:0] signal_0691;
wire [5:0] signal_0692;
wire [5:0] signal_0693;
wire [5:0] signal_0694;
wire [5:0] signal_0695;
wire [5:0] signal_0696;
wire [5:0] signal_0697;
wire [5:0] signal_0698;
wire [5:0] signal_0699;
wire [5:0] signal_0700;
wire [5:0] signal_0701;
wire [5:0] signal_0702;
wire [5:0] signal_0703;
wire [5:0] signal_0704;
wire [5:0] signal_0705;
wire [5:0] signal_0706;
wire [5:0] signal_0707;
wire [5:0] signal_0708;
wire [5:0] signal_0709;
wire [5:0] signal_0710;
wire [5:0] signal_0711;
wire [5:0] signal_0712;
wire [5:0] signal_0713;
wire [5:0] signal_0714;
wire [5:0] signal_0715;
wire [15:0] signal_0716;
wire [15:0] signal_0717;
wire [15:0] signal_0718;
wire [15:0] signal_0719;
wire [15:0] signal_0720;
wire [15:0] signal_0721;
wire [15:0] signal_0722;
wire [15:0] signal_0723;
wire [15:0] signal_0724;
wire signal_0725;
wire signal_0726;
wire signal_0727;
wire [15:0] signal_0728;
wire [15:0] signal_0729;
wire [15:0] signal_0730;
wire [15:0] signal_0731;
wire [15:0] signal_0732;
wire [15:0] signal_0733;
wire signal_0734;
wire signal_0735;
wire signal_0736;
wire signal_0737;
wire signal_0738;
wire [32:0] signal_0739;
wire [32:0] signal_0740;
wire [15:0] signal_0741;
wire [15:0] signal_0742;
wire [15:0] signal_0743;
wire [15:0] signal_0744;
wire [127:0] signal_0745;
wire [127:0] signal_0746;
wire signal_0747;
wire signal_0748;
wire signal_0749;
wire signal_0750;
wire signal_0751;
wire [2:0] signal_0752;
wire [2:0] signal_0753;
wire [2:0] signal_0754;
wire signal_0755;
wire [2:0] signal_0756;
wire [2:0] signal_0757;
wire [2:0] signal_0758;
wire signal_0759;
wire signal_0760;
wire signal_0761;
wire signal_0762;
wire signal_0763;
wire [2:0] signal_0764;
wire [2:0] signal_0765;
wire [2:0] signal_0766;
wire [2:0] signal_0767;
wire [2:0] signal_0768;
wire [2:0] signal_0769;
wire signal_0770;
wire signal_0771;
wire signal_0772;
wire signal_0773;
wire signal_0774;
wire [6:0] signal_0775;
wire [6:0] signal_0776;
wire [6:0] signal_0777;
wire [2:0] signal_0778;
wire [2:0] signal_0779;
wire [2:0] signal_0780;
wire signal_0781;
wire [127:0] signal_0782;
wire [127:0] signal_0783;
wire [127:0] signal_0784;
wire [127:0] signal_0785;
wire [63:0] signal_0786;
wire [63:0] signal_0787;
wire [63:0] signal_0788;
wire [63:0] signal_0789;
wire [63:0] signal_0790;
wire [63:0] signal_0791;
wire [125:0] signal_0792;
wire [125:0] signal_0793;
wire [125:0] signal_0794;
wire [1:0] signal_0795;
wire [1:0] signal_0796;
wire [1:0] signal_0797;
wire [1:0] signal_0798;
wire [1:0] signal_0799;
wire [1:0] signal_0800;
wire [63:0] signal_0801;
wire [63:0] signal_0802;
wire [63:0] signal_0803;
wire [63:0] signal_0804;
wire [1:0] signal_0805;
wire [1:0] signal_0806;
wire [1:0] signal_0807;
wire [15:0] signal_0808;
wire [15:0] signal_0809;
wire [15:0] signal_0810;
wire [2:0] signal_0811;
wire [2:0] signal_0812;
wire [2:0] signal_0813;
wire [3:0] signal_0814;
wire [3:0] signal_0815;
wire [3:0] signal_0816;
wire [127:0] signal_0817;
wire [127:0] signal_0818;
wire [127:0] signal_0819;
wire [2:0] signal_0820;
wire [2:0] signal_0821;
wire [2:0] signal_0822;
wire [5:0] signal_0823;
wire [5:0] signal_0824;
wire [5:0] signal_0825;
wire [3:0] signal_0826;
wire [3:0] signal_0827;
wire [3:0] signal_0828;
wire [127:0] signal_0829;
wire [127:0] signal_0830;
wire [127:0] signal_0831;
wire signal_0832;
wire signal_0833;
wire [2:0] signal_0834;
wire [2:0] signal_0835;
wire [2:0] signal_0836;
wire [5:0] signal_0837;
wire [5:0] signal_0838;
wire [5:0] signal_0839;
wire [15:0] signal_0840;
wire [15:0] signal_0841;
wire [15:0] signal_0842;
wire [3:0] signal_0843;
wire [3:0] signal_0844;
wire [3:0] signal_0845;
wire [127:0] signal_0846;
wire [127:0] signal_0847;
wire [127:0] signal_0848;
wire [2:0] signal_0849;
wire [2:0] signal_0850;
wire [2:0] signal_0851;
wire signal_0852;
wire [5:0] signal_0853;
wire [5:0] signal_0854;
wire [5:0] signal_0855;
wire [15:0] signal_0856;
wire [15:0] signal_0857;
wire [15:0] signal_0858;
wire [3:0] signal_0859;
wire [3:0] signal_0860;
wire [3:0] signal_0861;
wire [127:0] signal_0862;
wire [127:0] signal_0863;
wire [127:0] signal_0864;
wire signal_0865;
wire [2:0] signal_0866;
wire [63:0] signal_0867;
wire [63:0] signal_0868;
wire [63:0] signal_0869;
wire [3:0] signal_0870;
wire [3:0] signal_0871;
wire [3:0] signal_0872;
wire [31:0] signal_0873;
wire [31:0] signal_0874;
wire [31:0] signal_0875;
wire [31:0] signal_0876;
wire [31:0] signal_0877;
wire [1:0] signal_0878;
wire [1:0] signal_0879;
wire [1:0] signal_0880;
wire signal_0881;
wire [125:0] signal_0882;
wire [1:0] signal_0883;
wire [127:0] signal_0884;
wire signal_0885;
wire [63:0] signal_0886;
wire [63:0] signal_0887;
wire [127:0] signal_0888;
wire signal_0889;
wire [5:0] signal_0890;
wire [5:0] signal_0891;
wire [5:0] signal_0892;
wire [5:0] signal_0893;
wire [5:0] signal_0894;
wire [15:0] signal_0895;
wire [15:0] signal_0896;
wire [15:0] signal_0897;
wire signal_0898;
wire [15:0] signal_0899;
wire signal_0900;
wire [32:0] signal_0901;
wire [32:0] signal_0902;
wire [2:0] signal_0903;
wire signal_0904;
wire [2:0] signal_0905;
wire signal_0906;
wire signal_0907;
wire [127:0] signal_0908;
wire [127:0] signal_0909;
wire [63:0] signal_0910;
wire [63:0] signal_0911;
wire [125:0] signal_0912;
wire [1:0] signal_0913;
wire [1:0] signal_0914;
wire [63:0] signal_0915;
wire [1:0] signal_0916;
wire [3:0] signal_0917;
wire [127:0] signal_0918;
wire [3:0] signal_0919;
wire [127:0] signal_0920;
wire [3:0] signal_0921;
wire [127:0] signal_0922;
wire [3:0] signal_0923;
wire [127:0] signal_0924;
wire signal_0925;
wire [2:0] signal_0926;
wire [63:0] signal_0927;
wire [31:0] signal_0928;
wire [31:0] signal_0929;
wire [1:0] signal_0930;
wire signal_0931;
wire signal_0932;
wire signal_0933;
wire signal_0934;
wire signal_0935;
wire signal_0936;
wire signal_0937;
wire signal_0938;
wire signal_0939;
wire signal_0940;
wire signal_0941;
wire signal_0942;
wire signal_0943;
wire signal_0944;
wire signal_0945;
wire [31:0] signal_0946;
wire [31:0] signal_0947;
wire [5:0] signal_0948;
wire [5:0] signal_0949;
wire [5:0] signal_0950;
wire [5:0] signal_0951;
wire [5:0] signal_0952;
wire [5:0] signal_0953;
wire [5:0] signal_0954;
wire [5:0] signal_0955;
wire [5:0] signal_0956;
wire [5:0] signal_0957;
wire [5:0] signal_0958;
wire [5:0] signal_0959;
wire [5:0] signal_0960;
wire [5:0] signal_0961;
wire [5:0] signal_0962;
wire [5:0] signal_0963;
wire [15:0] signal_0964;
wire [15:0] signal_0965;
wire [15:0] signal_0966;
wire [15:0] signal_0967;
wire signal_0968;
wire [15:0] signal_0969;
wire [15:0] signal_0970;
wire signal_0971;
wire [15:0] signal_0972;
wire [127:0] signal_0973;
wire [127:0] signal_0974;
wire [31:0] signal_0975;
wire signal_0976;
wire signal_0977;
wire signal_0978;
wire signal_0979;
wire signal_0980;
wire signal_0981;
wire signal_0982;
wire signal_0983;
wire [32:0] signal_0984;
wire [32:0] signal_0985;
wire [32:0] signal_0986;
wire [32:0] signal_0987;
wire [15:0] signal_0988;
wire [15:0] signal_0989;
wire [15:0] signal_0990;
wire [15:0] signal_0991;
wire [127:0] signal_0992;
wire [127:0] signal_0993;
wire signal_0994;
wire signal_0995;
wire [31:0] signal_0996;
wire [127:0] signal_0997;
wire [3:0] signal_0998;
wire [15:0] signal_0999;
wire [15:0] signal_1000;
wire [15:0] signal_1001;
wire [15:0] signal_1002;
wire [15:0] signal_1003;
wire [15:0] signal_1004;
wire [15:0] signal_1005;
wire [15:0] signal_1006;
wire [127:0] signal_1007;
wire [127:0] signal_1008;
wire signal_1009;
wire signal_1010;
wire signal_1011;
wire signal_1012;
wire signal_1013;
wire signal_1014;
wire signal_1015;
wire signal_1016;
wire signal_1017;
wire signal_1018;
wire signal_1019;
wire signal_1020;
wire signal_1021;
wire signal_1022;
wire signal_1023;
wire signal_1024;
wire signal_1025;
wire signal_1026;
wire signal_1027;
wire signal_1028;
wire signal_1029;
wire signal_1030;
wire signal_1031;
wire signal_1032;
wire signal_1033;
wire signal_1034;
wire signal_1035;
wire signal_1036;
wire signal_1037;
wire signal_1038;
wire signal_1039;
wire signal_1040;
wire signal_1041;
wire signal_1042;
wire signal_1043;
wire [15:0] signal_1044;
wire [15:0] signal_1045;
wire [15:0] signal_1046;
wire [15:0] signal_1047;
wire [127:0] signal_1048;
wire [127:0] signal_1049;
wire [127:0] signal_1050;
wire [31:0] signal_1051;
wire [31:0] signal_1052;
wire [31:0] signal_1053;
wire [31:0] signal_1054;
wire [31:0] signal_1055;
wire signal_1056;
reg amo_gen_r_q /* verilator public */;
reg amo_gen_r_q_t0 /* verilator public */;
wire [2:0] amo_off_d /* verilator public */;
wire [2:0] amo_off_d_t0 /* verilator public */;
reg [2:0] amo_off_q /* verilator public */;
reg [2:0] amo_off_q_t0 /* verilator public */;
wire [1:0] arb_ack /* verilator public */;
wire [1:0] arb_ack_t0 /* verilator public */;
wire arb_gnt /* verilator public */;
wire arb_gnt_t0 /* verilator public */;
wire arb_idx /* verilator public */;
wire arb_idx_t0 /* verilator public */;
wire [1:0] arb_req /* verilator public */;
wire [1:0] arb_req_t0 /* verilator public */;
wire [63:0] axi_rd_addr /* verilator public */;
wire [63:0] axi_rd_addr_t0 /* verilator public */;
wire axi_rd_blen /* verilator public */;
wire axi_rd_blen_t0 /* verilator public */;
wire [63:0] axi_rd_data /* verilator public */;
wire [63:0] axi_rd_data_t0 /* verilator public */;
wire axi_rd_exokay /* verilator public */;
wire axi_rd_exokay_t0 /* verilator public */;
wire axi_rd_gnt /* verilator public */;
wire axi_rd_gnt_t0 /* verilator public */;
wire [3:0] axi_rd_id_out /* verilator public */;
wire [3:0] axi_rd_id_out_t0 /* verilator public */;
wire axi_rd_last /* verilator public */;
wire axi_rd_last_t0 /* verilator public */;
wire axi_rd_lock /* verilator public */;
wire axi_rd_lock_t0 /* verilator public */;
wire axi_rd_rdy /* verilator public */;
wire axi_rd_rdy_t0 /* verilator public */;
wire axi_rd_req /* verilator public */;
wire axi_rd_req_t0 /* verilator public */;
wire [2:0] axi_rd_size /* verilator public */;
wire [2:0] axi_rd_size_t0 /* verilator public */;
wire [1:0] axi_rd_user /* verilator public */;
wire [1:0] axi_rd_user_t0 /* verilator public */;
wire axi_rd_valid /* verilator public */;
wire axi_rd_valid_t0 /* verilator public */;
  output [283:0] axi_req_o;
wire [283:0] axi_req_o /* verilator public */;
  output [283:0] axi_req_o_t0;
wire [283:0] axi_req_o_t0 /* verilator public */;
  input [85:0] axi_resp_i /* verilator public */;
wire [85:0] axi_resp_i /* verilator public */;
  input [85:0] axi_resp_i_t0 /* verilator public */;
wire [85:0] axi_resp_i_t0 /* verilator public */;
wire [5:0] axi_wr_atop /* verilator public */;
wire [5:0] axi_wr_atop_t0 /* verilator public */;
wire [15:0] axi_wr_be /* verilator public */;
wire [15:0] axi_wr_be_t0 /* verilator public */;
wire [127:0] axi_wr_data /* verilator public */;
wire [127:0] axi_wr_data_t0 /* verilator public */;
wire axi_wr_exokay /* verilator public */;
wire axi_wr_exokay_t0 /* verilator public */;
wire axi_wr_gnt /* verilator public */;
wire axi_wr_gnt_t0 /* verilator public */;
wire [3:0] axi_wr_id_in /* verilator public */;
wire [3:0] axi_wr_id_in_t0 /* verilator public */;
wire [3:0] axi_wr_id_out /* verilator public */;
wire [3:0] axi_wr_id_out_t0 /* verilator public */;
wire axi_wr_lock /* verilator public */;
wire axi_wr_lock_t0 /* verilator public */;
wire axi_wr_rdy /* verilator public */;
wire axi_wr_rdy_t0 /* verilator public */;
wire axi_wr_req /* verilator public */;
wire axi_wr_req_t0 /* verilator public */;
wire [3:0] axi_wr_user /* verilator public */;
wire [3:0] axi_wr_user_t0 /* verilator public */;
wire axi_wr_valid /* verilator public */;
wire axi_wr_valid_t0 /* verilator public */;
wire b_empty /* verilator public */;
wire b_empty_t0 /* verilator public */;
wire b_full /* verilator public */;
wire b_pop /* verilator public */;
wire b_pop_t0 /* verilator public */;
wire b_push /* verilator public */;
wire b_push_t0 /* verilator public */;
  input clk_i /* verilator public */;
wire clk_i /* verilator public */;
wire [134:0] dcache_data /* verilator public */;
  output dcache_data_ack_o;
wire dcache_data_ack_o /* verilator public */;
  output dcache_data_ack_o_t0;
wire dcache_data_ack_o_t0 /* verilator public */;
wire dcache_data_empty /* verilator public */;
wire dcache_data_empty_t0 /* verilator public */;
wire dcache_data_full /* verilator public */;
wire dcache_data_full_t0 /* verilator public */;
  input [134:0] dcache_data_i /* verilator public */;
wire [134:0] dcache_data_i /* verilator public */;
  input [134:0] dcache_data_i_t0 /* verilator public */;
wire [134:0] dcache_data_i_t0 /* verilator public */;
  input dcache_data_req_i /* verilator public */;
wire dcache_data_req_i /* verilator public */;
  input dcache_data_req_i_t0 /* verilator public */;
wire dcache_data_req_i_t0 /* verilator public */;
wire [134:0] dcache_data_t0 /* verilator public */;
reg dcache_first_q /* verilator public */;
reg dcache_first_q_t0 /* verilator public */;
wire dcache_rd_empty /* verilator public */;
wire dcache_rd_empty_t0 /* verilator public */;
wire dcache_rd_full /* verilator public */;
wire dcache_rd_full_t0 /* verilator public */;
wire dcache_rd_pop /* verilator public */;
wire dcache_rd_pop_t0 /* verilator public */;
wire [127:0] dcache_rd_shift_d /* verilator public */;
wire [127:0] dcache_rd_shift_d_t0 /* verilator public */;
reg [127:0] dcache_rd_shift_q /* verilator public */;
reg [127:0] dcache_rd_shift_q_t0 /* verilator public */;
wire [127:0] dcache_rd_shift_user_d /* verilator public */;
wire [127:0] dcache_rd_shift_user_d_t0 /* verilator public */;
reg [127:0] dcache_rd_shift_user_q /* verilator public */;
reg [127:0] dcache_rd_shift_user_q_t0 /* verilator public */;
wire [10:0] dcache_rtrn_inv_d /* verilator public */;
wire [10:0] dcache_rtrn_inv_d_t0 /* verilator public */;
  output [271:0] dcache_rtrn_o;
wire [271:0] dcache_rtrn_o /* verilator public */;
  output [271:0] dcache_rtrn_o_t0;
wire [271:0] dcache_rtrn_o_t0 /* verilator public */;
wire dcache_rtrn_rd_en /* verilator public */;
wire dcache_rtrn_rd_en_t0 /* verilator public */;
wire [1:0] dcache_rtrn_rd_tid /* verilator public */;
wire [1:0] dcache_rtrn_rd_tid_t0 /* verilator public */;
wire [1:0] dcache_rtrn_tid_d /* verilator public */;
wire [1:0] dcache_rtrn_tid_d_t0 /* verilator public */;
reg [1:0] dcache_rtrn_tid_q /* verilator public */;
reg [1:0] dcache_rtrn_tid_q_t0 /* verilator public */;
wire [2:0] dcache_rtrn_type_d /* verilator public */;
wire [2:0] dcache_rtrn_type_d_t0 /* verilator public */;
reg [2:0] dcache_rtrn_type_q /* verilator public */;
reg [2:0] dcache_rtrn_type_q_t0 /* verilator public */;
wire dcache_rtrn_vld_d /* verilator public */;
wire dcache_rtrn_vld_d_t0 /* verilator public */;
  output dcache_rtrn_vld_o;
reg dcache_rtrn_vld_o /* verilator public */;
  output dcache_rtrn_vld_o_t0;
reg dcache_rtrn_vld_o_t0 /* verilator public */;
wire [1:0] dcache_rtrn_wr_tid /* verilator public */;
wire [1:0] dcache_rtrn_wr_tid_t0 /* verilator public */;
wire dcache_sc_rtrn /* verilator public */;
wire dcache_sc_rtrn_t0 /* verilator public */;
wire dcache_wr_empty /* verilator public */;
wire dcache_wr_empty_t0 /* verilator public */;
wire dcache_wr_full /* verilator public */;
wire dcache_wr_full_t0 /* verilator public */;
wire dcache_wr_pop /* verilator public */;
wire dcache_wr_pop_t0 /* verilator public */;
wire [60:0] icache_data /* verilator public */;
  output icache_data_ack_o;
wire icache_data_ack_o /* verilator public */;
  output icache_data_ack_o_t0;
wire icache_data_ack_o_t0 /* verilator public */;
wire icache_data_empty /* verilator public */;
wire icache_data_empty_t0 /* verilator public */;
wire icache_data_full /* verilator public */;
wire icache_data_full_t0 /* verilator public */;
  input [60:0] icache_data_i /* verilator public */;
wire [60:0] icache_data_i /* verilator public */;
  input [60:0] icache_data_i_t0 /* verilator public */;
wire [60:0] icache_data_i_t0 /* verilator public */;
  input icache_data_req_i /* verilator public */;
wire icache_data_req_i /* verilator public */;
  input icache_data_req_i_t0 /* verilator public */;
wire icache_data_req_i_t0 /* verilator public */;
wire [60:0] icache_data_t0 /* verilator public */;
reg icache_first_q /* verilator public */;
reg icache_first_q_t0 /* verilator public */;
wire icache_rd_empty /* verilator public */;
wire icache_rd_empty_t0 /* verilator public */;
wire icache_rd_full /* verilator public */;
wire icache_rd_full_t0 /* verilator public */;
  output [269:0] icache_rtrn_o;
wire [269:0] icache_rtrn_o /* verilator public */;
  output [269:0] icache_rtrn_o_t0;
wire [269:0] icache_rtrn_o_t0 /* verilator public */;
wire icache_rtrn_rd_en /* verilator public */;
wire icache_rtrn_rd_en_t0 /* verilator public */;
wire [1:0] icache_rtrn_tid_d /* verilator public */;
wire [1:0] icache_rtrn_tid_d_t0 /* verilator public */;
reg [1:0] icache_rtrn_tid_q /* verilator public */;
reg [1:0] icache_rtrn_tid_q_t0 /* verilator public */;
wire icache_rtrn_vld_d /* verilator public */;
wire icache_rtrn_vld_d_t0 /* verilator public */;
  output icache_rtrn_vld_o;
reg icache_rtrn_vld_o /* verilator public */;
  output icache_rtrn_vld_o_t0;
reg icache_rtrn_vld_o_t0 /* verilator public */;
wire invalidate /* verilator public */;
  input rst_ni /* verilator public */;
wire rst_ni /* verilator public */;
wire wr_exokay /* verilator public */;
wire wr_exokay_t0 /* verilator public */;
wire [3:0] wr_id_out /* verilator public */;
wire [3:0] wr_id_out_t0 /* verilator public */;
  assign signal_0126 = { dcache_rd_shift_q[127:64] , 64'h0000000000000000 } & signal_0992;
  assign signal_0124 = 1'h1 & { 127'h00000000000000000000000000000000 , signal_1056 };
  assign signal_0128 = { dcache_rd_shift_user_q[127:2] , 2'h0 } & signal_0992;
  assign icache_data_ack_o = icache_data_req_i & signal_0994;
  assign dcache_data_ack_o = dcache_data_req_i & signal_0995;
  assign signal_0130 = dcache_data[74:72] & signal_0996;
  assign signal_0132 = arb_ack[0] & axi_rd_gnt;
  assign signal_0134 = arb_ack[1] & axi_rd_gnt;
  assign signal_0136 = arb_ack[1] & axi_wr_gnt;
  assign b_push = axi_wr_valid & axi_wr_rdy;
reg [7:0] signal_1067 /* verilator public */;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) signal_1067 <= 8'h00;
    else signal_1067 <= { axi_rd_rdy_t0 , dcache_rtrn_inv_d_t0[8:2] };
  assign dcache_rtrn_o_t0[11:4] = signal_1067;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) amo_off_q_t0 <= 3'h0;
    else amo_off_q_t0 <= amo_off_d_t0;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) icache_rtrn_tid_q_t0 <= 2'h0;
    else icache_rtrn_tid_q_t0 <= icache_rtrn_tid_d_t0;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) dcache_rtrn_tid_q_t0 <= 2'h0;
    else dcache_rtrn_tid_q_t0 <= dcache_rtrn_tid_d_t0;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) icache_rtrn_vld_o_t0 <= 1'h0;
    else icache_rtrn_vld_o_t0 <= icache_rtrn_vld_d_t0;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) dcache_rtrn_vld_o_t0 <= 1'h0;
    else dcache_rtrn_vld_o_t0 <= dcache_rtrn_vld_d_t0;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) dcache_rtrn_type_q_t0 <= 3'h0;
    else dcache_rtrn_type_q_t0 <= dcache_rtrn_type_d_t0;
  assign signal_0144 = ~ dcache_rtrn_rd_en;
  assign signal_0145 = ~ icache_rtrn_rd_en;
  assign signal_0146 = ~ signal_0138;
  assign signal_0147 = ~ signal_0140;
  assign signal_0881 = axi_rd_last ^ dcache_first_q;
  assign signal_0882 = { axi_rd_user , icache_rtrn_o[140:17] } ^ icache_rtrn_o[140:15];
  assign signal_0883 = signal_0037 ^ icache_rtrn_o[14:13];
  assign signal_0884 = dcache_rd_shift_user_d ^ dcache_rd_shift_user_q;
  assign signal_0885 = axi_rd_last ^ icache_first_q;
  assign signal_0887 = signal_0077 ^ icache_rtrn_o[204:141];
  assign signal_0888 = dcache_rd_shift_d ^ dcache_rd_shift_q;
  assign signal_0889 = signal_0081 ^ amo_gen_r_q;
  assign signal_0649 = axi_rd_last_t0 | dcache_first_q_t0;
  assign signal_0653 = { axi_rd_user_t0 , icache_rtrn_o_t0[140:17] } | icache_rtrn_o_t0[140:15];
  assign signal_0657 = signal_0038 | icache_rtrn_o_t0[14:13];
  assign signal_0661 = dcache_rd_shift_user_d_t0 | dcache_rd_shift_user_q_t0;
  assign signal_0665 = axi_rd_last_t0 | icache_first_q_t0;
  assign signal_0669 = axi_rd_data_t0 | icache_rtrn_o_t0[268:205];
  assign signal_0673 = signal_0078 | icache_rtrn_o_t0[204:141];
  assign signal_0677 = dcache_rd_shift_d_t0 | dcache_rd_shift_q_t0;
  assign signal_0681 = signal_0082 | amo_gen_r_q_t0;
  assign signal_0650 = signal_0881 | signal_0649;
  assign signal_0654 = signal_0882 | signal_0653;
  assign signal_0658 = signal_0883 | signal_0657;
  assign signal_0662 = signal_0884 | signal_0661;
  assign signal_0666 = signal_0885 | signal_0665;
  assign signal_0670 = signal_0886 | signal_0669;
  assign signal_0674 = signal_0887 | signal_0673;
  assign signal_0678 = signal_0888 | signal_0677;
  assign signal_0682 = signal_0889 | signal_0681;
  assign signal_0290 = dcache_rtrn_rd_en & axi_rd_last_t0;
  assign signal_0293 = { { 126{ icache_rtrn_rd_en } } } & { axi_rd_user_t0 , icache_rtrn_o_t0[140:17] };
  assign signal_0296 = { { 2{ icache_rtrn_rd_en } } } & signal_0038;
  assign signal_0299 = { { 128{ signal_0138 } } } & dcache_rd_shift_user_d_t0;
  assign signal_0302 = icache_rtrn_rd_en & axi_rd_last_t0;
  assign signal_0305 = { { 64{ icache_rtrn_rd_en } } } & axi_rd_data_t0;
  assign signal_0308 = { { 64{ icache_rtrn_rd_en } } } & signal_0078;
  assign signal_0311 = { { 128{ signal_0138 } } } & dcache_rd_shift_d_t0;
  assign signal_0314 = signal_0140 & signal_0082;
  assign signal_0291 = signal_0144 & dcache_first_q_t0;
  assign signal_0294 = { { 126{ signal_0145 } } } & icache_rtrn_o_t0[140:15];
  assign signal_0297 = { { 2{ signal_0145 } } } & icache_rtrn_o_t0[14:13];
  assign signal_0300 = { { 128{ signal_0146 } } } & dcache_rd_shift_user_q_t0;
  assign signal_0303 = signal_0145 & icache_first_q_t0;
  assign signal_0306 = { { 64{ signal_0145 } } } & icache_rtrn_o_t0[268:205];
  assign signal_0309 = { { 64{ signal_0145 } } } & icache_rtrn_o_t0[204:141];
  assign signal_0312 = { { 128{ signal_0146 } } } & dcache_rd_shift_q_t0;
  assign signal_0315 = signal_0147 & amo_gen_r_q_t0;
  assign signal_0292 = signal_0650 & dcache_rtrn_rd_en_t0;
  assign signal_0295 = signal_0654 & { { 126{ icache_rtrn_rd_en_t0 } } };
  assign signal_0298 = signal_0658 & { { 2{ icache_rtrn_rd_en_t0 } } };
  assign signal_0301 = signal_0662 & { { 128{ signal_0139 } } };
  assign signal_0304 = signal_0666 & icache_rtrn_rd_en_t0;
  assign signal_0307 = signal_0670 & { { 64{ icache_rtrn_rd_en_t0 } } };
  assign signal_0310 = signal_0674 & { { 64{ icache_rtrn_rd_en_t0 } } };
  assign signal_0313 = signal_0678 & { { 128{ signal_0139 } } };
  assign signal_0316 = signal_0682 & signal_0141;
  assign signal_0651 = signal_0290 | signal_0291;
  assign signal_0655 = signal_0293 | signal_0294;
  assign signal_0659 = signal_0296 | signal_0297;
  assign signal_0663 = signal_0299 | signal_0300;
  assign signal_0667 = signal_0302 | signal_0303;
  assign signal_0671 = signal_0305 | signal_0306;
  assign signal_0675 = signal_0308 | signal_0309;
  assign signal_0679 = signal_0311 | signal_0312;
  assign signal_0683 = signal_0314 | signal_0315;
  assign signal_0652 = signal_0651 | signal_0292;
  assign signal_0656 = signal_0655 | signal_0295;
  assign signal_0660 = signal_0659 | signal_0298;
  assign signal_0664 = signal_0663 | signal_0301;
  assign signal_0668 = signal_0667 | signal_0304;
  assign signal_0672 = signal_0671 | signal_0307;
  assign signal_0676 = signal_0675 | signal_0310;
  assign signal_0680 = signal_0679 | signal_0313;
  assign signal_0684 = signal_0683 | signal_0316;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) dcache_first_q_t0 <= 1'h0;
    else dcache_first_q_t0 <= signal_0652;
reg [125:0] signal_1150 /* verilator public */;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) signal_1150 <= 126'h00000000000000000000000000000000;
    else signal_1150 <= signal_0656;
  assign icache_rtrn_o_t0[140:15] = signal_1150;
reg [1:0] signal_1151 /* verilator public */;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) signal_1151 <= 2'h0;
    else signal_1151 <= signal_0660;
  assign icache_rtrn_o_t0[14:13] = signal_1151;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) dcache_rd_shift_user_q_t0 <= 128'h00000000000000000000000000000000;
    else dcache_rd_shift_user_q_t0 <= signal_0664;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) icache_first_q_t0 <= 1'h0;
    else icache_first_q_t0 <= signal_0668;
reg [63:0] signal_1154 /* verilator public */;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) signal_1154 <= 64'h0000000000000000;
    else signal_1154 <= signal_0672;
  assign icache_rtrn_o_t0[268:205] = signal_1154;
reg [63:0] signal_1155 /* verilator public */;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) signal_1155 <= 64'h0000000000000000;
    else signal_1155 <= signal_0676;
  assign icache_rtrn_o_t0[204:141] = signal_1155;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) dcache_rd_shift_q_t0 <= 128'h00000000000000000000000000000000;
    else dcache_rd_shift_q_t0 <= signal_0680;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) amo_gen_r_q_t0 <= 1'h0;
    else amo_gen_r_q_t0 <= signal_0684;
  assign signal_0116 = 16'h0000 & signal_0175;
  assign signal_0118 = 16'h0000 & signal_0989;
  assign signal_0120 = 16'h0000 & signal_0990;
  assign signal_0122 = 16'h0000 & signal_0991;
  assign signal_0260 = { dcache_rd_shift_q_t0[127:64] , 64'h0000000000000000 } & signal_0992;
  assign signal_0263 = 128'h00000000000000000000000000000000 & { 127'h00000000000000000000000000000000 , signal_1056 };
  assign signal_0266 = { dcache_rd_shift_user_q_t0[127:2] , 2'h0 } & signal_0992;
  assign signal_0269 = icache_data_req_i_t0 & signal_0994;
  assign signal_0272 = dcache_data_req_i_t0 & signal_0995;
  assign signal_0275 = { 29'h00000000 , dcache_data_t0[74:72] } & signal_0996;
  assign signal_0278 = arb_ack_t0[0] & axi_rd_gnt;
  assign signal_0281 = arb_ack_t0[1] & axi_rd_gnt;
  assign signal_0284 = arb_ack_t0[1] & axi_wr_gnt;
  assign signal_0287 = axi_wr_valid_t0 & axi_wr_rdy;
  assign signal_0261 = signal_0993 & { dcache_rd_shift_q[127:64] , 64'h0000000000000000 };
  assign signal_0264 = { 127'h00000000000000000000000000000000 , wr_exokay_t0 } & 128'h00000000000000000000000000000001;
  assign signal_0267 = signal_0993 & { dcache_rd_shift_user_q[127:2] , 2'h0 };
  assign signal_0270 = icache_data_full_t0 & icache_data_req_i;
  assign signal_0273 = dcache_data_full_t0 & dcache_data_req_i;
  assign signal_0276 = signal_0874 & { 29'h00000000 , dcache_data[74:72] };
  assign signal_0279 = axi_rd_gnt_t0 & arb_ack[0];
  assign signal_0282 = axi_rd_gnt_t0 & arb_ack[1];
  assign signal_0285 = axi_wr_gnt_t0 & arb_ack[1];
  assign signal_0288 = axi_wr_rdy_t0 & axi_wr_valid;
  assign signal_0259 = 16'h0000 & signal_0988;
  assign signal_0262 = { dcache_rd_shift_q_t0[127:64] , 64'h0000000000000000 } & signal_0993;
  assign signal_0265 = 128'h00000000000000000000000000000000 & { 127'h00000000000000000000000000000000 , wr_exokay_t0 };
  assign signal_0268 = { dcache_rd_shift_user_q_t0[127:2] , 2'h0 } & signal_0993;
  assign signal_0271 = icache_data_req_i_t0 & icache_data_full_t0;
  assign signal_0274 = dcache_data_req_i_t0 & dcache_data_full_t0;
  assign signal_0277 = { 29'h00000000 , dcache_data_t0[74:72] } & signal_0874;
  assign signal_0280 = arb_ack_t0[0] & axi_rd_gnt_t0;
  assign signal_0283 = arb_ack_t0[1] & axi_rd_gnt_t0;
  assign signal_0286 = arb_ack_t0[1] & axi_wr_gnt_t0;
  assign signal_0289 = axi_wr_valid_t0 & axi_wr_rdy_t0;
  assign signal_0635 = signal_0116 | signal_0259;
  assign signal_0636 = signal_0118 | signal_0259;
  assign signal_0637 = signal_0120 | signal_0259;
  assign signal_0638 = signal_0122 | signal_0259;
  assign signal_0639 = signal_0260 | signal_0261;
  assign signal_0640 = signal_0263 | signal_0264;
  assign signal_0641 = signal_0266 | signal_0267;
  assign signal_0642 = signal_0269 | signal_0270;
  assign signal_0643 = signal_0272 | signal_0273;
  assign signal_0644 = signal_0275 | signal_0276;
  assign signal_0645 = signal_0278 | signal_0279;
  assign signal_0646 = signal_0281 | signal_0282;
  assign signal_0647 = signal_0284 | signal_0285;
  assign signal_0648 = signal_0287 | signal_0288;
  assign signal_0117 = signal_0635 | signal_0259;
  assign signal_0119 = signal_0636 | signal_0259;
  assign signal_0121 = signal_0637 | signal_0259;
  assign signal_0123 = signal_0638 | signal_0259;
  assign signal_0127 = signal_0639 | signal_0262;
  assign signal_0125 = signal_0640 | signal_0265;
  assign signal_0129 = signal_0641 | signal_0268;
  assign icache_data_ack_o_t0 = signal_0642 | signal_0271;
  assign dcache_data_ack_o_t0 = signal_0643 | signal_0274;
  assign signal_0131 = signal_0644 | signal_0277;
  assign signal_0133 = signal_0645 | signal_0280;
  assign signal_0135 = signal_0646 | signal_0283;
  assign signal_0137 = signal_0647 | signal_0286;
  assign b_push_t0 = signal_0648 | signal_0289;
  assign signal_0247 = | dcache_data_t0[3:0];
  assign signal_0248 = | dcache_data_t0[131:130];
  assign signal_0249 = | dcache_data_t0[134:133];
  assign signal_0209 = ~ dcache_data_t0[3:0];
  assign signal_0213 = ~ dcache_data_t0[131:130];
  assign signal_0214 = ~ dcache_data_t0[134:133];
  assign signal_0512 = dcache_data[3:0] & signal_0209;
  assign signal_0533 = dcache_data[131:130] & signal_0213;
  assign signal_0536 = dcache_data[134:133] & signal_0214;
  assign signal_0513 = 4'h1 & signal_0209;
  assign signal_0517 = 4'hb & signal_0209;
  assign signal_0518 = 4'ha & signal_0209;
  assign signal_0519 = 4'h9 & signal_0209;
  assign signal_0520 = 4'h8 & signal_0209;
  assign signal_0521 = 4'h7 & signal_0209;
  assign signal_0522 = 4'h6 & signal_0209;
  assign signal_0523 = 4'h4 & signal_0209;
  assign signal_0524 = 4'h3 & signal_0209;
  assign signal_0531 = 4'h5 & signal_0209;
  assign signal_0532 = 4'h2 & signal_0209;
  assign signal_0534 = 2'h2 & signal_0213;
  assign signal_0535 = 2'h1 & signal_0213;
  assign signal_0537 = 2'h1 & signal_0214;
  assign signal_0555 = 2'h2 & signal_0214;
  assign signal_0931 = signal_0512 == signal_0513;
  assign signal_0932 = signal_0512 == signal_0517;
  assign signal_0933 = signal_0512 == signal_0518;
  assign signal_0934 = signal_0512 == signal_0519;
  assign signal_0935 = signal_0512 == signal_0520;
  assign signal_0936 = signal_0512 == signal_0521;
  assign signal_0937 = signal_0512 == signal_0522;
  assign signal_0938 = signal_0512 == signal_0523;
  assign signal_0939 = signal_0512 == signal_0524;
  assign signal_0940 = signal_0512 == signal_0531;
  assign signal_0941 = signal_0512 == signal_0532;
  assign signal_0942 = signal_0533 == signal_0534;
  assign signal_0943 = signal_0533 == signal_0535;
  assign signal_0944 = signal_0536 == signal_0537;
  assign signal_0945 = signal_0536 == signal_0555;
  assign signal_0086 = signal_0931 & signal_0247;
  assign signal_1019 = signal_0932 & signal_0247;
  assign signal_1021 = signal_0933 & signal_0247;
  assign signal_1023 = signal_0934 & signal_0247;
  assign signal_1025 = signal_0935 & signal_0247;
  assign signal_1027 = signal_0936 & signal_0247;
  assign signal_1029 = signal_0937 & signal_0247;
  assign signal_1033 = signal_0938 & signal_0247;
  assign signal_1035 = signal_0939 & signal_0247;
  assign signal_1031 = signal_0940 & signal_0247;
  assign signal_0082 = signal_0941 & signal_0247;
  assign signal_1037 = signal_0942 & signal_0248;
  assign signal_1039 = signal_0943 & signal_0248;
  assign signal_0364 = signal_0944 & signal_0249;
  assign signal_0055 = signal_0945 & signal_0249;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) dcache_first_q <= 1'h1;
    else if (dcache_rtrn_rd_en) dcache_first_q <= axi_rd_last;
reg [125:0] signal_1276 /* verilator public */;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) signal_1276 <= 126'h00000000000000000000000000000000;
    else if (icache_rtrn_rd_en) signal_1276 <= { axi_rd_user , icache_rtrn_o[140:17] };
  assign icache_rtrn_o[140:15] = signal_1276;
reg [1:0] signal_1277 /* verilator public */;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) signal_1277 <= 2'h0;
    else if (icache_rtrn_rd_en) signal_1277 <= signal_0037;
  assign icache_rtrn_o[14:13] = signal_1277;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) dcache_rd_shift_user_q <= 128'h00000000000000000000000000000000;
    else if (signal_0138) dcache_rd_shift_user_q <= dcache_rd_shift_user_d;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) icache_first_q <= 1'h1;
    else if (icache_rtrn_rd_en) icache_first_q <= axi_rd_last;
reg [63:0] signal_1280 /* verilator public */;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) signal_1280 <= 64'h0000000000000000;
    else if (icache_rtrn_rd_en) signal_1280 <= axi_rd_data;
  assign icache_rtrn_o[268:205] = signal_1280;
reg [63:0] signal_1281 /* verilator public */;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) signal_1281 <= 64'h0000000000000000;
    else if (icache_rtrn_rd_en) signal_1281 <= signal_0077;
  assign icache_rtrn_o[204:141] = signal_1281;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) dcache_rd_shift_q <= 128'h00000000000000000000000000000000;
    else if (signal_0138) dcache_rd_shift_q <= dcache_rd_shift_d;
reg [7:0] signal_1283 /* verilator public */;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) signal_1283 <= 8'h00;
    else signal_1283 <= dcache_rtrn_inv_d[9:2];
  assign dcache_rtrn_o[11:4] = signal_1283;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) amo_gen_r_q <= 1'h0;
    else if (signal_0140) amo_gen_r_q <= signal_0081;
  assign signal_0378 = axi_rd_valid_t0 & signal_0976;
  assign signal_0381 = signal_0979 & axi_rd_rdy;
  assign signal_0384 = axi_rd_valid_t0 & axi_rd_id_out[0];
  assign signal_0387 = signal_0982 & axi_rd_rdy;
  assign signal_0379 = signal_0977 & axi_rd_valid;
  assign signal_0382 = axi_rd_rdy_t0 & signal_0978;
  assign signal_0385 = axi_rd_id_out_t0[0] & axi_rd_valid;
  assign signal_0388 = axi_rd_rdy_t0 & signal_0981;
  assign signal_0380 = axi_rd_valid_t0 & signal_0977;
  assign signal_0383 = signal_0979 & axi_rd_rdy_t0;
  assign signal_0386 = axi_rd_valid_t0 & axi_rd_id_out_t0[0];
  assign signal_0389 = signal_0982 & axi_rd_rdy_t0;
  assign signal_0735 = signal_0378 | signal_0379;
  assign signal_0736 = signal_0381 | signal_0382;
  assign signal_0737 = signal_0384 | signal_0385;
  assign signal_0738 = signal_0387 | signal_0388;
  assign signal_0979 = signal_0735 | signal_0380;
  assign icache_rtrn_rd_en_t0 = signal_0736 | signal_0383;
  assign signal_0982 = signal_0737 | signal_0386;
  assign signal_0028 = signal_0738 | signal_0389;
  assign signal_0243 = | { dcache_rtrn_rd_en_t0 , dcache_sc_rtrn_t0 };
  assign signal_0245 = | { signal_0630 , signal_1023 , signal_1025 , signal_1027 };
  assign signal_0246 = | axi_rd_id_out_t0;
  assign signal_0250 = | arb_req_t0;
  assign signal_0148 = ~ { dcache_rtrn_rd_en_t0 , dcache_sc_rtrn_t0 };
  assign signal_0155 = ~ { signal_0630 , signal_1027 , signal_1025 , signal_1023 };
  assign signal_0171 = ~ axi_rd_id_out_t0;
  assign signal_0232 = ~ arb_req_t0;
  assign signal_0317 = { dcache_rtrn_rd_en , dcache_sc_rtrn } & signal_0148;
  assign signal_0327 = { signal_0629 , signal_1026 , signal_1024 , signal_1022 } & signal_0155;
  assign signal_0377 = axi_rd_id_out & signal_0171;
  assign signal_0621 = arb_req & signal_0232;
  assign signal_0253 = ! signal_0317;
  assign signal_0254 = ! signal_0327;
  assign signal_0255 = ! signal_0377;
  assign signal_0256 = ! signal_0533;
  assign signal_0257 = ! signal_0536;
  assign signal_0258 = ! signal_0621;
  assign signal_0139 = signal_0253 & signal_0243;
  assign signal_0242 = signal_0254 & signal_0245;
  assign signal_0977 = signal_0255 & signal_0246;
  assign signal_1041 = signal_0256 & signal_0248;
  assign signal_0374 = signal_0257 & signal_0249;
  assign signal_1016 = signal_0258 & signal_0250;
  assign signal_0156 = ~ { { 6{ signal_1018 } } };
  assign signal_0157 = ~ { { 6{ signal_1024 } } };
  assign signal_0158 = ~ { { 6{ signal_1022 } } };
  assign signal_0159 = ~ { { 6{ signal_0629 } } };
  assign signal_0160 = ~ { { 6{ signal_1028 } } };
  assign signal_0161 = ~ { { 6{ signal_1034 } } };
  assign signal_0162 = ~ { { 6{ signal_1032 } } };
  assign signal_0163 = ~ { { 6{ signal_0631 } } };
  assign signal_0164 = ~ { { 6{ signal_0241 } } };
  assign signal_0165 = ~ { { 16{ signal_1036 } } };
  assign signal_0166 = ~ { { 16{ signal_1040 } } };
  assign signal_0167 = ~ { { 16{ signal_0633 } } };
  assign signal_0169 = ~ { { 16{ signal_1042 } } };
  assign signal_0170 = ~ { { 16{ signal_1014 } } };
  assign signal_0190 = ~ { { 3{ wr_id_out[1] } } };
  assign signal_0192 = ~ { { 3{ b_empty } } };
  assign signal_0191 = ~ b_empty;
  assign signal_0193 = ~ dcache_wr_empty;
  assign signal_0194 = ~ axi_rd_id_out[1];
  assign signal_0195 = ~ { { 3{ axi_rd_id_out[1] } } };
  assign signal_0196 = ~ { { 3{ signal_0983 } } };
  assign signal_0197 = ~ signal_0983;
  assign signal_0198 = ~ { { 7{ invalidate } } };
  assign signal_0199 = ~ { { 3{ invalidate } } };
  assign axi_rd_rdy = ~ invalidate;
  assign signal_0200 = ~ { { 128{ dcache_sc_rtrn } } };
  assign signal_0202 = ~ { { 64{ dcache_first_q } } };
  assign signal_0203 = ~ { { 126{ dcache_rtrn_rd_en } } };
  assign signal_0204 = ~ { { 2{ dcache_first_q } } };
  assign signal_0205 = ~ { { 2{ dcache_rtrn_rd_en } } };
  assign signal_0201 = ~ { { 64{ dcache_rtrn_rd_en } } };
  assign signal_0206 = ~ { { 64{ icache_first_q } } };
  assign signal_0207 = ~ { { 2{ icache_first_q } } };
  assign signal_0208 = ~ { { 16{ signal_1013 } } };
  assign signal_0210 = ~ { { 3{ signal_1017 } } };
  assign signal_0211 = ~ { { 4{ signal_1030 } } };
  assign signal_0212 = ~ { { 128{ signal_1030 } } };
  assign signal_0215 = ~ { { 3{ signal_1014 } } };
  assign signal_0216 = ~ { { 6{ signal_1014 } } };
  assign signal_0217 = ~ { { 4{ signal_1014 } } };
  assign signal_0218 = ~ { { 128{ signal_1014 } } };
  assign signal_0168 = ~ signal_1014;
  assign signal_0220 = ~ { { 3{ arb_idx } } };
  assign signal_0221 = ~ { { 6{ arb_idx } } };
  assign signal_0222 = ~ { { 16{ arb_idx } } };
  assign signal_0223 = ~ { { 4{ arb_idx } } };
  assign signal_0224 = ~ { { 128{ arb_idx } } };
  assign signal_0219 = ~ arb_idx;
  assign signal_0225 = ~ { { 3{ signal_1015 } } };
  assign signal_0226 = ~ { { 6{ signal_1015 } } };
  assign signal_0227 = ~ { { 16{ signal_1015 } } };
  assign signal_0228 = ~ { { 4{ signal_1015 } } };
  assign signal_0229 = ~ { { 128{ signal_1015 } } };
  assign signal_0230 = ~ { { 64{ arb_idx } } };
  assign signal_0231 = ~ { { 4{ dcache_data[74] } } };
  assign signal_0234 = ~ { { 32{ dcache_data[132] } } };
  assign signal_0235 = ~ { { 2{ dcache_wr_pop } } };
  assign signal_0689 = { { 6{ signal_1019 } } } | signal_0156;
  assign signal_0692 = { { 6{ signal_1025 } } } | signal_0157;
  assign signal_0695 = { { 6{ signal_1023 } } } | signal_0158;
  assign signal_0698 = { { 6{ signal_0630 } } } | signal_0159;
  assign signal_0701 = { { 6{ signal_1029 } } } | signal_0160;
  assign signal_0704 = { { 6{ signal_1035 } } } | signal_0161;
  assign signal_0707 = { { 6{ signal_1033 } } } | signal_0162;
  assign signal_0710 = { { 6{ signal_0632 } } } | signal_0163;
  assign signal_0713 = { { 6{ signal_0242 } } } | signal_0164;
  assign signal_0716 = { { 16{ signal_1037 } } } | signal_0165;
  assign signal_0719 = { { 16{ signal_1041 } } } | signal_0166;
  assign signal_0722 = { { 16{ signal_0634 } } } | signal_0167;
  assign signal_0728 = { { 16{ signal_0374 } } } | signal_0169;
  assign signal_0731 = { { 16{ signal_0055 } } } | signal_0170;
  assign signal_0752 = { { 3{ wr_id_out_t0[1] } } } | signal_0190;
  assign signal_0756 = { { 3{ b_empty_t0 } } } | signal_0192;
  assign signal_0755 = b_empty_t0 | signal_0191;
  assign signal_0759 = dcache_wr_empty_t0 | signal_0193;
  assign signal_0761 = axi_rd_id_out_t0[1] | signal_0194;
  assign signal_0764 = { { 3{ axi_rd_id_out_t0[1] } } } | signal_0195;
  assign signal_0767 = { { 3{ signal_0028 } } } | signal_0196;
  assign signal_0770 = signal_0028 | signal_0197;
  assign signal_0775 = { { 7{ axi_rd_rdy_t0 } } } | signal_0198;
  assign signal_0778 = { { 3{ axi_rd_rdy_t0 } } } | signal_0199;
  assign signal_0774 = axi_rd_rdy_t0 | axi_rd_rdy;
  assign signal_0782 = { { 128{ dcache_sc_rtrn_t0 } } } | signal_0200;
  assign signal_0789 = { { 64{ dcache_first_q_t0 } } } | signal_0202;
  assign signal_0792 = { { 126{ dcache_rtrn_rd_en_t0 } } } | signal_0203;
  assign signal_0795 = { { 2{ dcache_first_q_t0 } } } | signal_0204;
  assign signal_0798 = { { 2{ dcache_rtrn_rd_en_t0 } } } | signal_0205;
  assign signal_0786 = { { 64{ dcache_rtrn_rd_en_t0 } } } | signal_0201;
  assign signal_0802 = { { 64{ icache_first_q_t0 } } } | signal_0206;
  assign signal_0805 = { { 2{ icache_first_q_t0 } } } | signal_0207;
  assign signal_0808 = { { 16{ signal_0086 } } } | signal_0208;
  assign signal_0811 = { { 3{ signal_0082 } } } | signal_0210;
  assign signal_0814 = { { 4{ signal_1031 } } } | signal_0211;
  assign signal_0817 = { { 128{ signal_1031 } } } | signal_0212;
  assign signal_0820 = { { 3{ signal_0055 } } } | signal_0215;
  assign signal_0823 = { { 6{ signal_0055 } } } | signal_0216;
  assign signal_0826 = { { 4{ signal_0055 } } } | signal_0217;
  assign signal_0829 = { { 128{ signal_0055 } } } | signal_0218;
  assign signal_0725 = signal_0055 | signal_0168;
  assign signal_0834 = { { 3{ arb_idx_t0 } } } | signal_0220;
  assign signal_0837 = { { 6{ arb_idx_t0 } } } | signal_0221;
  assign signal_0840 = { { 16{ arb_idx_t0 } } } | signal_0222;
  assign signal_0843 = { { 4{ arb_idx_t0 } } } | signal_0223;
  assign signal_0846 = { { 128{ arb_idx_t0 } } } | signal_0224;
  assign signal_0832 = arb_idx_t0 | signal_0219;
  assign signal_0849 = { { 3{ signal_1016 } } } | signal_0225;
  assign signal_0853 = { { 6{ signal_1016 } } } | signal_0226;
  assign signal_0856 = { { 16{ signal_1016 } } } | signal_0227;
  assign signal_0859 = { { 4{ signal_1016 } } } | signal_0228;
  assign signal_0862 = { { 128{ signal_1016 } } } | signal_0229;
  assign signal_0867 = { { 64{ arb_idx_t0 } } } | signal_0230;
  assign signal_0870 = { { 4{ dcache_data_t0[74] } } } | signal_0231;
  assign signal_0875 = { { 32{ dcache_data_t0[132] } } } | signal_0234;
  assign signal_0878 = { { 2{ dcache_wr_pop_t0 } } } | signal_0235;
  assign signal_0690 = { { 6{ signal_1019 } } } | { { 6{ signal_1018 } } };
  assign signal_0693 = { { 6{ signal_1025 } } } | { { 6{ signal_1024 } } };
  assign signal_0696 = { { 6{ signal_1023 } } } | { { 6{ signal_1022 } } };
  assign signal_0699 = { { 6{ signal_0630 } } } | { { 6{ signal_0629 } } };
  assign signal_0702 = { { 6{ signal_1029 } } } | { { 6{ signal_1028 } } };
  assign signal_0705 = { { 6{ signal_1035 } } } | { { 6{ signal_1034 } } };
  assign signal_0708 = { { 6{ signal_1033 } } } | { { 6{ signal_1032 } } };
  assign signal_0711 = { { 6{ signal_0632 } } } | { { 6{ signal_0631 } } };
  assign signal_0714 = { { 6{ signal_0242 } } } | { { 6{ signal_0241 } } };
  assign signal_0717 = { { 16{ signal_1037 } } } | { { 16{ signal_1036 } } };
  assign signal_0720 = { { 16{ signal_1041 } } } | { { 16{ signal_1040 } } };
  assign signal_0723 = { { 16{ signal_0634 } } } | { { 16{ signal_0633 } } };
  assign signal_0729 = { { 16{ signal_0374 } } } | { { 16{ signal_1042 } } };
  assign signal_0732 = { { 16{ signal_0055 } } } | { { 16{ signal_1014 } } };
  assign signal_0751 = wr_id_out_t0[1] | wr_id_out[1];
  assign signal_0753 = { { 3{ wr_id_out_t0[1] } } } | { { 3{ wr_id_out[1] } } };
  assign signal_0757 = { { 3{ b_empty_t0 } } } | { { 3{ b_empty } } };
  assign signal_0760 = dcache_wr_empty_t0 | dcache_wr_empty;
  assign signal_0762 = axi_rd_id_out_t0[1] | axi_rd_id_out[1];
  assign signal_0765 = { { 3{ axi_rd_id_out_t0[1] } } } | { { 3{ axi_rd_id_out[1] } } };
  assign signal_0768 = { { 3{ signal_0028 } } } | { { 3{ signal_0983 } } };
  assign signal_0771 = signal_0028 | signal_0983;
  assign signal_0776 = { { 7{ axi_rd_rdy_t0 } } } | { { 7{ invalidate } } };
  assign signal_0779 = { { 3{ axi_rd_rdy_t0 } } } | { { 3{ invalidate } } };
  assign signal_0781 = icache_rtrn_rd_en_t0 | signal_0980;
  assign signal_0783 = { { 128{ dcache_sc_rtrn_t0 } } } | { { 128{ dcache_sc_rtrn } } };
  assign signal_0790 = { { 64{ dcache_first_q_t0 } } } | { { 64{ dcache_first_q } } };
  assign signal_0793 = { { 126{ dcache_rtrn_rd_en_t0 } } } | { { 126{ dcache_rtrn_rd_en } } };
  assign signal_0796 = { { 2{ dcache_first_q_t0 } } } | { { 2{ dcache_first_q } } };
  assign signal_0799 = { { 2{ dcache_rtrn_rd_en_t0 } } } | { { 2{ dcache_rtrn_rd_en } } };
  assign signal_0787 = { { 64{ dcache_rtrn_rd_en_t0 } } } | { { 64{ dcache_rtrn_rd_en } } };
  assign signal_0803 = { { 64{ icache_first_q_t0 } } } | { { 64{ icache_first_q } } };
  assign signal_0806 = { { 2{ icache_first_q_t0 } } } | { { 2{ icache_first_q } } };
  assign signal_0809 = { { 16{ signal_0086 } } } | { { 16{ signal_1013 } } };
  assign signal_0812 = { { 3{ signal_0082 } } } | { { 3{ signal_1017 } } };
  assign signal_0815 = { { 4{ signal_1031 } } } | { { 4{ signal_1030 } } };
  assign signal_0818 = { { 128{ signal_1031 } } } | { { 128{ signal_1030 } } };
  assign signal_0821 = { { 3{ signal_0055 } } } | { { 3{ signal_1014 } } };
  assign signal_0824 = { { 6{ signal_0055 } } } | { { 6{ signal_1014 } } };
  assign signal_0827 = { { 4{ signal_0055 } } } | { { 4{ signal_1014 } } };
  assign signal_0830 = { { 128{ signal_0055 } } } | { { 128{ signal_1014 } } };
  assign signal_0726 = signal_0055 | signal_1014;
  assign signal_0835 = { { 3{ arb_idx_t0 } } } | { { 3{ arb_idx } } };
  assign signal_0838 = { { 6{ arb_idx_t0 } } } | { { 6{ arb_idx } } };
  assign signal_0841 = { { 16{ arb_idx_t0 } } } | { { 16{ arb_idx } } };
  assign signal_0844 = { { 4{ arb_idx_t0 } } } | { { 4{ arb_idx } } };
  assign signal_0847 = { { 128{ arb_idx_t0 } } } | { { 128{ arb_idx } } };
  assign signal_0833 = arb_idx_t0 | arb_idx;
  assign signal_0850 = { { 3{ signal_1016 } } } | { { 3{ signal_1015 } } };
  assign signal_0852 = signal_1016 | signal_1015;
  assign signal_0854 = { { 6{ signal_1016 } } } | { { 6{ signal_1015 } } };
  assign signal_0857 = { { 16{ signal_1016 } } } | { { 16{ signal_1015 } } };
  assign signal_0860 = { { 4{ signal_1016 } } } | { { 4{ signal_1015 } } };
  assign signal_0863 = { { 128{ signal_1016 } } } | { { 128{ signal_1015 } } };
  assign signal_0868 = { { 64{ arb_idx_t0 } } } | { { 64{ arb_idx } } };
  assign signal_0871 = { { 4{ dcache_data_t0[74] } } } | { { 4{ dcache_data[74] } } };
  assign signal_0876 = { { 32{ dcache_data_t0[132] } } } | { { 32{ dcache_data[132] } } };
  assign signal_0879 = { { 2{ dcache_wr_pop_t0 } } } | { { 2{ dcache_wr_pop } } };
  assign signal_0328 = 6'h00 & signal_0689;
  assign signal_0331 = 6'h00 & signal_0692;
  assign signal_0334 = signal_0951 & signal_0695;
  assign signal_0337 = signal_0953 & signal_0698;
  assign signal_0340 = 6'h00 & signal_0701;
  assign signal_0343 = 6'h00 & signal_0704;
  assign signal_0346 = signal_0959 & signal_0707;
  assign signal_0349 = signal_0961 & signal_0710;
  assign signal_0352 = signal_0963 & signal_0713;
  assign signal_0355 = signal_1002 & signal_0716;
  assign signal_0358 = signal_1006 & signal_0719;
  assign signal_0361 = signal_0967 & signal_0722;
  assign signal_0365 = signal_0364 & signal_0725;
  assign signal_0368 = 16'h0000 & signal_0728;
  assign signal_0371 = signal_0970 & signal_0731;
  assign signal_0375 = signal_0374 & signal_0725;
  assign signal_0425 = 3'h0 & signal_0752;
  assign signal_0428 = signal_0106 & signal_0755;
  assign signal_0430 = signal_0112 & signal_0756;
  assign signal_0433 = signal_0104 & signal_0755;
  assign signal_0435 = axi_rd_last_t0 & signal_0759;
  assign signal_0440 = axi_rd_last_t0 & signal_0761;
  assign signal_0443 = 3'h0 & signal_0764;
  assign signal_0446 = signal_0102 & signal_0767;
  assign signal_0449 = signal_0072 & signal_0770;
  assign signal_0456 = signal_0074 & signal_0770;
  assign signal_0458 = b_empty_t0 & signal_0770;
  assign signal_0460 = 7'h00 & signal_0775;
  assign signal_0463 = signal_0032 & signal_0774;
  assign signal_0465 = signal_0030 & signal_0778;
  assign signal_0468 = signal_0034 & signal_0774;
  assign signal_0470 = signal_0022 & signal_0774;
  assign signal_0472 = signal_0028 & signal_0774;
  assign signal_0474 = signal_0036 & signal_0774;
  assign signal_0476 = signal_0024 & signal_0774;
  assign signal_0480 = 128'h00000000000000000000000000000000 & signal_0782;
  assign signal_0485 = signal_0100[127:64] & signal_0786;
  assign signal_0488 = dcache_rd_shift_q_t0[127:64] & signal_0789;
  assign signal_0491 = signal_0068[127:2] & signal_0792;
  assign signal_0494 = dcache_rd_shift_user_q_t0[3:2] & signal_0795;
  assign signal_0497 = signal_0068[1:0] & signal_0798;
  assign signal_0500 = signal_0100[63:0] & signal_0786;
  assign signal_0503 = icache_rtrn_o_t0[268:205] & signal_0802;
  assign signal_0506 = icache_rtrn_o_t0[16:15] & signal_0805;
  assign signal_0509 = signal_0090 & signal_0808;
  assign signal_0514 = 3'h0 & signal_0811;
  assign signal_0525 = signal_0001 & signal_0814;
  assign signal_0528 = { 64'h0000000000000000 , dcache_data_t0[71:8] } & signal_0817;
  assign signal_0538 = 3'h0 & signal_0820;
  assign signal_0543 = 6'h00 & signal_0823;
  assign signal_0546 = signal_0001 & signal_0826;
  assign signal_0549 = { 64'h0000000000000000 , dcache_data_t0[71:8] } & signal_0829;
  assign signal_0563 = 6'h00 & signal_0837;
  assign signal_0566 = 16'h0000 & signal_0840;
  assign signal_0569 = signal_0001 & signal_0843;
  assign signal_0572 = { 64'h0000000000000000 , dcache_data_t0[71:8] } & signal_0846;
  assign signal_0583 = 3'h0 & signal_0849;
  assign signal_0588 = 6'h00 & signal_0853;
  assign signal_0591 = 16'h0000 & signal_0856;
  assign signal_0594 = signal_0001 & signal_0859;
  assign signal_0597 = { 64'h0000000000000000 , dcache_data_t0[71:8] } & signal_0862;
  assign signal_0610 = icache_data_t0[2] & signal_0832;
  assign signal_0558 = 3'h0 & signal_0834;
  assign signal_0615 = { 8'h00 , icache_data_t0[58:3] } & signal_0867;
  assign signal_0618 = { 3'h0 , dcache_data_t0[7] } & signal_0870;
  assign signal_0623 = { 30'h00000000 , dcache_data_t0[131:130] } & signal_0875;
  assign signal_0626 = dcache_rtrn_rd_tid_t0 & signal_0878;
  assign signal_0329 = 6'h00 & signal_0690;
  assign signal_0332 = 6'h00 & signal_0693;
  assign signal_0335 = 6'h00 & signal_0696;
  assign signal_0338 = signal_0949 & signal_0699;
  assign signal_0341 = 6'h00 & signal_0702;
  assign signal_0344 = 6'h00 & signal_0705;
  assign signal_0347 = 6'h00 & signal_0708;
  assign signal_0350 = signal_0957 & signal_0711;
  assign signal_0353 = signal_0955 & signal_0714;
  assign signal_0356 = signal_1004 & signal_0717;
  assign signal_0359 = signal_1000 & signal_0720;
  assign signal_0362 = signal_0965 & signal_0723;
  assign signal_0369 = signal_0090 & signal_0729;
  assign signal_0372 = signal_0115 & signal_0732;
  assign signal_0422 = amo_gen_r_q_t0 & signal_0751;
  assign signal_0426 = 3'h0 & signal_0753;
  assign signal_0431 = 3'h0 & signal_0757;
  assign signal_0437 = axi_rd_last_t0 & signal_0760;
  assign signal_0438 = signal_0108 & signal_0762;
  assign signal_0441 = signal_0098 & signal_0762;
  assign signal_0444 = 3'h0 & signal_0765;
  assign signal_0447 = signal_0070 & signal_0768;
  assign signal_0450 = signal_0076 & signal_0771;
  assign signal_0452 = signal_0064 & signal_0771;
  assign signal_0454 = axi_rd_last_t0 & signal_0771;
  assign signal_0461 = dcache_data_t0[78:72] & signal_0776;
  assign signal_0466 = 3'h0 & signal_0779;
  assign signal_0478 = axi_rd_last_t0 & signal_0781;
  assign signal_0481 = signal_1008 & signal_0783;
  assign signal_0483 = signal_1007 & signal_0783;
  assign signal_0486 = axi_rd_data_t0 & signal_0787;
  assign signal_0489 = axi_rd_data_t0 & signal_0790;
  assign signal_0492 = { axi_rd_user_t0 , dcache_rd_shift_user_q_t0[127:4] } & signal_0793;
  assign signal_0495 = axi_rd_user_t0 & signal_0796;
  assign signal_0498 = signal_0026 & signal_0799;
  assign signal_0501 = signal_0066 & signal_0787;
  assign signal_0504 = axi_rd_data_t0 & signal_0803;
  assign signal_0507 = axi_rd_user_t0 & signal_0806;
  assign signal_0510 = 16'h0000 & signal_0809;
  assign signal_0515 = signal_0131[2:0] & signal_0812;
  assign signal_0526 = { 3'h0 , dcache_data_t0[7] } & signal_0815;
  assign signal_0529 = { 64'h0000000000000000 , dcache_data_t0[71:8] } & signal_0818;
  assign signal_0539 = signal_0084 & signal_0821;
  assign signal_0541 = arb_gnt_t0 & signal_0726;
  assign signal_0544 = signal_0088 & signal_0824;
  assign signal_0547 = signal_0110 & signal_0827;
  assign signal_0550 = signal_0092 & signal_0830;
  assign signal_0366 = signal_0086 & signal_0726;
  assign signal_0553 = signal_0082 & signal_0726;
  assign signal_0556 = signal_0047 & signal_0833;
  assign signal_0559 = signal_0042 & signal_0835;
  assign signal_0561 = signal_0080 & signal_0833;
  assign signal_0564 = signal_0049 & signal_0838;
  assign signal_0567 = signal_0051 & signal_0841;
  assign signal_0570 = signal_0096 & signal_0844;
  assign signal_0573 = signal_0053 & signal_0847;
  assign signal_0575 = signal_0055 & signal_0833;
  assign signal_0577 = signal_0045 & signal_0833;
  assign signal_0579 = signal_0057 & signal_0833;
  assign signal_0581 = signal_0059 & signal_0833;
  assign signal_0584 = signal_0003 & signal_0850;
  assign signal_0586 = signal_0040 & signal_0852;
  assign signal_0589 = signal_0010 & signal_0854;
  assign signal_0592 = signal_0012 & signal_0857;
  assign signal_0595 = signal_0061 & signal_0860;
  assign signal_0598 = signal_0014 & signal_0863;
  assign signal_0600 = signal_0016 & signal_0852;
  assign signal_0602 = signal_0018 & signal_0852;
  assign signal_0604 = signal_0006 & signal_0852;
  assign signal_0606 = signal_0020 & signal_0852;
  assign signal_0608 = signal_0008 & signal_0852;
  assign signal_0611 = dcache_data_t0[132] & signal_0833;
  assign signal_0613 = signal_1055[2:0] & signal_0835;
  assign signal_0616 = { 8'h00 , dcache_data_t0[127:72] } & signal_0868;
  assign signal_0619 = 4'h0 & signal_0871;
  assign signal_0624 = 32'd0 & signal_0876;
  assign signal_0627 = dcache_rtrn_wr_tid_t0 & signal_0879;
  assign signal_0691 = signal_0328 | signal_0329;
  assign signal_0694 = signal_0331 | signal_0332;
  assign signal_0697 = signal_0334 | signal_0335;
  assign signal_0700 = signal_0337 | signal_0338;
  assign signal_0703 = signal_0340 | signal_0341;
  assign signal_0706 = signal_0343 | signal_0344;
  assign signal_0709 = signal_0346 | signal_0347;
  assign signal_0712 = signal_0349 | signal_0350;
  assign signal_0715 = signal_0352 | signal_0353;
  assign signal_0718 = signal_0355 | signal_0356;
  assign signal_0721 = signal_0358 | signal_0359;
  assign signal_0724 = signal_0361 | signal_0362;
  assign signal_0727 = signal_0365 | signal_0366;
  assign signal_0730 = signal_0368 | signal_0369;
  assign signal_0733 = signal_0371 | signal_0372;
  assign signal_0734 = signal_0375 | signal_0366;
  assign signal_0754 = signal_0425 | signal_0426;
  assign signal_0758 = signal_0430 | signal_0431;
  assign signal_0763 = signal_0440 | signal_0441;
  assign signal_0766 = signal_0443 | signal_0444;
  assign signal_0769 = signal_0446 | signal_0447;
  assign signal_0772 = signal_0449 | signal_0450;
  assign signal_0773 = signal_0449 | signal_0454;
  assign signal_0777 = signal_0460 | signal_0461;
  assign signal_0780 = signal_0465 | signal_0466;
  assign signal_0784 = signal_0480 | signal_0481;
  assign signal_0785 = signal_0480 | signal_0483;
  assign signal_0788 = signal_0485 | signal_0486;
  assign signal_0791 = signal_0488 | signal_0489;
  assign signal_0794 = signal_0491 | signal_0492;
  assign signal_0797 = signal_0494 | signal_0495;
  assign signal_0800 = signal_0497 | signal_0498;
  assign signal_0801 = signal_0500 | signal_0501;
  assign signal_0804 = signal_0503 | signal_0504;
  assign signal_0807 = signal_0506 | signal_0507;
  assign signal_0810 = signal_0509 | signal_0510;
  assign signal_0813 = signal_0514 | signal_0515;
  assign signal_0816 = signal_0525 | signal_0526;
  assign signal_0819 = signal_0528 | signal_0529;
  assign signal_0822 = signal_0538 | signal_0539;
  assign signal_0825 = signal_0543 | signal_0544;
  assign signal_0828 = signal_0546 | signal_0547;
  assign signal_0831 = signal_0549 | signal_0550;
  assign signal_0836 = signal_0558 | signal_0559;
  assign signal_0839 = signal_0563 | signal_0564;
  assign signal_0842 = signal_0566 | signal_0567;
  assign signal_0845 = signal_0569 | signal_0570;
  assign signal_0848 = signal_0572 | signal_0573;
  assign signal_0851 = signal_0583 | signal_0584;
  assign signal_0855 = signal_0588 | signal_0589;
  assign signal_0858 = signal_0591 | signal_0592;
  assign signal_0861 = signal_0594 | signal_0595;
  assign signal_0864 = signal_0597 | signal_0598;
  assign signal_0865 = signal_0610 | signal_0611;
  assign signal_0866 = signal_0558 | signal_0613;
  assign signal_0869 = signal_0615 | signal_0616;
  assign signal_0872 = signal_0618 | signal_0619;
  assign signal_0877 = signal_0623 | signal_0624;
  assign signal_0880 = signal_0626 | signal_0627;
  assign signal_0890 = signal_0950 ^ 6'h26;
  assign signal_0891 = signal_0952 ^ signal_0948;
  assign signal_0892 = signal_0958 ^ 6'h20;
  assign signal_0893 = signal_0960 ^ signal_0956;
  assign signal_0894 = signal_0962 ^ signal_0954;
  assign signal_0895 = signal_1001 ^ signal_1003;
  assign signal_0896 = signal_1005 ^ signal_0999;
  assign signal_0897 = signal_0966 ^ signal_0964;
  assign signal_0898 = signal_0968 ^ signal_0085;
  assign signal_0899 = signal_0969 ^ signal_0114;
  assign signal_0900 = signal_0971 ^ signal_0094;
  assign signal_0903 = signal_0111 ^ 3'h2;
  assign signal_0904 = axi_rd_last ^ signal_0097;
  assign signal_0905 = signal_0101 ^ signal_0069;
  assign signal_0906 = signal_0071 ^ signal_0075;
  assign signal_0907 = signal_0071 ^ axi_rd_last;
  assign signal_0910 = signal_0099[127:64] ^ axi_rd_data;
  assign signal_0911 = dcache_rd_shift_q[127:64] ^ axi_rd_data;
  assign signal_0912 = signal_0067[127:2] ^ { axi_rd_user , dcache_rd_shift_user_q[127:4] };
  assign signal_0913 = dcache_rd_shift_user_q[3:2] ^ axi_rd_user;
  assign signal_0914 = signal_0067[1:0] ^ signal_0025;
  assign signal_0915 = signal_0099[63:0] ^ signal_0065;
  assign signal_0886 = icache_rtrn_o[268:205] ^ axi_rd_data;
  assign signal_0916 = icache_rtrn_o[16:15] ^ axi_rd_user;
  assign signal_0917 = signal_0000 ^ signal_0998;
  assign signal_0918 = { 64'h0000000000000000 , dcache_data[71:8] } ^ signal_0997;
  assign signal_0919 = signal_0000 ^ signal_0109;
  assign signal_0920 = { 64'h0000000000000000 , dcache_data[71:8] } ^ signal_0091;
  assign signal_0921 = signal_0000 ^ signal_0095;
  assign signal_0922 = { 64'h0000000000000000 , dcache_data[71:8] } ^ signal_0052;
  assign signal_0923 = signal_0000 ^ signal_0060;
  assign signal_0924 = { 64'h0000000000000000 , dcache_data[71:8] } ^ signal_0013;
  assign signal_0925 = signal_0043 ^ signal_0004;
  assign signal_0926 = 3'h3 ^ signal_1054[2:0];
  assign signal_0927 = { 8'h00 , icache_data[58:3] } ^ { 8'h00 , dcache_data[127:72] };
  assign signal_0929 = { 30'h00000000 , dcache_data[131:130] } ^ 32'd3;
  assign signal_0930 = dcache_rtrn_rd_tid ^ dcache_rtrn_wr_tid;
  assign signal_0330 = { { 6{ signal_1019 } } } & 6'h02;
  assign signal_0333 = { { 6{ signal_1025 } } } & 6'h06;
  assign signal_0336 = { { 6{ signal_1023 } } } & signal_0890;
  assign signal_0339 = { { 6{ signal_0630 } } } & signal_0891;
  assign signal_0342 = { { 6{ signal_1029 } } } & 6'h02;
  assign signal_0345 = { { 6{ signal_1035 } } } & 6'h30;
  assign signal_0348 = { { 6{ signal_1033 } } } & signal_0892;
  assign signal_0351 = { { 6{ signal_0632 } } } & signal_0893;
  assign signal_0354 = { { 6{ signal_0242 } } } & signal_0894;
  assign signal_0357 = { { 16{ signal_1037 } } } & signal_0895;
  assign signal_0360 = { { 16{ signal_1041 } } } & signal_0896;
  assign signal_0363 = { { 16{ signal_0634 } } } & signal_0897;
  assign signal_0367 = signal_0055 & signal_0898;
  assign signal_0370 = { { 16{ signal_0374 } } } & signal_0089;
  assign signal_0373 = { { 16{ signal_0055 } } } & signal_0899;
  assign signal_0376 = signal_0055 & signal_0900;
  assign signal_0423 = wr_id_out_t0[1] & signal_0113;
  assign signal_0424 = wr_id_out_t0[1] & amo_gen_r_q;
  assign signal_0427 = { { 3{ wr_id_out_t0[1] } } } & 3'h2;
  assign signal_0429 = b_empty_t0 & signal_0105;
  assign signal_0432 = { { 3{ b_empty_t0 } } } & signal_0903;
  assign signal_0434 = b_empty_t0 & signal_0103;
  assign signal_0436 = dcache_wr_empty_t0 & axi_rd_last;
  assign signal_0439 = axi_rd_id_out_t0[1] & signal_0107;
  assign signal_0442 = axi_rd_id_out_t0[1] & signal_0904;
  assign signal_0445 = { { 3{ axi_rd_id_out_t0[1] } } } & 3'h1;
  assign signal_0448 = { { 3{ signal_0028 } } } & signal_0905;
  assign signal_0451 = signal_0028 & signal_0906;
  assign signal_0453 = signal_0028 & signal_0063;
  assign signal_0455 = signal_0028 & signal_0907;
  assign signal_0457 = signal_0028 & signal_0073;
  assign signal_0459 = signal_0028 & signal_0062;
  assign signal_0462 = { { 7{ axi_rd_rdy_t0 } } } & dcache_data[78:72];
  assign signal_0464 = axi_rd_rdy_t0 & signal_0143;
  assign signal_0467 = { { 3{ axi_rd_rdy_t0 } } } & signal_0029;
  assign signal_0469 = axi_rd_rdy_t0 & signal_0033;
  assign signal_0471 = axi_rd_rdy_t0 & signal_0021;
  assign signal_0473 = axi_rd_rdy_t0 & signal_0027;
  assign signal_0475 = axi_rd_rdy_t0 & signal_0035;
  assign signal_0477 = axi_rd_rdy_t0 & signal_0023;
  assign signal_0479 = icache_rtrn_rd_en_t0 & axi_rd_last;
  assign signal_0482 = { { 128{ dcache_sc_rtrn_t0 } } } & signal_0908;
  assign signal_0484 = { { 128{ dcache_sc_rtrn_t0 } } } & signal_0909;
  assign signal_0487 = { { 64{ dcache_rtrn_rd_en_t0 } } } & signal_0910;
  assign signal_0490 = { { 64{ dcache_first_q_t0 } } } & signal_0911;
  assign signal_0493 = { { 126{ dcache_rtrn_rd_en_t0 } } } & signal_0912;
  assign signal_0496 = { { 2{ dcache_first_q_t0 } } } & signal_0913;
  assign signal_0499 = { { 2{ dcache_rtrn_rd_en_t0 } } } & signal_0914;
  assign signal_0502 = { { 64{ dcache_rtrn_rd_en_t0 } } } & signal_0915;
  assign signal_0505 = { { 64{ icache_first_q_t0 } } } & signal_0886;
  assign signal_0508 = { { 2{ icache_first_q_t0 } } } & signal_0916;
  assign signal_0511 = { { 16{ signal_0086 } } } & signal_0089;
  assign signal_0516 = { { 3{ signal_0082 } } } & signal_0130[2:0];
  assign signal_0527 = { { 4{ signal_1031 } } } & signal_0917;
  assign signal_0530 = { { 128{ signal_1031 } } } & signal_0918;
  assign signal_0540 = { { 3{ signal_0055 } } } & signal_0083;
  assign signal_0542 = signal_0055 & arb_gnt;
  assign signal_0545 = { { 6{ signal_0055 } } } & signal_0087;
  assign signal_0548 = { { 4{ signal_0055 } } } & signal_0919;
  assign signal_0551 = { { 128{ signal_0055 } } } & signal_0920;
  assign signal_0552 = signal_0055 & signal_0085;
  assign signal_0554 = signal_0055 & signal_0093;
  assign signal_0557 = arb_idx_t0 & signal_0142;
  assign signal_0560 = { { 3{ arb_idx_t0 } } } & signal_0041;
  assign signal_0562 = arb_idx_t0 & signal_0079;
  assign signal_0565 = { { 6{ arb_idx_t0 } } } & signal_0048;
  assign signal_0568 = { { 16{ arb_idx_t0 } } } & signal_0050;
  assign signal_0571 = { { 4{ arb_idx_t0 } } } & signal_0921;
  assign signal_0574 = { { 128{ arb_idx_t0 } } } & signal_0922;
  assign signal_0576 = arb_idx_t0 & signal_0054;
  assign signal_0578 = arb_idx_t0 & signal_0044;
  assign signal_0580 = arb_idx_t0 & signal_0056;
  assign signal_0582 = arb_idx_t0 & signal_0058;
  assign signal_0585 = { { 3{ signal_1016 } } } & signal_0002;
  assign signal_0587 = signal_1016 & signal_0039;
  assign signal_0590 = { { 6{ signal_1016 } } } & signal_0009;
  assign signal_0593 = { { 16{ signal_1016 } } } & signal_0011;
  assign signal_0596 = { { 4{ signal_1016 } } } & signal_0923;
  assign signal_0599 = { { 128{ signal_1016 } } } & signal_0924;
  assign signal_0601 = signal_1016 & signal_0015;
  assign signal_0603 = signal_1016 & signal_0017;
  assign signal_0605 = signal_1016 & signal_0005;
  assign signal_0607 = signal_1016 & signal_0019;
  assign signal_0609 = signal_1016 & signal_0007;
  assign signal_0612 = arb_idx_t0 & signal_0925;
  assign signal_0614 = { { 3{ arb_idx_t0 } } } & signal_0926;
  assign signal_0617 = { { 64{ arb_idx_t0 } } } & signal_0927;
  assign signal_0620 = { { 4{ dcache_data_t0[74] } } } & { 3'h0 , dcache_data[7] };
  assign signal_0625 = { { 32{ dcache_data_t0[132] } } } & signal_0929;
  assign signal_0628 = { { 2{ dcache_wr_pop_t0 } } } & signal_0930;
  assign signal_0949 = signal_0330 | signal_0691;
  assign signal_0951 = signal_0333 | signal_0694;
  assign signal_0953 = signal_0336 | signal_0697;
  assign signal_0955 = signal_0339 | signal_0700;
  assign signal_0957 = signal_0342 | signal_0703;
  assign signal_0959 = signal_0345 | signal_0706;
  assign signal_0961 = signal_0348 | signal_0709;
  assign signal_0963 = signal_0351 | signal_0712;
  assign signal_0088 = signal_0354 | signal_0715;
  assign signal_0965 = signal_0357 | signal_0718;
  assign signal_0967 = signal_0360 | signal_0721;
  assign signal_0090 = signal_0363 | signal_0724;
  assign signal_0047 = signal_0367 | signal_0727;
  assign signal_0970 = signal_0370 | signal_0730;
  assign signal_0051 = signal_0373 | signal_0733;
  assign signal_0059 = signal_0376 | signal_0734;
  assign signal_0106 = signal_0423 | signal_0422;
  assign signal_0104 = signal_0424 | signal_0422;
  assign signal_0112 = signal_0427 | signal_0754;
  assign signal_0074 = signal_0429 | signal_0428;
  assign signal_0102 = signal_0432 | signal_0758;
  assign signal_0072 = signal_0434 | signal_0433;
  assign signal_0108 = signal_0436 | signal_0435;
  assign signal_0098 = signal_0436 | signal_0437;
  assign signal_0076 = signal_0439 | signal_0438;
  assign signal_0064 = signal_0442 | signal_0763;
  assign signal_0070 = signal_0445 | signal_0766;
  assign signal_0030 = signal_0448 | signal_0769;
  assign signal_0036 = signal_0451 | signal_0772;
  assign signal_0024 = signal_0453 | signal_0452;
  assign signal_0032 = signal_0455 | signal_0773;
  assign signal_0034 = signal_0457 | signal_0456;
  assign signal_0022 = signal_0459 | signal_0458;
  assign dcache_rtrn_inv_d_t0[8:2] = signal_0462 | signal_0777;
  assign dcache_rtrn_vld_d_t0 = signal_0464 | signal_0463;
  assign dcache_rtrn_type_d_t0 = signal_0467 | signal_0780;
  assign dcache_sc_rtrn_t0 = signal_0469 | signal_0468;
  assign b_pop_t0 = signal_0471 | signal_0470;
  assign dcache_rtrn_rd_en_t0 = signal_0473 | signal_0472;
  assign dcache_wr_pop_t0 = signal_0475 | signal_0474;
  assign dcache_rd_pop_t0 = signal_0477 | signal_0476;
  assign icache_rtrn_vld_d_t0 = signal_0479 | signal_0478;
  assign signal_0068 = signal_0482 | signal_0784;
  assign signal_0100 = signal_0484 | signal_0785;
  assign dcache_rd_shift_d_t0[127:64] = signal_0487 | signal_0788;
  assign signal_0066 = signal_0490 | signal_0791;
  assign dcache_rd_shift_user_d_t0[127:2] = signal_0493 | signal_0794;
  assign signal_0026 = signal_0496 | signal_0797;
  assign dcache_rd_shift_user_d_t0[1:0] = signal_0499 | signal_0800;
  assign dcache_rd_shift_d_t0[63:0] = signal_0502 | signal_0801;
  assign signal_0078 = signal_0505 | signal_0804;
  assign signal_0038 = signal_0508 | signal_0807;
  assign signal_0115 = signal_0511 | signal_0810;
  assign signal_0084 = signal_0516 | signal_0813;
  assign signal_0110 = signal_0527 | signal_0816;
  assign signal_0092 = signal_0530 | signal_0819;
  assign signal_0042 = signal_0540 | signal_0822;
  assign signal_0080 = signal_0542 | signal_0541;
  assign signal_0049 = signal_0545 | signal_0825;
  assign signal_0096 = signal_0548 | signal_0828;
  assign signal_0053 = signal_0551 | signal_0831;
  assign signal_0045 = signal_0552 | signal_0366;
  assign signal_0057 = signal_0554 | signal_0553;
  assign signal_0008 = signal_0557 | signal_0556;
  assign signal_0003 = signal_0560 | signal_0836;
  assign signal_0040 = signal_0562 | signal_0561;
  assign signal_0010 = signal_0565 | signal_0839;
  assign signal_0012 = signal_0568 | signal_0842;
  assign signal_0061 = signal_0571 | signal_0845;
  assign signal_0014 = signal_0574 | signal_0848;
  assign signal_0016 = signal_0576 | signal_0575;
  assign signal_0006 = signal_0578 | signal_0577;
  assign signal_0018 = signal_0580 | signal_0579;
  assign signal_0020 = signal_0582 | signal_0581;
  assign amo_off_d_t0 = signal_0585 | signal_0851;
  assign axi_rd_rdy_t0 = signal_0587 | signal_0586;
  assign axi_wr_atop_t0 = signal_0590 | signal_0855;
  assign axi_wr_be_t0 = signal_0593 | signal_0858;
  assign axi_wr_user_t0 = signal_0596 | signal_0861;
  assign axi_wr_data_t0 = signal_0599 | signal_0864;
  assign axi_wr_id_in_t0[1] = signal_0601 | signal_0600;
  assign axi_wr_lock_t0 = signal_0603 | signal_0602;
  assign axi_rd_lock_t0 = signal_0605 | signal_0604;
  assign axi_wr_req_t0 = signal_0607 | signal_0606;
  assign axi_rd_req_t0 = signal_0609 | signal_0608;
  assign axi_rd_blen_t0 = signal_0612 | signal_0865;
  assign axi_rd_size_t0 = signal_0614 | signal_0866;
  assign axi_rd_addr_t0 = signal_0617 | signal_0869;
  assign signal_0001 = signal_0620 | signal_0872;
  assign signal_1055 = signal_0625 | signal_0877;
  assign dcache_rtrn_tid_d_t0 = signal_0628 | signal_0880;
  assign signal_0172 = ~ { 30'h00000000 , dcache_data_t0[74:72] };
  assign signal_0173 = ~ { 27'h0000000 , amo_off_q_t0 , 3'h0 };
  assign signal_0390 = { 30'h00000000 , dcache_data[74:72] } & signal_0172;
  assign signal_0391 = { 27'h0000000 , amo_off_q , 3'h0 } & signal_0173;
  assign signal_0739 = { 30'h00000000 , dcache_data[74:72] } | { 30'h00000000 , dcache_data_t0[74:72] };
  assign signal_0740 = { 27'h0000000 , amo_off_q , 3'h0 } | { 27'h0000000 , amo_off_q_t0 , 3'h0 };
  assign signal_0236 = - signal_0390;
  assign signal_0238 = - signal_0391;
  assign signal_0237 = - signal_0739;
  assign signal_0239 = - signal_0740;
  assign signal_0901 = signal_0236 ^ signal_0237;
  assign signal_0902 = signal_0238 ^ signal_0239;
  assign signal_0985 = signal_0901 | { 30'h00000000 , dcache_data_t0[74:72] };
  assign signal_0987 = signal_0902 | { 27'h0000000 , amo_off_q_t0 , 3'h0 };
  assign signal_0138 = | { dcache_rtrn_rd_en , dcache_sc_rtrn };
  assign signal_0140 = & { signal_1015 , signal_1014 , arb_idx };
  assign signal_0142 = ~ signal_0046;
  assign signal_0143 = ~ signal_0031;
  assign signal_0149 = ~ signal_1020;
  assign signal_0151 = ~ signal_1030;
  assign signal_0153 = ~ signal_1038;
  assign signal_0174 = ~ signal_0116;
  assign signal_0176 = ~ signal_0118;
  assign signal_0177 = ~ signal_0120;
  assign signal_0178 = ~ signal_0122;
  assign signal_0179 = ~ signal_0126;
  assign signal_0181 = ~ signal_0128;
  assign signal_0182 = ~ icache_data_empty;
  assign signal_0184 = ~ dcache_data_empty;
  assign signal_0186 = ~ signal_1010;
  assign signal_0188 = ~ axi_rd_gnt;
  assign signal_0150 = ~ signal_1018;
  assign signal_0152 = ~ signal_1028;
  assign signal_0154 = ~ signal_1036;
  assign signal_0175 = ~ signal_1044;
  assign signal_0180 = ~ signal_1049;
  assign signal_0183 = ~ icache_rd_full;
  assign signal_0185 = ~ dcache_wr_full;
  assign signal_0187 = ~ dcache_rd_full;
  assign signal_0189 = ~ axi_wr_gnt;
  assign signal_0318 = signal_1021 & signal_0150;
  assign signal_0321 = signal_1031 & signal_0152;
  assign signal_0324 = signal_1039 & signal_0154;
  assign signal_0392 = signal_0117 & signal_0175;
  assign signal_0395 = signal_0119 & signal_0175;
  assign signal_0398 = signal_0121 & signal_0175;
  assign signal_0401 = signal_0123 & signal_0175;
  assign signal_0404 = signal_0127 & signal_0180;
  assign signal_0407 = signal_0129 & signal_0180;
  assign signal_0410 = icache_data_empty_t0 & signal_0183;
  assign signal_0413 = dcache_data_empty_t0 & signal_0185;
  assign signal_0416 = signal_1011 & signal_0187;
  assign signal_0419 = axi_rd_gnt_t0 & signal_0189;
  assign signal_0319 = signal_1019 & signal_0149;
  assign signal_0322 = signal_1029 & signal_0151;
  assign signal_0325 = signal_1037 & signal_0153;
  assign signal_0393 = signal_0988 & signal_0174;
  assign signal_0396 = signal_0988 & signal_0176;
  assign signal_0399 = signal_0988 & signal_0177;
  assign signal_0402 = signal_0988 & signal_0178;
  assign signal_0405 = signal_1050 & signal_0179;
  assign signal_0408 = signal_1050 & signal_0181;
  assign signal_0411 = icache_rd_full_t0 & signal_0182;
  assign signal_0414 = dcache_wr_full_t0 & signal_0184;
  assign signal_0417 = dcache_rd_full_t0 & signal_0186;
  assign signal_0420 = axi_wr_gnt_t0 & signal_0188;
  assign signal_0320 = signal_1021 & signal_1019;
  assign signal_0323 = signal_1031 & signal_1029;
  assign signal_0326 = signal_1039 & signal_1037;
  assign signal_0394 = signal_0117 & signal_0988;
  assign signal_0397 = signal_0119 & signal_0988;
  assign signal_0400 = signal_0121 & signal_0988;
  assign signal_0403 = signal_0123 & signal_0988;
  assign signal_0406 = signal_0127 & signal_1050;
  assign signal_0409 = signal_0129 & signal_1050;
  assign signal_0412 = icache_data_empty_t0 & icache_rd_full_t0;
  assign signal_0415 = dcache_data_empty_t0 & dcache_wr_full_t0;
  assign signal_0418 = signal_1011 & dcache_rd_full_t0;
  assign signal_0421 = axi_rd_gnt_t0 & axi_wr_gnt_t0;
  assign signal_0686 = signal_0318 | signal_0319;
  assign signal_0687 = signal_0321 | signal_0322;
  assign signal_0688 = signal_0324 | signal_0325;
  assign signal_0741 = signal_0392 | signal_0393;
  assign signal_0742 = signal_0395 | signal_0396;
  assign signal_0743 = signal_0398 | signal_0399;
  assign signal_0744 = signal_0401 | signal_0402;
  assign signal_0745 = signal_0404 | signal_0405;
  assign signal_0746 = signal_0407 | signal_0408;
  assign signal_0747 = signal_0410 | signal_0411;
  assign signal_0748 = signal_0413 | signal_0414;
  assign signal_0749 = signal_0416 | signal_0417;
  assign signal_0750 = signal_0419 | signal_0420;
  assign signal_0630 = signal_0686 | signal_0320;
  assign signal_0632 = signal_0687 | signal_0323;
  assign signal_0634 = signal_0688 | signal_0326;
  assign signal_1000 = signal_0741 | signal_0394;
  assign signal_1002 = signal_0742 | signal_0397;
  assign signal_1004 = signal_0743 | signal_0400;
  assign signal_1006 = signal_0744 | signal_0403;
  assign signal_1007 = signal_0745 | signal_0406;
  assign signal_1008 = signal_0746 | signal_0409;
  assign arb_req_t0[0] = signal_0747 | signal_0412;
  assign signal_1011 = signal_0748 | signal_0415;
  assign arb_req_t0[1] = signal_0749 | signal_0418;
  assign arb_gnt_t0 = signal_0750 | signal_0421;
  assign signal_0629 = signal_1020 | signal_1018;
  assign signal_0631 = signal_1030 | signal_1028;
  assign signal_0633 = signal_1038 | signal_1036;
  assign signal_0241 = | { signal_0629 , signal_1026 , signal_1024 , signal_1022 };
  assign signal_0948 = signal_1018 ? 6'h27 : 6'h25;
  assign signal_0950 = signal_1024 ? 6'h24 : 6'h22;
  assign signal_0952 = signal_1022 ? 6'h26 : signal_0950;
  assign signal_0954 = signal_0629 ? signal_0948 : signal_0952;
  assign signal_0956 = signal_1028 ? 6'h23 : 6'h21;
  assign signal_0958 = signal_1034 ? 6'h30 : 6'h00;
  assign signal_0960 = signal_1032 ? 6'h20 : signal_0958;
  assign signal_0962 = signal_0631 ? signal_0956 : signal_0960;
  assign signal_0087 = signal_0241 ? signal_0954 : signal_0962;
  assign signal_0964 = signal_1036 ? signal_1003 : signal_1001;
  assign signal_0966 = signal_1040 ? signal_0999 : signal_1005;
  assign signal_0089 = signal_0633 ? signal_0964 : signal_0966;
  assign signal_0968 = signal_1043 ? 1'h1 : 1'h0;
  assign signal_0046 = signal_1014 ? signal_0085 : signal_0968;
  assign signal_0969 = signal_1042 ? signal_0089 : 16'h0000;
  assign signal_0050 = signal_1014 ? signal_0114 : signal_0969;
  assign signal_0971 = signal_1042 ? 1'h1 : 1'h0;
  assign signal_0058 = signal_1014 ? signal_0094 : signal_0971;
  assign signal_0244 = | { arb_idx_t0 , signal_1016 , signal_0055 };
  assign signal_0685 = { signal_1015 , signal_1014 , arb_idx } | { signal_1016 , signal_0055 , arb_idx_t0 };
  assign signal_0240 = & signal_0685;
  assign signal_0141 = signal_0244 & signal_0240;
  assign signal_0251 = | signal_0985;
  assign signal_0252 = | signal_0987;
  assign signal_0972 = $signed(signal_0984) < 0 ? 1'h0 << - signal_0984 : 1'h0 >> signal_0984;
  assign signal_0973 = $signed(signal_0986) < 0 ? 1'h0 << - signal_0986 : 1'h0 >> signal_0986;
  assign signal_0974 = $signed(signal_0986) < 0 ? signal_0125 << - signal_0986 : signal_0125 >> signal_0986;
  assign signal_0988 = { { 16{ signal_0251 } } } | signal_0972;
  assign signal_0993 = { { 128{ signal_0252 } } } | signal_0973;
  assign signal_1050 = { { 128{ signal_0252 } } } | signal_0974;
  assign signal_0975 = 32'd0 << dcache_data[131:130];
  assign signal_1052 = { { 32{ signal_0248 } } } | signal_0975;
  assign signal_0233 = ~ signal_1052;
  assign signal_0622 = signal_1051 & signal_0233;
  assign signal_0873 = signal_1051 | signal_1052;
  assign signal_0946 = signal_0873 - 32'd1;
  assign signal_0947 = signal_0622 - 32'd1;
  assign signal_0928 = signal_0946 ^ signal_0947;
  assign signal_0874 = signal_0928 | signal_1052;
  assign signal_0976 = ! axi_rd_id_out;
  assign signal_0978 = axi_rd_valid && signal_0976;
  assign signal_0980 = signal_0978 && axi_rd_rdy;
  assign signal_0981 = axi_rd_valid && axi_rd_id_out[0];
  assign signal_0983 = signal_0981 && axi_rd_rdy;
  assign signal_0984 = - $signed({ 30'h00000000 , dcache_data[74:72] });
  assign signal_0986 = - $signed({ 27'h0000000 , amo_off_q , 3'h0 });
  assign signal_0989 = ~ signal_1045;
  assign signal_0990 = ~ signal_1046;
  assign signal_0991 = ~ signal_1047;
  assign signal_0992 = ~ signal_1048;
  assign signal_0994 = ~ icache_data_full;
  assign signal_0995 = ~ dcache_data_full;
  assign arb_req[0] = ~ signal_1009;
  assign arb_req[1] = ~ signal_1012;
  assign signal_0996 = ~ signal_1053;
  assign signal_0997 = ~ { 64'h0000000000000000 , dcache_data[71:8] };
  assign signal_0998 = ~ { 3'h0 , dcache_data[7] };
  assign axi_wr_rdy = ~ b_full;
  assign signal_0999 = signal_0116 | signal_1044;
  assign signal_1001 = signal_0118 | signal_1044;
  assign signal_1003 = signal_0120 | signal_1044;
  assign signal_1005 = signal_0122 | signal_1044;
  assign signal_0909 = signal_0126 | signal_1049;
  assign signal_0908 = signal_0128 | signal_1049;
  assign signal_1009 = icache_data_empty | icache_rd_full;
  assign signal_1010 = dcache_data_empty | dcache_wr_full;
  assign signal_1012 = signal_1010 | dcache_rd_full;
  assign arb_gnt = axi_rd_gnt | axi_wr_gnt;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) amo_off_q <= 3'h0;
    else amo_off_q <= amo_off_d;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) icache_rtrn_tid_q <= 2'h0;
    else icache_rtrn_tid_q <= icache_rtrn_tid_d;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) dcache_rtrn_tid_q <= 2'h0;
    else dcache_rtrn_tid_q <= dcache_rtrn_tid_d;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) icache_rtrn_vld_o <= 1'h0;
    else icache_rtrn_vld_o <= icache_rtrn_vld_d;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) dcache_rtrn_vld_o <= 1'h0;
    else dcache_rtrn_vld_o <= dcache_rtrn_vld_d;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) dcache_rtrn_type_q <= 3'h2;
    else dcache_rtrn_type_q <= dcache_rtrn_type_d;
  assign signal_0113 = amo_gen_r_q ? 1'h0 : 1'h1;
  assign signal_0105 = wr_id_out[1] ? signal_0113 : 1'h0;
  assign signal_0103 = wr_id_out[1] ? signal_0113 : 1'h1;
  assign signal_0111 = wr_id_out[1] ? 3'h3 : 3'h1;
  assign signal_0073 = b_empty ? 1'h0 : signal_0105;
  assign signal_0101 = b_empty ? 3'h2 : signal_0111;
  assign signal_0071 = b_empty ? 1'h0 : signal_0103;
  assign signal_0062 = b_empty ? 1'h0 : 1'h1;
  assign signal_0107 = dcache_wr_empty ? 1'h0 : axi_rd_last;
  assign signal_0097 = dcache_wr_empty ? axi_rd_last : 1'h0;
  assign signal_0075 = axi_rd_id_out[1] ? signal_0107 : 1'h0;
  assign signal_0063 = axi_rd_id_out[1] ? signal_0097 : axi_rd_last;
  assign signal_0069 = axi_rd_id_out[1] ? 3'h3 : 3'h2;
  assign signal_0029 = signal_0983 ? signal_0069 : signal_0101;
  assign signal_0035 = signal_0983 ? signal_0075 : signal_0071;
  assign signal_0023 = signal_0983 ? signal_0063 : 1'h0;
  assign signal_0031 = signal_0983 ? axi_rd_last : signal_0071;
  assign signal_0027 = signal_0983 ? 1'h1 : 1'h0;
  assign signal_0033 = signal_0983 ? 1'h0 : signal_0073;
  assign signal_0021 = signal_0983 ? 1'h0 : signal_0062;
  assign dcache_rtrn_inv_d[9] = invalidate ? 1'h1 : 1'h0;
  assign dcache_rtrn_inv_d[8:2] = invalidate ? dcache_data[78:72] : 7'h00;
  assign dcache_rtrn_vld_d = invalidate ? 1'h1 : signal_0031;
  assign dcache_rtrn_type_d = invalidate ? 3'h0 : signal_0029;
  assign dcache_sc_rtrn = invalidate ? 1'h0 : signal_0033;
  assign b_pop = invalidate ? 1'h0 : signal_0021;
  assign dcache_rtrn_rd_en = invalidate ? 1'h0 : signal_0027;
  assign dcache_wr_pop = invalidate ? 1'h0 : signal_0035;
  assign dcache_rd_pop = invalidate ? 1'h0 : signal_0023;
  assign icache_rtrn_vld_d = signal_0980 ? axi_rd_last : 1'h0;
  assign icache_rtrn_rd_en = signal_0980 ? 1'h1 : 1'h0;
  assign signal_0067 = dcache_sc_rtrn ? signal_0908 : 128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign signal_0099 = dcache_sc_rtrn ? signal_0909 : 128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign dcache_rd_shift_d[127:64] = dcache_rtrn_rd_en ? axi_rd_data : signal_0099[127:64];
  assign signal_0065 = dcache_first_q ? axi_rd_data : dcache_rd_shift_q[127:64];
  assign dcache_rd_shift_user_d[127:2] = dcache_rtrn_rd_en ? { axi_rd_user , dcache_rd_shift_user_q[127:4] } : signal_0067[127:2];
  assign signal_0025 = dcache_first_q ? axi_rd_user : dcache_rd_shift_user_q[3:2];
  assign dcache_rd_shift_user_d[1:0] = dcache_rtrn_rd_en ? signal_0025 : signal_0067[1:0];
  assign dcache_rd_shift_d[63:0] = dcache_rtrn_rd_en ? signal_0065 : signal_0099[63:0];
  assign signal_0077 = icache_first_q ? axi_rd_data : icache_rtrn_o[268:205];
  assign signal_0037 = icache_first_q ? axi_rd_user : icache_rtrn_o[16:15];
  assign signal_0114 = signal_1013 ? 16'h0000 : signal_0089;
  assign signal_0094 = signal_1013 ? 1'h0 : 1'h1;
  assign signal_0085 = signal_1013 ? 1'h1 : 1'h0;
  assign signal_1013 = dcache_data[3:0] == 4'h1;
  assign signal_0081 = signal_1017 ? 1'h0 : 1'h1;
  assign signal_0083 = signal_1017 ? signal_0130[2:0] : 3'h0;
  assign signal_1018 = dcache_data[3:0] == 4'hb;
  assign signal_1020 = dcache_data[3:0] == 4'ha;
  assign signal_1022 = dcache_data[3:0] == 4'h9;
  assign signal_1024 = dcache_data[3:0] == 4'h8;
  assign signal_1026 = dcache_data[3:0] == 4'h7;
  assign signal_1028 = dcache_data[3:0] == 4'h6;
  assign signal_1032 = dcache_data[3:0] == 4'h4;
  assign signal_1034 = dcache_data[3:0] == 4'h3;
  assign signal_0109 = signal_1030 ? signal_0998 : signal_0000;
  assign signal_0091 = signal_1030 ? signal_0997 : { 64'h0000000000000000 , dcache_data[71:8] };
  assign signal_1030 = dcache_data[3:0] == 4'h5;
  assign signal_0093 = signal_1017 ? 1'h1 : 1'h0;
  assign signal_1017 = dcache_data[3:0] == 4'h2;
  assign signal_1040 = ! dcache_data[131:130];
  assign signal_1036 = dcache_data[131:130] == 2'h2;
  assign signal_1038 = dcache_data[131:130] == 2'h1;
  assign signal_1043 = dcache_data[134:133] == 2'h1;
  assign signal_0041 = signal_1014 ? signal_0083 : 3'h0;
  assign signal_0079 = signal_1014 ? arb_gnt : 1'h0;
  assign signal_0048 = signal_1014 ? signal_0087 : 6'h00;
  assign signal_0095 = signal_1014 ? signal_0109 : signal_0000;
  assign signal_0052 = signal_1014 ? signal_0091 : { 64'h0000000000000000 , dcache_data[71:8] };
  assign signal_0054 = signal_1014 ? 1'h1 : 1'h0;
  assign signal_0044 = signal_1014 ? signal_0085 : 1'h0;
  assign signal_0056 = signal_1014 ? signal_0093 : 1'h0;
  assign signal_1014 = dcache_data[134:133] == 2'h2;
  assign signal_1042 = ! dcache_data[134:133];
  assign signal_0007 = arb_idx ? signal_0046 : 1'h1;
  assign signal_0002 = arb_idx ? signal_0041 : 3'h0;
  assign signal_0039 = arb_idx ? signal_0079 : 1'h0;
  assign signal_0009 = arb_idx ? signal_0048 : 6'h00;
  assign signal_0011 = arb_idx ? signal_0050 : 16'h0000;
  assign signal_0060 = arb_idx ? signal_0095 : signal_0000;
  assign signal_0013 = arb_idx ? signal_0052 : { 64'h0000000000000000 , dcache_data[71:8] };
  assign signal_0015 = arb_idx ? signal_0054 : 1'h0;
  assign signal_0005 = arb_idx ? signal_0044 : 1'h0;
  assign signal_0017 = arb_idx ? signal_0056 : 1'h0;
  assign signal_0019 = arb_idx ? signal_0058 : 1'h0;
  assign amo_off_d = signal_1015 ? signal_0002 : 3'h0;
  assign invalidate = signal_1015 ? signal_0039 : 1'h0;
  assign axi_wr_atop = signal_1015 ? signal_0009 : 6'h00;
  assign axi_wr_be = signal_1015 ? signal_0011 : 16'h0000;
  assign axi_wr_user = signal_1015 ? signal_0060 : signal_0000;
  assign axi_wr_data = signal_1015 ? signal_0013 : { 64'h0000000000000000 , dcache_data[71:8] };
  assign axi_wr_id_in[1] = signal_1015 ? signal_0015 : 1'h0;
  assign axi_wr_lock = signal_1015 ? signal_0017 : 1'h0;
  assign axi_rd_lock = signal_1015 ? signal_0005 : 1'h0;
  assign axi_wr_req = signal_1015 ? signal_0019 : 1'h0;
  assign axi_rd_req = signal_1015 ? signal_0007 : 1'h0;
  assign signal_0043 = icache_data[2] ? 1'h0 : 1'h1;
  assign signal_0004 = dcache_data[132] ? 1'h1 : 1'h0;
  assign axi_rd_blen = arb_idx ? signal_0004 : signal_0043;
  assign axi_rd_size = arb_idx ? signal_1054[2:0] : 3'h3;
  assign axi_rd_addr = arb_idx ? { 8'h00 , dcache_data[127:72] } : { 8'h00 , icache_data[58:3] };
  assign signal_0000 = dcache_data[74] ? 4'h0 : { 3'h0 , dcache_data[7] };
  assign signal_1015 = | arb_req;
  assign signal_1044 = $signed(signal_0984) < 0 ? 1'h1 << - signal_0984 : 1'h1 >> signal_0984;
  assign signal_1045 = $signed(signal_0984) < 0 ? 2'h3 << - signal_0984 : 2'h3 >> signal_0984;
  assign signal_1046 = $signed(signal_0984) < 0 ? 4'hf << - signal_0984 : 4'hf >> signal_0984;
  assign signal_1047 = $signed(signal_0984) < 0 ? 8'hff << - signal_0984 : 8'hff >> signal_0984;
  assign signal_1048 = $signed(signal_0986) < 0 ? 1'h1 << - signal_0986 : 1'h1 >> signal_0986;
  assign signal_1049 = $signed(signal_0986) < 0 ? signal_0124 << - signal_0986 : signal_0124 >> signal_0986;
  assign signal_1051 = 32'd1 << dcache_data[131:130];
  assign signal_1053 = signal_1051 - 32'd1;
  assign signal_1054 = dcache_data[132] ? 32'd3 : { 30'h00000000 , dcache_data[131:130] };
  assign dcache_rtrn_tid_d = dcache_wr_pop ? dcache_rtrn_wr_tid : dcache_rtrn_rd_tid;
  assign signal_1056 = wr_exokay ? 1'h0 : 1'h1;
  paramodcf17af83d4bee7f746adbc3571cbba07b9ab62a7fifo_v3  i_b_fifo (
    .clk_i(clk_i),
    .data_i({ axi_wr_exokay , axi_wr_id_out }),
    .data_i_t0({ axi_wr_exokay_t0 , axi_wr_id_out_t0 }),
    .data_o({ wr_exokay , wr_id_out }),
    .data_o_t0({ wr_exokay_t0 , wr_id_out_t0 }),
    .empty_o(b_empty),
    .empty_o_t0(b_empty_t0),
    .flush_i(1'h0),
    .flush_i_t0(1'h0),
    .full_o(b_full),
    .full_o_t0(axi_wr_rdy_t0),
    .pop_i(b_pop),
    .pop_i_t0(b_pop_t0),
    .push_i(b_push),
    .push_i_t0(b_push_t0),
    .rst_ni(rst_ni),
    .testmode_i(1'h0),
    .testmode_i_t0(1'h0)
  );
  paramodcae7810e8a848d85f91d59f52ff0d8d36ae776a8fifo_v3_94E38_91134  i_dcache_data_fifo (
    .clk_i(clk_i),
    .data_i(dcache_data_i),
    .data_i_t0(dcache_data_i_t0),
    .data_o(dcache_data),
    .data_o_t0(dcache_data_t0),
    .empty_o(dcache_data_empty),
    .empty_o_t0(dcache_data_empty_t0),
    .flush_i(1'h0),
    .flush_i_t0(1'h0),
    .full_o(dcache_data_full),
    .full_o_t0(dcache_data_full_t0),
    .pop_i(arb_ack[1]),
    .pop_i_t0(arb_ack_t0[1]),
    .push_i(dcache_data_ack_o),
    .push_i_t0(dcache_data_ack_o_t0),
    .rst_ni(rst_ni),
    .testmode_i(1'h0),
    .testmode_i_t0(1'h0)
  );
  paramod51cfa2da1165b1c26a80af61691690d86972f046fifo_v3_6C4C9_25B33  i_icache_data_fifo (
    .clk_i(clk_i),
    .data_i(icache_data_i),
    .data_i_t0(icache_data_i_t0),
    .data_o(icache_data),
    .data_o_t0(icache_data_t0),
    .empty_o(icache_data_empty),
    .empty_o_t0(icache_data_empty_t0),
    .flush_i(1'h0),
    .flush_i_t0(1'h0),
    .full_o(icache_data_full),
    .full_o_t0(icache_data_full_t0),
    .pop_i(arb_ack[0]),
    .pop_i_t0(arb_ack_t0[0]),
    .push_i(icache_data_ack_o),
    .push_i_t0(icache_data_ack_o_t0),
    .rst_ni(rst_ni),
    .testmode_i(1'h0),
    .testmode_i_t0(1'h0)
  );
  paramod13ef5dd719af6cd740bb9084133c732dec4a72b2fifo_v3  i_rd_dcache_id (
    .clk_i(clk_i),
    .data_i(dcache_data[5:4]),
    .data_i_t0(dcache_data_t0[5:4]),
    .data_o(dcache_rtrn_rd_tid),
    .data_o_t0(dcache_rtrn_rd_tid_t0),
    .empty_o(dcache_rd_empty),
    .empty_o_t0(dcache_rd_empty_t0),
    .flush_i(1'h0),
    .flush_i_t0(1'h0),
    .full_o(dcache_rd_full),
    .full_o_t0(dcache_rd_full_t0),
    .pop_i(dcache_rd_pop),
    .pop_i_t0(dcache_rd_pop_t0),
    .push_i(signal_0134),
    .push_i_t0(signal_0135),
    .rst_ni(rst_ni),
    .testmode_i(1'h0),
    .testmode_i_t0(1'h0)
  );
  paramod13ef5dd719af6cd740bb9084133c732dec4a72b2fifo_v3  i_rd_icache_id (
    .clk_i(clk_i),
    .data_i(icache_data[1:0]),
    .data_i_t0(icache_data_t0[1:0]),
    .data_o(icache_rtrn_tid_d),
    .data_o_t0(icache_rtrn_tid_d_t0),
    .empty_o(icache_rd_empty),
    .empty_o_t0(icache_rd_empty_t0),
    .flush_i(1'h0),
    .flush_i_t0(1'h0),
    .full_o(icache_rd_full),
    .full_o_t0(icache_rd_full_t0),
    .pop_i(icache_rtrn_vld_d),
    .pop_i_t0(icache_rtrn_vld_d_t0),
    .push_i(signal_0132),
    .push_i_t0(signal_0133),
    .rst_ni(rst_ni),
    .testmode_i(1'h0),
    .testmode_i_t0(1'h0)
  );
  paramod94ada5fb76429007038970b1df82ddc5bce206f6rr_arb_tree  i_rr_arb_tree (
    .clk_i(clk_i),
    .data_i(2'h0),
    .data_i_t0(2'h0),
    .flush_i(1'h0),
    .flush_i_t0(1'h0),
    .gnt_i(arb_gnt),
    .gnt_i_t0(arb_gnt_t0),
    .gnt_o(arb_ack),
    .gnt_o_t0(arb_ack_t0),
    .idx_o(arb_idx),
    .idx_o_t0(arb_idx_t0),
    .req_i(arb_req),
    .req_i_t0(arb_req_t0),
    .rr_i(1'h0),
    .rr_i_t0(1'h0),
    .rst_ni(rst_ni)
  );
  paramod13ef5dd719af6cd740bb9084133c732dec4a72b2fifo_v3  i_wr_dcache_id (
    .clk_i(clk_i),
    .data_i(dcache_data[5:4]),
    .data_i_t0(dcache_data_t0[5:4]),
    .data_o(dcache_rtrn_wr_tid),
    .data_o_t0(dcache_rtrn_wr_tid_t0),
    .empty_o(dcache_wr_empty),
    .empty_o_t0(dcache_wr_empty_t0),
    .flush_i(1'h0),
    .flush_i_t0(1'h0),
    .full_o(dcache_wr_full),
    .full_o_t0(dcache_wr_full_t0),
    .pop_i(dcache_wr_pop),
    .pop_i_t0(dcache_wr_pop_t0),
    .push_i(signal_0136),
    .push_i_t0(signal_0137),
    .rst_ni(rst_ni),
    .testmode_i(1'h0),
    .testmode_i_t0(1'h0)
  );
  assign { axi_wr_id_in[3:2] , axi_wr_id_in[0] } = { 2'h0 , arb_idx };
  assign { axi_wr_id_in_t0[3:2] , axi_wr_id_in_t0[0] } = { 2'h0 , arb_idx_t0 };
  assign { dcache_rtrn_inv_d[10] , dcache_rtrn_inv_d[1:0] } = 3'h0;
  assign { dcache_rtrn_inv_d_t0[10:9] , dcache_rtrn_inv_d_t0[1:0] } = { 1'h0 , axi_rd_rdy_t0 , 2'h0 };
  assign { dcache_rtrn_o[271:12] , dcache_rtrn_o[3:0] } = { dcache_rtrn_type_q , dcache_rd_shift_q , dcache_rd_shift_user_q , 3'h0 , dcache_rtrn_tid_q };
  assign { dcache_rtrn_o_t0[271:12] , dcache_rtrn_o_t0[3:0] } = { dcache_rtrn_type_q_t0 , dcache_rd_shift_q_t0 , dcache_rd_shift_user_q_t0 , 3'h0 , dcache_rtrn_tid_q_t0 };
  assign { icache_rtrn_o[269] , icache_rtrn_o[12:0] } = { 12'h800 , icache_rtrn_tid_q };
  assign { icache_rtrn_o_t0[269] , icache_rtrn_o_t0[12:0] } = { 12'h000 , icache_rtrn_tid_q_t0 };
endmodule
module paramod51cfa2da1165b1c26a80af61691690d86972f046fifo_v3_6C4C9_25B33 (clk_i, rst_ni, flush_i, testmode_i, full_o, empty_o, usage_o, data_i, push_i, data_o, pop_i, usage_o_t0, testmode_i_t0, push_i_t0, pop_i_t0, full_o_t0, flush_i_t0, empty_o_t0, data_o_t0, data_i_t0);
  wire _000_;
  wire [1:0] _001_;
  wire [1:0] _002_;
  wire _003_;
  wire [1:0] _004_;
  wire [1:0] _005_;
  wire _006_;
  wire [1:0] _007_;
  wire [1:0] _008_;
  wire _009_;
  wire [31:0] _010_;
  wire [31:0] _011_;
  wire [31:0] _012_;
  wire [31:0] _013_;
  wire [31:0] _014_;
  wire [31:0] _015_;
  wire [121:0] _016_;
  wire [121:0] _017_;
  wire [121:0] _018_;
  wire [121:0] _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire [31:0] _028_;
  wire _029_;
  wire _030_;
  wire [3:0] _031_;
  wire [1:0] _032_;
  wire [1:0] _033_;
  wire [121:0] _034_;
  wire [121:0] _035_;
  wire [1:0] _036_;
  wire [1:0] _037_;
  wire [1:0] _038_;
  wire [1:0] _039_;
  wire [32:0] _040_;
  wire [32:0] _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire [31:0] _050_;
  wire [121:0] _051_;
  wire [121:0] _052_;
  wire [121:0] _053_;
  wire [121:0] _054_;
  wire [121:0] _055_;
  wire [121:0] _056_;
  wire [121:0] _057_;
  wire [121:0] _058_;
  wire [121:0] _059_;
  wire [1:0] _060_;
  wire [1:0] _061_;
  wire [1:0] _062_;
  wire [3:0] _063_;
  wire [1:0] _064_;
  wire [1:0] _065_;
  wire [1:0] _066_;
  wire [1:0] _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire [32:0] _083_;
  wire [121:0] _084_;
  wire [121:0] _085_;
  wire [121:0] _086_;
  wire [1:0] _087_;
  wire [1:0] _088_;
  wire [1:0] _089_;
  wire [1:0] _090_;
  wire [1:0] _091_;
  wire [1:0] _092_;
  wire [1:0] _093_;
  wire [1:0] _094_;
  wire [1:0] _095_;
  wire [1:0] _096_;
  wire [1:0] _097_;
  wire [1:0] _098_;
  wire [31:0] _099_;
  wire [121:0] _100_;
  wire [121:0] _101_;
  wire [121:0] _102_;
  wire [121:0] _103_;
  wire [121:0] _104_;
  wire [121:0] _105_;
  wire [1:0] _106_;
  wire [1:0] _107_;
  wire [1:0] _108_;
  wire [1:0] _109_;
  wire [1:0] _110_;
  wire [1:0] _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire [121:0] _117_;
  wire [1:0] _118_;
  wire [1:0] _119_;
  wire [1:0] _120_;
  wire [1:0] _121_;
  wire [1:0] _122_;
  wire [1:0] _123_;
  wire [1:0] _124_;
  wire [1:0] _125_;
  wire [1:0] _126_;
  wire [1:0] _127_;
  wire [1:0] _128_;
  wire [1:0] _129_;
  wire [31:0] _130_;
  wire [31:0] _131_;
  wire [121:0] _132_;
  wire [1:0] _133_;
  wire [32:0] _134_;
  wire [1:0] _135_;
  wire [31:0] _136_;
  wire _137_;
  wire _138_;
  wire [31:0] _139_;
  wire [31:0] _140_;
  wire [31:0] _141_;
  wire [31:0] _142_;
  wire [121:0] _143_;
  wire [121:0] _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire [32:0] _154_;
  wire [121:0] _155_;
  wire [121:0] _156_;
  wire _157_;
  wire _158_;
  wire [121:0] _159_;
  wire [121:0] _160_;
  wire [121:0] _161_;
  wire [31:0] _162_;
  input clk_i;
  wire clk_i;
  input [60:0] data_i;
  wire [60:0] data_i;
  input [60:0] data_i_t0;
  wire [60:0] data_i_t0;
  output [60:0] data_o;
  wire [60:0] data_o;
  output [60:0] data_o_t0;
  wire [60:0] data_o_t0;
  output empty_o;
  wire empty_o;
  output empty_o_t0;
  wire empty_o_t0;
  input flush_i;
  wire flush_i;
  input flush_i_t0;
  wire flush_i_t0;
  output full_o;
  wire full_o;
  output full_o_t0;
  wire full_o_t0;
  wire [121:0] mem_n;
  wire [121:0] mem_n_t0;
  reg [121:0] mem_q;
  reg [121:0] mem_q_t0;
  input pop_i;
  wire pop_i;
  input pop_i_t0;
  wire pop_i_t0;
  input push_i;
  wire push_i;
  input push_i_t0;
  wire push_i_t0;
  wire read_pointer_n;
  reg read_pointer_q;
  input rst_ni;
  wire rst_ni;
  wire [1:0] status_cnt_n;
  wire [1:0] status_cnt_n_t0;
  reg [1:0] status_cnt_q;
  reg [1:0] status_cnt_q_t0;
  input testmode_i;
  wire testmode_i;
  input testmode_i_t0;
  wire testmode_i_t0;
  output usage_o;
  wire usage_o;
  output usage_o_t0;
  wire usage_o_t0;
  wire write_pointer_n;
  reg write_pointer_q;
  assign { _012_[31:1] , _009_ } = write_pointer_q + 32'd1;
  assign _013_ = status_cnt_q + 32'd1;
  assign { _015_[31:1] , _006_ } = read_pointer_q + 32'd1;
  assign _016_ = 61'h1fffffffffffffff & data_i;
  assign _018_ = mem_q & _155_;
  assign _139_ = _050_ + 32'd1;
  assign _099_ = { 30'h00000000 , status_cnt_q } | { 30'h00000000 , status_cnt_q_t0 };
  assign _140_ = _099_ + 32'd1;
  assign _131_ = _139_ ^ _140_;
  assign _014_ = _131_ | { 30'h00000000 , status_cnt_q_t0 };
  assign _030_ = ~ _026_;
  assign _132_ = mem_n ^ mem_q;
  assign _133_ = _001_ ^ status_cnt_q;
  assign _102_ = mem_n_t0 | mem_q_t0;
  assign _106_ = _002_ | status_cnt_q_t0;
  assign _103_ = _132_ | _102_;
  assign _107_ = _133_ | _106_;
  assign _057_ = { { 122{ _145_ } } } & mem_n_t0;
  assign _060_ = { { 2{ _026_ } } } & _002_;
  assign _058_ = { { 122{ _029_ } } } & mem_q_t0;
  assign _061_ = { { 2{ _030_ } } } & status_cnt_q_t0;
  assign _059_ = _103_ & { { 122{ _146_ } } };
  assign _062_ = _107_ & { { 2{ _027_ } } };
  assign _104_ = _057_ | _058_;
  assign _108_ = _060_ | _061_;
  assign _105_ = _104_ | _059_;
  assign _109_ = _108_ | _062_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) mem_q_t0 <= 122'h0000000000000000000000000000000;
    else mem_q_t0 <= _105_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) status_cnt_q_t0 <= 2'h0;
    else status_cnt_q_t0 <= _109_;
  assign _051_ = 122'h0000000000000000000000000000000 & { 61'h0000000000000000 , data_i };
  assign _054_ = mem_q_t0 & _155_;
  assign _052_ = { 61'h0000000000000000 , data_i_t0 } & 122'h0000000000000001fffffffffffffff;
  assign _055_ = _156_ & mem_q;
  assign _053_ = 122'h0000000000000000000000000000000 & { 61'h0000000000000000 , data_i_t0 };
  assign _056_ = mem_q_t0 & _156_;
  assign _100_ = _051_ | _052_;
  assign _101_ = _054_ | _055_;
  assign _017_ = _100_ | _053_;
  assign _019_ = _101_ | _056_;
  assign _044_ = | { _110_[1] , flush_i_t0 };
  assign _032_ = ~ { _110_[1] , flush_i_t0 };
  assign _033_ = ~ status_cnt_q_t0;
  assign _064_ = { _153_ , flush_i } & _032_;
  assign _066_ = status_cnt_q & _033_;
  assign _065_ = 2'h2 & _032_;
  assign _067_ = 2'h2 & _033_;
  assign _137_ = _064_ == _065_;
  assign _138_ = _066_ == _067_;
  assign _023_ = _137_ & _044_;
  assign full_o_t0 = _138_ & _046_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) mem_q <= 122'h0000000000000000000000000000000;
    else if (_145_) mem_q <= mem_n;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) status_cnt_q <= 2'h0;
    else if (_026_) status_cnt_q <= _001_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) write_pointer_q <= 1'h0;
    else if (_024_) write_pointer_q <= _003_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) read_pointer_q <= 1'h0;
    else if (_025_) read_pointer_q <= _000_;
  assign _068_ = push_i_t0 & _157_;
  assign _071_ = pop_i_t0 & _158_;
  assign _074_ = push_i_t0 & pop_i;
  assign _077_ = _150_ & _157_;
  assign _080_ = _152_ & _158_;
  assign _069_ = full_o_t0 & push_i;
  assign _072_ = empty_o_t0 & pop_i;
  assign _075_ = pop_i_t0 & push_i;
  assign _078_ = full_o_t0 & _149_;
  assign _081_ = empty_o_t0 & _151_;
  assign _070_ = push_i_t0 & full_o_t0;
  assign _073_ = pop_i_t0 & empty_o_t0;
  assign _076_ = push_i_t0 & pop_i_t0;
  assign _079_ = _150_ & full_o_t0;
  assign _082_ = _152_ & empty_o_t0;
  assign _112_ = _068_ | _069_;
  assign _113_ = _071_ | _072_;
  assign _114_ = _074_ | _075_;
  assign _115_ = _077_ | _078_;
  assign _116_ = _080_ | _081_;
  assign _146_ = _112_ | _070_;
  assign _148_ = _113_ | _073_;
  assign _150_ = _114_ | _076_;
  assign _152_ = _115_ | _079_;
  assign _110_[1] = _116_ | _082_;
  assign _043_ = | { _146_ , _148_ , _110_[1] , flush_i_t0 };
  assign _046_ = | status_cnt_q_t0;
  assign _031_ = ~ { _110_[1] , _148_ , _146_ , flush_i_t0 };
  assign _063_ = { _153_ , _147_ , _145_ , flush_i } & _031_;
  assign _048_ = ! _063_;
  assign _049_ = ! _066_;
  assign _021_ = _048_ & _043_;
  assign empty_o_t0 = _049_ & _046_;
  assign _036_ = ~ { { 2{ flush_i } } };
  assign _037_ = ~ { { 2{ _153_ } } };
  assign _038_ = ~ { { 2{ _147_ } } };
  assign _039_ = ~ { { 2{ _145_ } } };
  assign _029_ = ~ _145_;
  assign _118_ = { { 2{ flush_i_t0 } } } | _036_;
  assign _121_ = { { 2{ _110_[1] } } } | _037_;
  assign _124_ = { { 2{ _148_ } } } | _038_;
  assign _127_ = { { 2{ _146_ } } } | _039_;
  assign _119_ = { { 2{ flush_i_t0 } } } | { { 2{ flush_i } } };
  assign _122_ = { { 2{ _110_[1] } } } | { { 2{ _153_ } } };
  assign _125_ = { { 2{ _148_ } } } | { { 2{ _147_ } } };
  assign _128_ = { { 2{ _146_ } } } | { { 2{ _145_ } } };
  assign _087_ = status_cnt_n_t0 & _118_;
  assign _090_ = _008_ & _121_;
  assign _093_ = _005_ & _124_;
  assign _096_ = 2'h0 & _127_;
  assign _088_ = 2'h0 & _119_;
  assign _091_ = 2'h0 & _122_;
  assign _094_ = _130_[1:0] & _125_;
  assign _097_ = _014_[1:0] & _128_;
  assign _120_ = _087_ | _088_;
  assign _123_ = _090_ | _091_;
  assign _126_ = _093_ | _094_;
  assign _129_ = _096_ | _097_;
  assign _135_ = _004_ ^ _162_[1:0];
  assign _089_ = { { 2{ flush_i_t0 } } } & status_cnt_n;
  assign _092_ = { { 2{ _110_[1] } } } & _007_;
  assign _095_ = { { 2{ _148_ } } } & _135_;
  assign _098_ = { { 2{ _146_ } } } & _013_[1:0];
  assign _002_ = _089_ | _120_;
  assign status_cnt_n_t0 = _092_ | _123_;
  assign _008_ = _095_ | _126_;
  assign _005_ = _098_ | _129_;
  assign _083_ = { 1'h0 , _011_ } & 33'h1ffffffff;
  assign _040_ = - _083_;
  assign _041_ = - { 1'h0 , _011_ };
  assign _134_ = _040_ ^ _041_;
  assign _020_ = | { _153_ , _147_ , _145_ , flush_i };
  assign _022_ = { _153_ , flush_i } != 2'h2;
  assign _024_ = | { _145_ , flush_i };
  assign _025_ = | { _147_ , flush_i };
  assign _026_ = & { _022_ , _020_ };
  assign _034_ = ~ _018_;
  assign _035_ = ~ _160_;
  assign _084_ = _019_ & _035_;
  assign _085_ = _161_ & _034_;
  assign _086_ = _019_ & _161_;
  assign _117_ = _084_ | _085_;
  assign mem_n_t0 = _117_ | _086_;
  assign _045_ = | { _021_ , _023_ };
  assign _111_ = { _022_ , _020_ } | { _023_ , _021_ };
  assign _042_ = & _111_;
  assign _027_ = _045_ & _042_;
  assign _047_ = | _134_;
  assign _143_ = $signed(_154_) < 0 ? 1'h0 << - _154_ : 1'h0 >> _154_;
  assign _144_ = $signed(_154_) < 0 ? _017_ << - _154_ : _017_ >> _154_;
  assign _156_ = { { 122{ _047_ } } } | _143_;
  assign _161_ = { { 122{ _047_ } } } | _144_;
  wire [121:0] _342_ = mem_q_t0;
  assign data_o_t0 = _342_[$signed(_010_) +: 61];
  assign _028_ = ~ { 30'h00000000 , status_cnt_q_t0 };
  assign _050_ = { 30'h00000000 , status_cnt_q } & _028_;
  assign _141_ = _099_ - 32'd1;
  assign _142_ = _050_ - 32'd1;
  assign _136_ = _141_ ^ _142_;
  assign _130_ = _136_ | { 30'h00000000 , status_cnt_q_t0 };
  assign full_o = status_cnt_q == 2'h2;
  assign empty_o = ! status_cnt_q;
  assign _145_ = push_i && _157_;
  assign _147_ = pop_i && _158_;
  assign _149_ = push_i && pop_i;
  assign _151_ = _149_ && _157_;
  assign _153_ = _151_ && _158_;
  assign _010_ = read_pointer_q * 32'd61;
  assign _011_ = write_pointer_q * 32'd61;
  assign _154_ = - $signed({ 1'h0 , _011_ });
  assign _155_ = ~ _159_;
  assign _157_ = ~ full_o;
  assign _158_ = ~ empty_o;
  assign mem_n = _018_ | _160_;
  assign _001_ = flush_i ? 2'h0 : status_cnt_n;
  assign _003_ = flush_i ? 1'h0 : write_pointer_n;
  assign _000_ = flush_i ? 1'h0 : read_pointer_n;
  assign status_cnt_n = _153_ ? 2'hx : _007_;
  assign _007_ = _147_ ? _162_[1:0] : _004_;
  assign read_pointer_n = _147_ ? _006_ : 1'hx;
  assign _004_ = _145_ ? _013_[1:0] : 2'hx;
  assign write_pointer_n = _145_ ? _009_ : 1'hx;
  assign _159_ = $signed(_154_) < 0 ? 61'h1fffffffffffffff << - _154_ : 61'h1fffffffffffffff >> _154_;
  assign _160_ = $signed(_154_) < 0 ? _016_ << - _154_ : _016_ >> _154_;
  wire [121:0] _343_ = mem_q;
  assign data_o = _343_[$signed(_010_) +: 61];
  assign _162_ = status_cnt_q - 32'd1;
  assign _012_[0] = _009_;
  assign _015_[0] = _006_;
  assign _110_[0] = flush_i_t0;
  assign usage_o = status_cnt_q[0];
  assign usage_o_t0 = status_cnt_q_t0[0];
endmodule

module paramod94ada5fb76429007038970b1df82ddc5bce206f6rr_arb_tree (clk_i, rst_ni, flush_i, rr_i, req_i, gnt_o, data_i, req_o, gnt_i, data_o, idx_o, idx_o_t0, gnt_o_t0, gnt_i_t0, flush_i_t0, req_o_t0, data_o_t0, data_i_t0, rr_i_t0, req_i_t0);
  wire _000_;
  wire _001_;
  wire [1:0] _002_;
  wire [1:0] _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire [1:0] _019_;
  wire [30:0] _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire [1:0] _025_;
  wire [1:0] _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire [1:0] _044_;
  wire [30:0] _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire [1:0] _055_;
  wire [1:0] _056_;
  wire [1:0] _057_;
  wire _058_;
  wire _059_;
  wire [1:0] _060_;
  wire [1:0] _061_;
  wire [1:0] _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire [30:0] _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire [1:0] _090_;
  wire [1:0] _091_;
  wire [1:0] _092_;
  wire [1:0] _093_;
  wire [1:0] _094_;
  wire [1:0] _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire [1:0] _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  input clk_i;
  wire clk_i;
  input [1:0] data_i;
  wire [1:0] data_i;
  input [1:0] data_i_t0;
  wire [1:0] data_i_t0;
  output data_o;
  wire data_o;
  output data_o_t0;
  wire data_o_t0;
  input flush_i;
  wire flush_i;
  input flush_i_t0;
  wire flush_i_t0;
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx_t0 ;
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask_t0 ;
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx_t0 ;
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty_t0 ;
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx_t0 ;
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask_t0 ;
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_d ;
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_d_t0 ;
  reg \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  reg \gen_arbiter.gen_int_rr.gen_lock.lock_q_t0 ;
  reg [1:0] \gen_arbiter.gen_int_rr.gen_lock.req_q ;
  reg [1:0] \gen_arbiter.gen_int_rr.gen_lock.req_q_t0 ;
  wire \gen_arbiter.gen_int_rr.rr_d ;
  wire \gen_arbiter.gen_int_rr.rr_d_t0 ;
  wire [1:0] \gen_arbiter.req_d ;
  wire [1:0] \gen_arbiter.req_d_t0 ;
  reg \gen_arbiter.rr_q ;
  reg \gen_arbiter.rr_q_t0 ;
  input gnt_i;
  wire gnt_i;
  input gnt_i_t0;
  wire gnt_i_t0;
  output [1:0] gnt_o;
  wire [1:0] gnt_o;
  output [1:0] gnt_o_t0;
  wire [1:0] gnt_o_t0;
  output idx_o;
  wire idx_o;
  output idx_o_t0;
  wire idx_o_t0;
  input [1:0] req_i;
  wire [1:0] req_i;
  input [1:0] req_i_t0;
  wire [1:0] req_i_t0;
  output req_o;
  wire req_o;
  output req_o_t0;
  wire req_o_t0;
  input rr_i;
  wire rr_i;
  input rr_i_t0;
  wire rr_i_t0;
  input rst_ni;
  wire rst_ni;
  assign \gen_arbiter.gen_int_rr.gen_lock.lock_d  = req_o & _121_;
  assign _006_ = \gen_arbiter.req_d [1] & \gen_arbiter.rr_q ;
  assign gnt_o[0] = gnt_i & _028_;
  assign gnt_o[1] = gnt_i & idx_o;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \gen_arbiter.gen_int_rr.gen_lock.req_q_t0  <= 2'h0;
    else \gen_arbiter.gen_int_rr.gen_lock.req_q_t0  <= _003_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \gen_arbiter.gen_int_rr.gen_lock.lock_q_t0  <= 1'h0;
    else \gen_arbiter.gen_int_rr.gen_lock.lock_q_t0  <= _001_;
  assign _018_ = ~ _016_;
  assign _107_ = _004_ ^ \gen_arbiter.rr_q ;
  assign _081_ = _005_ | \gen_arbiter.rr_q_t0 ;
  assign _082_ = _107_ | _081_;
  assign _041_ = _016_ & _005_;
  assign _042_ = _018_ & \gen_arbiter.rr_q_t0 ;
  assign _043_ = _082_ & _017_;
  assign _083_ = _041_ | _042_;
  assign _084_ = _083_ | _043_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \gen_arbiter.rr_q_t0  <= 1'h0;
    else \gen_arbiter.rr_q_t0  <= _084_;
  assign _031_ = req_o_t0 & _121_;
  assign _034_ = \gen_arbiter.req_d_t0 [1] & \gen_arbiter.rr_q ;
  assign _037_ = gnt_i_t0 & _028_;
  assign _040_ = gnt_i_t0 & idx_o;
  assign _035_ = \gen_arbiter.rr_q_t0  & \gen_arbiter.req_d [1];
  assign _038_ = idx_o_t0 & gnt_i;
  assign _036_ = \gen_arbiter.req_d_t0 [1] & \gen_arbiter.rr_q_t0 ;
  assign _039_ = gnt_i_t0 & idx_o_t0;
  assign _077_ = _031_ | _032_;
  assign _078_ = _034_ | _035_;
  assign _079_ = _037_ | _038_;
  assign _080_ = _040_ | _038_;
  assign \gen_arbiter.gen_int_rr.gen_lock.lock_d_t0  = _077_ | _033_;
  assign _007_ = _078_ | _036_;
  assign gnt_o_t0[0] = _079_ | _039_;
  assign gnt_o_t0[1] = _080_ | _039_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \gen_arbiter.rr_q  <= 1'h0;
    else if (_016_) \gen_arbiter.rr_q  <= _004_;
  assign _008_ = 32'd0 > { 1'h0 , _085_ };
  assign _009_ = 32'd1 > { 1'h0 , _085_ };
  assign _010_ = 32'd0 > { 1'h0 , _045_ };
  assign _011_ = 32'd1 > { 1'h0 , _045_ };
  assign _112_ = _008_ ^ _010_;
  assign _114_ = _009_ ^ _011_;
  assign _012_ = 32'd0 <= { 1'h0 , _085_ };
  assign _013_ = 32'd1 <= { 1'h0 , _085_ };
  assign _014_ = 32'd0 <= { 1'h0 , _045_ };
  assign _015_ = 32'd1 <= { 1'h0 , _045_ };
  assign _116_ = _012_ ^ _014_;
  assign _118_ = _013_ ^ _015_;
  assign _020_ = ~ { 30'h00000000 , \gen_arbiter.rr_q_t0 };
  assign _045_ = { 30'h00000000 , \gen_arbiter.rr_q } & _020_;
  assign _085_ = { 30'h00000000 , \gen_arbiter.rr_q } | { 30'h00000000 , \gen_arbiter.rr_q_t0 };
  assign _032_ = gnt_i_t0 & req_o;
  assign _046_ = req_o_t0 & gnt_i;
  assign _033_ = gnt_i_t0 & req_o_t0;
  assign _086_ = _032_ | _046_;
  assign _120_ = _086_ | _033_;
  assign _029_ = | { _120_ , flush_i_t0 };
  assign _019_ = ~ { _120_ , flush_i_t0 };
  assign _044_ = { _119_ , flush_i } & _019_;
  assign _030_ = ! _044_;
  assign _017_ = _030_ & _029_;
  assign _025_ = ~ { { 2{ flush_i } } };
  assign _024_ = ~ flush_i;
  assign _026_ = ~ { { 2{ \gen_arbiter.gen_int_rr.gen_lock.lock_q } } };
  assign _027_ = ~ \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  assign _028_ = ~ idx_o;
  assign _090_ = { { 2{ flush_i_t0 } } } | _025_;
  assign _089_ = flush_i_t0 | _024_;
  assign _093_ = { { 2{ \gen_arbiter.gen_int_rr.gen_lock.lock_q_t0 } } } | _026_;
  assign _100_ = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty_t0  | _027_;
  assign _104_ = idx_o_t0 | _028_;
  assign _091_ = { { 2{ flush_i_t0 } } } | { { 2{ flush_i } } };
  assign _094_ = { { 2{ \gen_arbiter.gen_int_rr.gen_lock.lock_q_t0 } } } | { { 2{ \gen_arbiter.gen_int_rr.gen_lock.lock_q } } };
  assign _096_ = _112_ | _111_;
  assign _097_ = _114_ | _113_;
  assign _098_ = _116_ | _115_;
  assign _099_ = _118_ | _117_;
  assign _101_ = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty_t0  | \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  assign _103_ = _120_ | _119_;
  assign _105_ = idx_o_t0 | idx_o;
  assign _053_ = \gen_arbiter.gen_int_rr.rr_d_t0  & _089_;
  assign _055_ = \gen_arbiter.req_d_t0  & _090_;
  assign _058_ = \gen_arbiter.gen_int_rr.gen_lock.lock_d_t0  & _089_;
  assign _060_ = req_i_t0 & _093_;
  assign _071_ = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx_t0  & _100_;
  assign _074_ = data_i_t0[0] & _104_;
  assign _056_ = 2'h0 & _091_;
  assign _061_ = \gen_arbiter.gen_int_rr.gen_lock.req_q_t0  & _094_;
  assign _063_ = \gen_arbiter.req_d_t0 [0] & _096_;
  assign _065_ = \gen_arbiter.req_d_t0 [1] & _097_;
  assign _067_ = \gen_arbiter.req_d_t0 [0] & _098_;
  assign _069_ = \gen_arbiter.req_d_t0 [1] & _099_;
  assign _072_ = \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx_t0  & _101_;
  assign \gen_arbiter.gen_int_rr.rr_d_t0  = \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx_t0  & _103_;
  assign _075_ = data_i_t0[1] & _105_;
  assign _092_ = _055_ | _056_;
  assign _095_ = _060_ | _061_;
  assign _102_ = _071_ | _072_;
  assign _106_ = _074_ | _075_;
  assign _108_ = req_i ^ \gen_arbiter.gen_int_rr.gen_lock.req_q ;
  assign _109_ = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx  ^ \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  assign _110_ = data_i[0] ^ data_i[1];
  assign _054_ = flush_i_t0 & \gen_arbiter.gen_int_rr.rr_d ;
  assign _057_ = { { 2{ flush_i_t0 } } } & \gen_arbiter.req_d ;
  assign _059_ = flush_i_t0 & \gen_arbiter.gen_int_rr.gen_lock.lock_d ;
  assign _062_ = { { 2{ \gen_arbiter.gen_int_rr.gen_lock.lock_q_t0 } } } & _108_;
  assign _064_ = _112_ & \gen_arbiter.req_d [0];
  assign _066_ = _114_ & \gen_arbiter.req_d [1];
  assign _068_ = _116_ & \gen_arbiter.req_d [0];
  assign _070_ = _118_ & \gen_arbiter.req_d [1];
  assign _073_ = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty_t0  & _109_;
  assign _076_ = idx_o_t0 & _110_;
  assign _005_ = _054_ | _053_;
  assign _003_ = _057_ | _092_;
  assign _001_ = _059_ | _058_;
  assign \gen_arbiter.req_d_t0  = _062_ | _095_;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask_t0 [0] = _064_ | _063_;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask_t0 [1] = _066_ | _065_;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask_t0 [0] = _068_ | _067_;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask_t0 [1] = _070_ | _069_;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx_t0  = _073_ | _102_;
  assign data_o_t0 = _076_ | _106_;
  assign _016_ = | { _119_ , flush_i };
  assign _021_ = ~ \gen_arbiter.req_d [0];
  assign _022_ = ~ \gen_arbiter.req_d [1];
  assign _023_ = ~ _006_;
  assign _047_ = \gen_arbiter.req_d_t0 [0] & _022_;
  assign _050_ = \gen_arbiter.req_d_t0 [0] & _023_;
  assign _048_ = \gen_arbiter.req_d_t0 [1] & _021_;
  assign _051_ = _007_ & \gen_arbiter.req_d [0];
  assign _049_ = \gen_arbiter.req_d_t0 [0] & \gen_arbiter.req_d_t0 [1];
  assign _052_ = \gen_arbiter.req_d_t0 [0] & _007_;
  assign _087_ = _047_ | _048_;
  assign _088_ = _050_ | _051_;
  assign req_o_t0 = _087_ | _049_;
  assign idx_o_t0 = _088_ | _052_;
  assign _111_ = 32'd0 > \gen_arbiter.rr_q ;
  assign _113_ = 32'd1 > \gen_arbiter.rr_q ;
  assign _115_ = 32'd0 <= \gen_arbiter.rr_q ;
  assign _117_ = 32'd1 <= \gen_arbiter.rr_q ;
  assign _119_ = gnt_i && req_o;
  assign _121_ = ~ gnt_i;
  assign req_o = \gen_arbiter.req_d [0] | \gen_arbiter.req_d [1];
  assign idx_o = _021_ | _006_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \gen_arbiter.gen_int_rr.gen_lock.req_q  <= 2'h0;
    else \gen_arbiter.gen_int_rr.gen_lock.req_q  <= _002_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \gen_arbiter.gen_int_rr.gen_lock.lock_q  <= 1'h0;
    else \gen_arbiter.gen_int_rr.gen_lock.lock_q  <= _000_;
  assign _004_ = flush_i ? 1'h0 : \gen_arbiter.gen_int_rr.rr_d ;
  assign _002_ = flush_i ? 2'h0 : \gen_arbiter.req_d ;
  assign _000_ = flush_i ? 1'h0 : \gen_arbiter.gen_int_rr.gen_lock.lock_d ;
  assign \gen_arbiter.req_d  = \gen_arbiter.gen_int_rr.gen_lock.lock_q  ? \gen_arbiter.gen_int_rr.gen_lock.req_q  : req_i;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = _111_ ? \gen_arbiter.req_d [0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = _113_ ? \gen_arbiter.req_d [1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = _115_ ? \gen_arbiter.req_d [0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = _117_ ? \gen_arbiter.req_d [1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty  ? \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx  : \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  assign \gen_arbiter.gen_int_rr.rr_d  = _119_ ? \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  : 1'hx;
  assign data_o = idx_o ? data_i[1] : data_i[0];
  paramodlzcWIDTH3200000000000000000000000000000010MODE10  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .cnt_o_t0(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx_t0 ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ),
    .in_i_t0(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask_t0 )
  );
  paramodlzcWIDTH3200000000000000000000000000000010MODE10  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .cnt_o_t0(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx_t0 ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .empty_o_t0(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty_t0 ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ),
    .in_i_t0(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask_t0 )
  );
endmodule
module paramodcae7810e8a848d85f91d59f52ff0d8d36ae776a8fifo_v3_94E38_91134 (clk_i, rst_ni, flush_i, testmode_i, full_o, empty_o, usage_o, data_i, push_i, data_o, pop_i, usage_o_t0, testmode_i_t0, push_i_t0, pop_i_t0, full_o_t0, flush_i_t0, empty_o_t0, data_o_t0, data_i_t0);
  wire _000_;
  wire [1:0] _001_;
  wire [1:0] _002_;
  wire _003_;
  wire [1:0] _004_;
  wire [1:0] _005_;
  wire _006_;
  wire [1:0] _007_;
  wire [1:0] _008_;
  wire _009_;
  wire [31:0] _010_;
  wire [31:0] _011_;
  wire [31:0] _012_;
  wire [31:0] _013_;
  wire [31:0] _014_;
  wire [31:0] _015_;
  wire [269:0] _016_;
  wire [269:0] _017_;
  wire [269:0] _018_;
  wire [269:0] _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire [31:0] _028_;
  wire _029_;
  wire _030_;
  wire [3:0] _031_;
  wire [1:0] _032_;
  wire [1:0] _033_;
  wire [269:0] _034_;
  wire [269:0] _035_;
  wire [1:0] _036_;
  wire [1:0] _037_;
  wire [1:0] _038_;
  wire [1:0] _039_;
  wire [32:0] _040_;
  wire [32:0] _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire [31:0] _050_;
  wire [269:0] _051_;
  wire [269:0] _052_;
  wire [269:0] _053_;
  wire [269:0] _054_;
  wire [269:0] _055_;
  wire [269:0] _056_;
  wire [269:0] _057_;
  wire [269:0] _058_;
  wire [269:0] _059_;
  wire [1:0] _060_;
  wire [1:0] _061_;
  wire [1:0] _062_;
  wire [3:0] _063_;
  wire [1:0] _064_;
  wire [1:0] _065_;
  wire [1:0] _066_;
  wire [1:0] _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire [32:0] _083_;
  wire [269:0] _084_;
  wire [269:0] _085_;
  wire [269:0] _086_;
  wire [1:0] _087_;
  wire [1:0] _088_;
  wire [1:0] _089_;
  wire [1:0] _090_;
  wire [1:0] _091_;
  wire [1:0] _092_;
  wire [1:0] _093_;
  wire [1:0] _094_;
  wire [1:0] _095_;
  wire [1:0] _096_;
  wire [1:0] _097_;
  wire [1:0] _098_;
  wire [31:0] _099_;
  wire [269:0] _100_;
  wire [269:0] _101_;
  wire [269:0] _102_;
  wire [269:0] _103_;
  wire [269:0] _104_;
  wire [269:0] _105_;
  wire [1:0] _106_;
  wire [1:0] _107_;
  wire [1:0] _108_;
  wire [1:0] _109_;
  wire [1:0] _110_;
  wire [1:0] _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire [269:0] _117_;
  wire [1:0] _118_;
  wire [1:0] _119_;
  wire [1:0] _120_;
  wire [1:0] _121_;
  wire [1:0] _122_;
  wire [1:0] _123_;
  wire [1:0] _124_;
  wire [1:0] _125_;
  wire [1:0] _126_;
  wire [1:0] _127_;
  wire [1:0] _128_;
  wire [1:0] _129_;
  wire [31:0] _130_;
  wire [31:0] _131_;
  wire [269:0] _132_;
  wire [1:0] _133_;
  wire [32:0] _134_;
  wire [1:0] _135_;
  wire [31:0] _136_;
  wire _137_;
  wire _138_;
  wire [31:0] _139_;
  wire [31:0] _140_;
  wire [31:0] _141_;
  wire [31:0] _142_;
  wire [269:0] _143_;
  wire [269:0] _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire [32:0] _154_;
  wire [269:0] _155_;
  wire [269:0] _156_;
  wire _157_;
  wire _158_;
  wire [269:0] _159_;
  wire [269:0] _160_;
  wire [269:0] _161_;
  wire [31:0] _162_;
  input clk_i;
  wire clk_i;
  input [134:0] data_i;
  wire [134:0] data_i;
  input [134:0] data_i_t0;
  wire [134:0] data_i_t0;
  output [134:0] data_o;
  wire [134:0] data_o;
  output [134:0] data_o_t0;
  wire [134:0] data_o_t0;
  output empty_o;
  wire empty_o;
  output empty_o_t0;
  wire empty_o_t0;
  input flush_i;
  wire flush_i;
  input flush_i_t0;
  wire flush_i_t0;
  output full_o;
  wire full_o;
  output full_o_t0;
  wire full_o_t0;
  wire [269:0] mem_n;
  wire [269:0] mem_n_t0;
  reg [269:0] mem_q;
  reg [269:0] mem_q_t0;
  input pop_i;
  wire pop_i;
  input pop_i_t0;
  wire pop_i_t0;
  input push_i;
  wire push_i;
  input push_i_t0;
  wire push_i_t0;
  wire read_pointer_n;
  reg read_pointer_q;
  input rst_ni;
  wire rst_ni;
  wire [1:0] status_cnt_n;
  wire [1:0] status_cnt_n_t0;
  reg [1:0] status_cnt_q;
  reg [1:0] status_cnt_q_t0;
  input testmode_i;
  wire testmode_i;
  input testmode_i_t0;
  wire testmode_i_t0;
  output usage_o;
  wire usage_o;
  output usage_o_t0;
  wire usage_o_t0;
  wire write_pointer_n;
  reg write_pointer_q;
  assign { _012_[31:1] , _009_ } = write_pointer_q + 32'd1;
  assign _013_ = status_cnt_q + 32'd1;
  assign { _015_[31:1] , _006_ } = read_pointer_q + 32'd1;
  assign _016_ = 135'h7fffffffffffffffffffffffffffffffff & data_i;
  assign _018_ = mem_q & _155_;
  assign _028_ = ~ { 30'h00000000 , status_cnt_q_t0 };
  assign _139_ = _050_ + 32'd1;
  assign _140_ = _099_ + 32'd1;
  assign _131_ = _139_ ^ _140_;
  assign _014_ = _131_ | { 30'h00000000 , status_cnt_q_t0 };
  assign _030_ = ~ _026_;
  assign _132_ = mem_n ^ mem_q;
  assign _133_ = _001_ ^ status_cnt_q;
  assign _102_ = mem_n_t0 | mem_q_t0;
  assign _106_ = _002_ | status_cnt_q_t0;
  assign _103_ = _132_ | _102_;
  assign _107_ = _133_ | _106_;
  assign _057_ = { { 270{ _145_ } } } & mem_n_t0;
  assign _060_ = { { 2{ _026_ } } } & _002_;
  assign _058_ = { { 270{ _029_ } } } & mem_q_t0;
  assign _061_ = { { 2{ _030_ } } } & status_cnt_q_t0;
  assign _059_ = _103_ & { { 270{ _146_ } } };
  assign _062_ = _107_ & { { 2{ _027_ } } };
  assign _104_ = _057_ | _058_;
  assign _108_ = _060_ | _061_;
  assign _105_ = _104_ | _059_;
  assign _109_ = _108_ | _062_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) mem_q_t0 <= 270'h00000000000000000000000000000000000000000000000000000000000000000000;
    else mem_q_t0 <= _105_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) status_cnt_q_t0 <= 2'h0;
    else status_cnt_q_t0 <= _109_;
  assign _051_ = 270'h00000000000000000000000000000000000000000000000000000000000000000000 & { 135'h0000000000000000000000000000000000 , data_i };
  assign _054_ = mem_q_t0 & _155_;
  assign _052_ = { 135'h0000000000000000000000000000000000 , data_i_t0 } & 270'h00000000000000000000000000000000007fffffffffffffffffffffffffffffffff;
  assign _055_ = _156_ & mem_q;
  assign _053_ = 270'h00000000000000000000000000000000000000000000000000000000000000000000 & { 135'h0000000000000000000000000000000000 , data_i_t0 };
  assign _056_ = mem_q_t0 & _156_;
  assign _100_ = _051_ | _052_;
  assign _101_ = _054_ | _055_;
  assign _017_ = _100_ | _053_;
  assign _019_ = _101_ | _056_;
  assign _044_ = | { _110_[1] , flush_i_t0 };
  assign _032_ = ~ { _110_[1] , flush_i_t0 };
  assign _033_ = ~ status_cnt_q_t0;
  assign _064_ = { _153_ , flush_i } & _032_;
  assign _066_ = status_cnt_q & _033_;
  assign _065_ = 2'h2 & _032_;
  assign _067_ = 2'h2 & _033_;
  assign _137_ = _064_ == _065_;
  assign _138_ = _066_ == _067_;
  assign _023_ = _137_ & _044_;
  assign full_o_t0 = _138_ & _046_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) mem_q <= 270'h00000000000000000000000000000000000000000000000000000000000000000000;
    else if (_145_) mem_q <= mem_n;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) status_cnt_q <= 2'h0;
    else if (_026_) status_cnt_q <= _001_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) write_pointer_q <= 1'h0;
    else if (_024_) write_pointer_q <= _003_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) read_pointer_q <= 1'h0;
    else if (_025_) read_pointer_q <= _000_;
  assign _068_ = push_i_t0 & _157_;
  assign _071_ = pop_i_t0 & _158_;
  assign _074_ = push_i_t0 & pop_i;
  assign _077_ = _150_ & _157_;
  assign _080_ = _152_ & _158_;
  assign _069_ = full_o_t0 & push_i;
  assign _072_ = empty_o_t0 & pop_i;
  assign _075_ = pop_i_t0 & push_i;
  assign _078_ = full_o_t0 & _149_;
  assign _081_ = empty_o_t0 & _151_;
  assign _070_ = push_i_t0 & full_o_t0;
  assign _073_ = pop_i_t0 & empty_o_t0;
  assign _076_ = push_i_t0 & pop_i_t0;
  assign _079_ = _150_ & full_o_t0;
  assign _082_ = _152_ & empty_o_t0;
  assign _112_ = _068_ | _069_;
  assign _113_ = _071_ | _072_;
  assign _114_ = _074_ | _075_;
  assign _115_ = _077_ | _078_;
  assign _116_ = _080_ | _081_;
  assign _146_ = _112_ | _070_;
  assign _148_ = _113_ | _073_;
  assign _150_ = _114_ | _076_;
  assign _152_ = _115_ | _079_;
  assign _110_[1] = _116_ | _082_;
  assign _043_ = | { _146_ , _148_ , _110_[1] , flush_i_t0 };
  assign _046_ = | status_cnt_q_t0;
  assign _031_ = ~ { _110_[1] , _148_ , _146_ , flush_i_t0 };
  assign _063_ = { _153_ , _147_ , _145_ , flush_i } & _031_;
  assign _048_ = ! _063_;
  assign _049_ = ! _066_;
  assign _021_ = _048_ & _043_;
  assign empty_o_t0 = _049_ & _046_;
  assign _036_ = ~ { { 2{ flush_i } } };
  assign _037_ = ~ { { 2{ _153_ } } };
  assign _038_ = ~ { { 2{ _147_ } } };
  assign _039_ = ~ { { 2{ _145_ } } };
  assign _029_ = ~ _145_;
  assign _118_ = { { 2{ flush_i_t0 } } } | _036_;
  assign _121_ = { { 2{ _110_[1] } } } | _037_;
  assign _124_ = { { 2{ _148_ } } } | _038_;
  assign _127_ = { { 2{ _146_ } } } | _039_;
  assign _119_ = { { 2{ flush_i_t0 } } } | { { 2{ flush_i } } };
  assign _122_ = { { 2{ _110_[1] } } } | { { 2{ _153_ } } };
  assign _125_ = { { 2{ _148_ } } } | { { 2{ _147_ } } };
  assign _128_ = { { 2{ _146_ } } } | { { 2{ _145_ } } };
  assign _087_ = status_cnt_n_t0 & _118_;
  assign _090_ = _008_ & _121_;
  assign _093_ = _005_ & _124_;
  assign _096_ = 2'h0 & _127_;
  assign _088_ = 2'h0 & _119_;
  assign _091_ = 2'h0 & _122_;
  assign _094_ = _130_[1:0] & _125_;
  assign _097_ = _014_[1:0] & _128_;
  assign _120_ = _087_ | _088_;
  assign _123_ = _090_ | _091_;
  assign _126_ = _093_ | _094_;
  assign _129_ = _096_ | _097_;
  assign _135_ = _004_ ^ _162_[1:0];
  assign _089_ = { { 2{ flush_i_t0 } } } & status_cnt_n;
  assign _092_ = { { 2{ _110_[1] } } } & _007_;
  assign _095_ = { { 2{ _148_ } } } & _135_;
  assign _098_ = { { 2{ _146_ } } } & _013_[1:0];
  assign _002_ = _089_ | _120_;
  assign status_cnt_n_t0 = _092_ | _123_;
  assign _008_ = _095_ | _126_;
  assign _005_ = _098_ | _129_;
  assign _083_ = { 1'h0 , _011_ } & 33'h1ffffffff;
  assign _040_ = - _083_;
  assign _041_ = - { 1'h0 , _011_ };
  assign _134_ = _040_ ^ _041_;
  assign _020_ = | { _153_ , _147_ , _145_ , flush_i };
  assign _022_ = { _153_ , flush_i } != 2'h2;
  assign _024_ = | { _145_ , flush_i };
  assign _025_ = | { _147_ , flush_i };
  assign _026_ = & { _022_ , _020_ };
  assign _034_ = ~ _018_;
  assign _035_ = ~ _160_;
  assign _084_ = _019_ & _035_;
  assign _085_ = _161_ & _034_;
  assign _086_ = _019_ & _161_;
  assign _117_ = _084_ | _085_;
  assign mem_n_t0 = _117_ | _086_;
  assign _045_ = | { _021_ , _023_ };
  assign _111_ = { _022_ , _020_ } | { _023_ , _021_ };
  assign _042_ = & _111_;
  assign _027_ = _045_ & _042_;
  assign _047_ = | _134_;
  assign _143_ = $signed(_154_) < 0 ? 1'h0 << - _154_ : 1'h0 >> _154_;
  assign _144_ = $signed(_154_) < 0 ? _017_ << - _154_ : _017_ >> _154_;
  assign _156_ = { { 270{ _047_ } } } | _143_;
  assign _161_ = { { 270{ _047_ } } } | _144_;
  wire [269:0] _342_ = mem_q_t0;
  assign data_o_t0 = _342_[$signed(_010_) +: 135];
  assign _050_ = { 30'h00000000 , status_cnt_q } & _028_;
  assign _099_ = { 30'h00000000 , status_cnt_q } | { 30'h00000000 , status_cnt_q_t0 };
  assign _141_ = _099_ - 32'd1;
  assign _142_ = _050_ - 32'd1;
  assign _136_ = _141_ ^ _142_;
  assign _130_ = _136_ | { 30'h00000000 , status_cnt_q_t0 };
  assign full_o = status_cnt_q == 2'h2;
  assign empty_o = ! status_cnt_q;
  assign _145_ = push_i && _157_;
  assign _147_ = pop_i && _158_;
  assign _149_ = push_i && pop_i;
  assign _151_ = _149_ && _157_;
  assign _153_ = _151_ && _158_;
  assign _010_ = read_pointer_q * 32'd135;
  assign _011_ = write_pointer_q * 32'd135;
  assign _154_ = - $signed({ 1'h0 , _011_ });
  assign _155_ = ~ _159_;
  assign _157_ = ~ full_o;
  assign _158_ = ~ empty_o;
  assign mem_n = _018_ | _160_;
  assign _001_ = flush_i ? 2'h0 : status_cnt_n;
  assign _003_ = flush_i ? 1'h0 : write_pointer_n;
  assign _000_ = flush_i ? 1'h0 : read_pointer_n;
  assign status_cnt_n = _153_ ? 2'hx : _007_;
  assign _007_ = _147_ ? _162_[1:0] : _004_;
  assign read_pointer_n = _147_ ? _006_ : 1'hx;
  assign _004_ = _145_ ? _013_[1:0] : 2'hx;
  assign write_pointer_n = _145_ ? _009_ : 1'hx;
  assign _159_ = $signed(_154_) < 0 ? 135'h7fffffffffffffffffffffffffffffffff << - _154_ : 135'h7fffffffffffffffffffffffffffffffff >> _154_;
  assign _160_ = $signed(_154_) < 0 ? _016_ << - _154_ : _016_ >> _154_;
  wire [269:0] _343_ = mem_q;
  assign data_o = _343_[$signed(_010_) +: 135];
  assign _162_ = status_cnt_q - 32'd1;
  assign _012_[0] = _009_;
  assign _015_[0] = _006_;
  assign _110_[0] = flush_i_t0;
  assign usage_o = status_cnt_q[0];
  assign usage_o_t0 = status_cnt_q_t0[0];
endmodule
module paramodcf17af83d4bee7f746adbc3571cbba07b9ab62a7fifo_v3 (clk_i, rst_ni, flush_i, testmode_i, full_o, empty_o, usage_o, data_i, push_i, data_o, pop_i, usage_o_t0, testmode_i_t0, push_i_t0, pop_i_t0, full_o_t0, flush_i_t0, empty_o_t0, data_o_t0, data_i_t0);
  wire [1:0] _000_;
  wire [2:0] _001_;
  wire [2:0] _002_;
  wire [1:0] _003_;
  wire [1:0] _004_;
  wire [2:0] _005_;
  wire [2:0] _006_;
  wire [1:0] _007_;
  wire [1:0] _008_;
  wire [2:0] _009_;
  wire [2:0] _010_;
  wire [1:0] _011_;
  wire [2:0] _012_;
  wire [2:0] _013_;
  wire [1:0] _014_;
  wire [1:0] _015_;
  wire [2:0] _016_;
  wire [2:0] _017_;
  wire [31:0] _018_;
  wire [31:0] _019_;
  wire [31:0] _020_;
  wire [31:0] _021_;
  wire [31:0] _022_;
  wire [31:0] _023_;
  wire [19:0] _024_;
  wire [19:0] _025_;
  wire [19:0] _026_;
  wire [19:0] _027_;
  wire _028_;
  wire _029_;
  wire [31:0] _030_;
  wire _031_;
  wire _032_;
  wire [2:0] _033_;
  wire [2:0] _034_;
  wire [19:0] _035_;
  wire [19:0] _036_;
  wire [2:0] _037_;
  wire [2:0] _038_;
  wire [2:0] _039_;
  wire [4:0] _040_;
  wire [2:0] _041_;
  wire [2:0] _042_;
  wire [2:0] _043_;
  wire [32:0] _044_;
  wire [32:0] _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire [31:0] _050_;
  wire [19:0] _051_;
  wire [19:0] _052_;
  wire [19:0] _053_;
  wire [19:0] _054_;
  wire [19:0] _055_;
  wire [19:0] _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire [2:0] _060_;
  wire [2:0] _061_;
  wire [2:0] _062_;
  wire [19:0] _063_;
  wire [19:0] _064_;
  wire [19:0] _065_;
  wire [2:0] _066_;
  wire [2:0] _067_;
  wire [2:0] _068_;
  wire [2:0] _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire [32:0] _086_;
  wire [19:0] _087_;
  wire [19:0] _088_;
  wire [19:0] _089_;
  wire [2:0] _090_;
  wire [2:0] _091_;
  wire [2:0] _092_;
  wire [2:0] _093_;
  wire [2:0] _094_;
  wire [2:0] _095_;
  wire [2:0] _096_;
  wire [2:0] _097_;
  wire [2:0] _098_;
  wire [4:0] _099_;
  wire [4:0] _100_;
  wire [4:0] _101_;
  wire [2:0] _102_;
  wire [2:0] _103_;
  wire [2:0] _104_;
  wire [2:0] _105_;
  wire [2:0] _106_;
  wire [2:0] _107_;
  wire [2:0] _108_;
  wire [2:0] _109_;
  wire [2:0] _110_;
  wire [31:0] _111_;
  wire [19:0] _112_;
  wire [19:0] _113_;
  wire _114_;
  wire [2:0] _115_;
  wire [2:0] _116_;
  wire [2:0] _117_;
  wire [2:0] _118_;
  wire [19:0] _119_;
  wire [19:0] _120_;
  wire [19:0] _121_;
  wire [19:0] _122_;
  wire [2:0] _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire [19:0] _130_;
  wire [2:0] _131_;
  wire [2:0] _132_;
  wire [2:0] _133_;
  wire [2:0] _134_;
  wire [2:0] _135_;
  wire [2:0] _136_;
  wire [2:0] _137_;
  wire [2:0] _138_;
  wire [2:0] _139_;
  wire [4:0] _140_;
  wire [4:0] _141_;
  wire [4:0] _142_;
  wire [2:0] _143_;
  wire [2:0] _144_;
  wire [2:0] _145_;
  wire [2:0] _146_;
  wire [2:0] _147_;
  wire [2:0] _148_;
  wire [2:0] _149_;
  wire [2:0] _150_;
  wire [2:0] _151_;
  wire [31:0] _152_;
  wire [31:0] _153_;
  wire [2:0] _154_;
  wire [19:0] _155_;
  wire [32:0] _156_;
  wire [2:0] _157_;
  wire [4:0] _158_;
  wire [2:0] _159_;
  wire [2:0] _160_;
  wire [2:0] _161_;
  wire [31:0] _162_;
  wire _163_;
  wire _164_;
  wire [31:0] _165_;
  wire [31:0] _166_;
  wire [31:0] _167_;
  wire [31:0] _168_;
  wire [19:0] _169_;
  wire [19:0] _170_;
  wire [4:0] _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire [32:0] _185_;
  wire [19:0] _186_;
  wire [19:0] _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire [19:0] _191_;
  wire [19:0] _192_;
  wire [19:0] _193_;
  wire [4:0] _194_;
  wire [31:0] _195_;
  input clk_i;
  wire clk_i;
  input [4:0] data_i;
  wire [4:0] data_i;
  input [4:0] data_i_t0;
  wire [4:0] data_i_t0;
  output [4:0] data_o;
  wire [4:0] data_o;
  output [4:0] data_o_t0;
  wire [4:0] data_o_t0;
  output empty_o;
  wire empty_o;
  output empty_o_t0;
  wire empty_o_t0;
  input flush_i;
  wire flush_i;
  input flush_i_t0;
  wire flush_i_t0;
  output full_o;
  wire full_o;
  output full_o_t0;
  wire full_o_t0;
  wire [19:0] mem_n;
  wire [19:0] mem_n_t0;
  reg [19:0] mem_q;
  reg [19:0] mem_q_t0;
  input pop_i;
  wire pop_i;
  input pop_i_t0;
  wire pop_i_t0;
  input push_i;
  wire push_i;
  input push_i_t0;
  wire push_i_t0;
  wire [1:0] read_pointer_n;
  reg [1:0] read_pointer_q;
  input rst_ni;
  wire rst_ni;
  wire [2:0] status_cnt_n;
  wire [2:0] status_cnt_n_t0;
  reg [2:0] status_cnt_q;
  reg [2:0] status_cnt_q_t0;
  input testmode_i;
  wire testmode_i;
  input testmode_i_t0;
  wire testmode_i_t0;
  output [1:0] usage_o;
  wire [1:0] usage_o;
  output [1:0] usage_o_t0;
  wire [1:0] usage_o_t0;
  wire [1:0] write_pointer_n;
  reg [1:0] write_pointer_q;
  assign { _020_[31:2] , _011_ } = write_pointer_q + 32'd1;
  assign _021_ = status_cnt_q + 32'd1;
  assign { _023_[31:2] , _008_ } = read_pointer_q + 32'd1;
  assign _024_ = 5'h1f & data_i;
  assign _026_ = mem_q & _186_;
  assign empty_o = _172_ & _188_;
  assign _050_ = { 29'h00000000 , status_cnt_q } & _030_;
  assign _165_ = _050_ + 32'd1;
  assign _166_ = _111_ + 32'd1;
  assign _153_ = _165_ ^ _166_;
  assign _022_ = _153_ | { 29'h00000000 , status_cnt_q_t0 };
  assign _032_ = ~ _174_;
  assign _031_ = ~ _028_;
  assign _154_ = _001_ ^ status_cnt_q;
  assign _155_ = mem_n ^ mem_q;
  assign _115_ = _002_ | status_cnt_q_t0;
  assign _119_ = mem_n_t0 | mem_q_t0;
  assign _116_ = _154_ | _115_;
  assign _120_ = _155_ | _119_;
  assign _060_ = { { 3{ _028_ } } } & _002_;
  assign _063_ = { { 20{ _174_ } } } & mem_n_t0;
  assign _061_ = { { 3{ _031_ } } } & status_cnt_q_t0;
  assign _064_ = { { 20{ _032_ } } } & mem_q_t0;
  assign _062_ = _116_ & { { 3{ _029_ } } };
  assign _065_ = _120_ & { { 20{ _175_ } } };
  assign _117_ = _060_ | _061_;
  assign _121_ = _063_ | _064_;
  assign _118_ = _117_ | _062_;
  assign _122_ = _121_ | _065_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) status_cnt_q_t0 <= 3'h0;
    else status_cnt_q_t0 <= _118_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) mem_q_t0 <= 20'h00000;
    else mem_q_t0 <= _122_;
  assign _051_ = 20'h00000 & { 15'h0000 , data_i };
  assign _054_ = mem_q_t0 & _186_;
  assign _057_ = _173_ & _188_;
  assign _052_ = { 15'h0000 , data_i_t0 } & 20'h0001f;
  assign _055_ = _187_ & mem_q;
  assign _053_ = 20'h00000 & { 15'h0000 , data_i_t0 };
  assign _056_ = mem_q_t0 & _187_;
  assign _112_ = _051_ | _052_;
  assign _113_ = _054_ | _055_;
  assign _114_ = _057_ | _058_;
  assign _025_ = _112_ | _053_;
  assign _027_ = _113_ | _056_;
  assign empty_o_t0 = _114_ | _059_;
  assign _046_ = | { _123_[2] , flush_i_t0 , pop_i_t0 };
  assign _033_ = ~ { _123_[2] , pop_i_t0 , flush_i_t0 };
  assign _034_ = ~ status_cnt_q_t0;
  assign _066_ = { _184_ , pop_i , flush_i } & _033_;
  assign _068_ = status_cnt_q & _034_;
  assign _067_ = 3'h6 & _033_;
  assign _069_ = 3'h4 & _034_;
  assign _163_ = _066_ == _067_;
  assign _164_ = _068_ == _069_;
  assign _029_ = _163_ & _046_;
  assign full_o_t0 = _164_ & _047_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) status_cnt_q <= 3'h0;
    else if (_028_) status_cnt_q <= _001_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) read_pointer_q <= 2'h0;
    else if (_028_) read_pointer_q <= _000_;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) mem_q <= 20'h00000;
    else if (_174_) mem_q <= mem_n;
  always_ff @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) write_pointer_q <= 2'h0;
    else if (_028_) write_pointer_q <= _003_;
  assign _070_ = push_i_t0 & _189_;
  assign _073_ = pop_i_t0 & _190_;
  assign _076_ = push_i_t0 & pop_i;
  assign _079_ = _179_ & _189_;
  assign _082_ = _181_ & _190_;
  assign _085_ = _173_ & push_i;
  assign _071_ = full_o_t0 & push_i;
  assign _074_ = empty_o_t0 & pop_i;
  assign _077_ = pop_i_t0 & push_i;
  assign _080_ = full_o_t0 & _178_;
  assign _083_ = empty_o_t0 & _180_;
  assign _058_ = push_i_t0 & _172_;
  assign _072_ = push_i_t0 & full_o_t0;
  assign _075_ = pop_i_t0 & empty_o_t0;
  assign _078_ = push_i_t0 & pop_i_t0;
  assign _081_ = _179_ & full_o_t0;
  assign _084_ = _181_ & empty_o_t0;
  assign _059_ = _173_ & push_i_t0;
  assign _124_ = _070_ | _071_;
  assign _125_ = _073_ | _074_;
  assign _126_ = _076_ | _077_;
  assign _127_ = _079_ | _080_;
  assign _128_ = _082_ | _083_;
  assign _129_ = _085_ | _058_;
  assign _175_ = _124_ | _072_;
  assign _177_ = _125_ | _075_;
  assign _179_ = _126_ | _078_;
  assign _181_ = _127_ | _081_;
  assign _183_ = _128_ | _084_;
  assign _123_[2] = _129_ | _059_;
  assign _047_ = | status_cnt_q_t0;
  assign _049_ = ! _068_;
  assign _173_ = _049_ & _047_;
  assign _037_ = ~ { { 3{ flush_i } } };
  assign _038_ = ~ { { 3{ pop_i } } };
  assign _039_ = ~ { { 3{ _184_ } } };
  assign _040_ = ~ { { 5{ _184_ } } };
  assign _041_ = ~ { { 3{ _182_ } } };
  assign _042_ = ~ { { 3{ _176_ } } };
  assign _043_ = ~ { { 3{ _174_ } } };
  assign _131_ = { { 3{ flush_i_t0 } } } | _037_;
  assign _134_ = { { 3{ pop_i_t0 } } } | _038_;
  assign _137_ = { { 3{ _123_[2] } } } | _039_;
  assign _140_ = { { 5{ _123_[2] } } } | _040_;
  assign _143_ = { { 3{ _183_ } } } | _041_;
  assign _146_ = { { 3{ _177_ } } } | _042_;
  assign _149_ = { { 3{ _175_ } } } | _043_;
  assign _132_ = { { 3{ flush_i_t0 } } } | { { 3{ flush_i } } };
  assign _135_ = { { 3{ pop_i_t0 } } } | { { 3{ pop_i } } };
  assign _138_ = { { 3{ _123_[2] } } } | { { 3{ _184_ } } };
  assign _141_ = { { 5{ _123_[2] } } } | { { 5{ _184_ } } };
  assign _144_ = { { 3{ _183_ } } } | { { 3{ _182_ } } };
  assign _147_ = { { 3{ _177_ } } } | { { 3{ _176_ } } };
  assign _150_ = { { 3{ _175_ } } } | { { 3{ _174_ } } };
  assign _090_ = status_cnt_n_t0 & _131_;
  assign _093_ = _013_ & _134_;
  assign _096_ = _013_ & _137_;
  assign _099_ = _171_ & _140_;
  assign _102_ = _010_ & _143_;
  assign _105_ = _006_ & _146_;
  assign _108_ = status_cnt_q_t0 & _149_;
  assign _091_ = 3'h0 & _132_;
  assign _094_ = 3'h0 & _135_;
  assign _097_ = _017_ & _138_;
  assign _100_ = data_i_t0 & _141_;
  assign _103_ = status_cnt_q_t0 & _144_;
  assign _106_ = _152_[2:0] & _147_;
  assign _109_ = _022_[2:0] & _150_;
  assign _133_ = _090_ | _091_;
  assign _136_ = _093_ | _094_;
  assign _139_ = _096_ | _097_;
  assign _142_ = _099_ | _100_;
  assign _145_ = _102_ | _103_;
  assign _148_ = _105_ | _106_;
  assign _151_ = _108_ | _109_;
  assign _157_ = _012_ ^ _016_;
  assign _158_ = _194_ ^ data_i;
  assign _159_ = _009_ ^ status_cnt_q;
  assign _160_ = _005_ ^ _195_[2:0];
  assign _161_ = status_cnt_q ^ _021_[2:0];
  assign _092_ = { { 3{ flush_i_t0 } } } & status_cnt_n;
  assign _095_ = { { 3{ pop_i_t0 } } } & _012_;
  assign _098_ = { { 3{ _123_[2] } } } & _157_;
  assign _101_ = { { 5{ _123_[2] } } } & _158_;
  assign _104_ = { { 3{ _183_ } } } & _159_;
  assign _107_ = { { 3{ _177_ } } } & _160_;
  assign _110_ = { { 3{ _175_ } } } & _161_;
  assign _002_ = _092_ | _133_;
  assign _017_ = _095_ | _136_;
  assign status_cnt_n_t0 = _098_ | _139_;
  assign data_o_t0 = _101_ | _142_;
  assign _013_ = _104_ | _145_;
  assign _010_ = _107_ | _148_;
  assign _006_ = _110_ | _151_;
  assign _086_ = { 1'h0 , _019_ } & 33'h1ffffffff;
  assign _044_ = - _086_;
  assign _045_ = - { 1'h0 , _019_ };
  assign _156_ = _044_ ^ _045_;
  assign _028_ = { _184_ , pop_i , flush_i } != 3'h6;
  assign _035_ = ~ _026_;
  assign _036_ = ~ _192_;
  assign _087_ = _027_ & _036_;
  assign _088_ = _193_ & _035_;
  assign _089_ = _027_ & _193_;
  assign _130_ = _087_ | _088_;
  assign mem_n_t0 = _130_ | _089_;
  assign _048_ = | _156_;
  assign _169_ = $signed(_185_) < 0 ? 1'h0 << - _185_ : 1'h0 >> _185_;
  assign _170_ = $signed(_185_) < 0 ? _025_ << - _185_ : _025_ >> _185_;
  assign _187_ = { { 20{ _048_ } } } | _169_;
  assign _193_ = { { 20{ _048_ } } } | _170_;
  wire [19:0] _408_ = mem_q_t0;
  assign _171_ = _408_[$signed(_018_) +: 5];
  assign _030_ = ~ { 29'h00000000 , status_cnt_q_t0 };
  assign _111_ = { 29'h00000000 , status_cnt_q } | { 29'h00000000 , status_cnt_q_t0 };
  assign _167_ = _111_ - 32'd1;
  assign _168_ = _050_ - 32'd1;
  assign _162_ = _167_ ^ _168_;
  assign _152_ = _162_ | { 29'h00000000 , status_cnt_q_t0 };
  assign full_o = status_cnt_q == 3'h4;
  assign _172_ = ! status_cnt_q;
  assign _174_ = push_i && _189_;
  assign _176_ = pop_i && _190_;
  assign _178_ = push_i && pop_i;
  assign _180_ = _178_ && _189_;
  assign _182_ = _180_ && _190_;
  assign _184_ = _172_ && push_i;
  assign _018_ = read_pointer_q * 32'd5;
  assign _019_ = write_pointer_q * 32'd5;
  assign _185_ = - $signed({ 1'h0 , _019_ });
  assign _186_ = ~ _191_;
  assign _188_ = ~ push_i;
  assign _189_ = ~ full_o;
  assign _190_ = ~ empty_o;
  assign mem_n = _026_ | _192_;
  assign _001_ = flush_i ? 3'h0 : status_cnt_n;
  assign _003_ = flush_i ? 2'h0 : write_pointer_n;
  assign _000_ = flush_i ? 2'h0 : read_pointer_n;
  assign _015_ = pop_i ? 2'hx : _007_;
  assign _014_ = pop_i ? 2'hx : _004_;
  assign _016_ = pop_i ? 3'hx : _012_;
  assign status_cnt_n = _184_ ? _016_ : _012_;
  assign write_pointer_n = _184_ ? _015_ : _007_;
  assign read_pointer_n = _184_ ? _014_ : _004_;
  assign data_o = _184_ ? data_i : _194_;
  assign _012_ = _182_ ? status_cnt_q : _009_;
  assign _009_ = _176_ ? _195_[2:0] : _005_;
  assign _004_ = _176_ ? _008_ : read_pointer_q;
  assign _005_ = _174_ ? _021_[2:0] : status_cnt_q;
  assign _007_ = _174_ ? _011_ : write_pointer_q;
  assign _191_ = $signed(_185_) < 0 ? 5'h1f << - _185_ : 5'h1f >> _185_;
  assign _192_ = $signed(_185_) < 0 ? _024_ << - _185_ : _024_ >> _185_;
  wire [19:0] _409_ = mem_q;
  assign _194_ = _409_[$signed(_018_) +: 5];
  assign _195_ = status_cnt_q - 32'd1;
  assign _020_[1:0] = _011_;
  assign _023_[1:0] = _008_;
  assign _123_[1:0] = { pop_i_t0 , flush_i_t0 };
  assign usage_o = status_cnt_q[1:0];
  assign usage_o_t0 = status_cnt_q_t0[1:0];
endmodule

module paramodlzcWIDTH3200000000000000000000000000000010MODE10 (in_i, cnt_o, empty_o, empty_o_t0, in_i_t0, cnt_o_t0);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  output cnt_o;
  wire cnt_o;
  output cnt_o_t0;
  wire cnt_o_t0;
  output empty_o;
  wire empty_o;
  output empty_o_t0;
  wire empty_o_t0;
  wire [1:0] \gen_lzc.sel_nodes ;
  input [1:0] in_i;
  wire [1:0] in_i;
  input [1:0] in_i_t0;
  wire [1:0] in_i_t0;
  assign _00_ = ~ in_i[0];
  assign _01_ = ~ in_i[1];
  assign _02_ = in_i_t0[0] & _01_;
  assign _03_ = in_i_t0[1] & _00_;
  assign _04_ = in_i_t0[0] & in_i_t0[1];
  assign _05_ = _02_ | _03_;
  assign empty_o_t0 = _05_ | _04_;
  assign empty_o = ~ \gen_lzc.sel_nodes [0];
  assign \gen_lzc.sel_nodes [0] = in_i[0] | in_i[1];
  assign cnt_o = in_i[0] ? 1'h0 : 1'h1;
  assign cnt_o_t0 = in_i_t0[0];
endmodule


